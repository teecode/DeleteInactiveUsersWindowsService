#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeleteInactiveUsers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GCL_LOTTO_MASTERDB")]
	public partial class GCL_LOTTODBCONTEXTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin_Login(Admin_Login instance);
    partial void UpdateAdmin_Login(Admin_Login instance);
    partial void DeleteAdmin_Login(Admin_Login instance);
    partial void InsertWebPay_Response(WebPay_Response instance);
    partial void UpdateWebPay_Response(WebPay_Response instance);
    partial void DeleteWebPay_Response(WebPay_Response instance);
    partial void InsertAdmin_Login_Log(Admin_Login_Log instance);
    partial void UpdateAdmin_Login_Log(Admin_Login_Log instance);
    partial void DeleteAdmin_Login_Log(Admin_Login_Log instance);
    partial void InsertAdmin_Login_Role(Admin_Login_Role instance);
    partial void UpdateAdmin_Login_Role(Admin_Login_Role instance);
    partial void DeleteAdmin_Login_Role(Admin_Login_Role instance);
    partial void InsertAdmin_Login_Role_Access(Admin_Login_Role_Access instance);
    partial void UpdateAdmin_Login_Role_Access(Admin_Login_Role_Access instance);
    partial void DeleteAdmin_Login_Role_Access(Admin_Login_Role_Access instance);
    partial void InsertAdmin_User(Admin_User instance);
    partial void UpdateAdmin_User(Admin_User instance);
    partial void DeleteAdmin_User(Admin_User instance);
    partial void InsertAdmin_User_Role_Access(Admin_User_Role_Access instance);
    partial void UpdateAdmin_User_Role_Access(Admin_User_Role_Access instance);
    partial void DeleteAdmin_User_Role_Access(Admin_User_Role_Access instance);
    partial void InsertAffiliate(Affiliate instance);
    partial void UpdateAffiliate(Affiliate instance);
    partial void DeleteAffiliate(Affiliate instance);
    partial void InsertAffiliate_Balance_Sheet(Affiliate_Balance_Sheet instance);
    partial void UpdateAffiliate_Balance_Sheet(Affiliate_Balance_Sheet instance);
    partial void DeleteAffiliate_Balance_Sheet(Affiliate_Balance_Sheet instance);
    partial void InsertAffiliate_Daily_Game_Sale(Affiliate_Daily_Game_Sale instance);
    partial void UpdateAffiliate_Daily_Game_Sale(Affiliate_Daily_Game_Sale instance);
    partial void DeleteAffiliate_Daily_Game_Sale(Affiliate_Daily_Game_Sale instance);
    partial void InsertAffiliate_Lodgement_Reimbursement(Affiliate_Lodgement_Reimbursement instance);
    partial void UpdateAffiliate_Lodgement_Reimbursement(Affiliate_Lodgement_Reimbursement instance);
    partial void DeleteAffiliate_Lodgement_Reimbursement(Affiliate_Lodgement_Reimbursement instance);
    partial void InsertAffiliate_Login(Affiliate_Login instance);
    partial void UpdateAffiliate_Login(Affiliate_Login instance);
    partial void DeleteAffiliate_Login(Affiliate_Login instance);
    partial void InsertAffiliate_Login_Log(Affiliate_Login_Log instance);
    partial void UpdateAffiliate_Login_Log(Affiliate_Login_Log instance);
    partial void DeleteAffiliate_Login_Log(Affiliate_Login_Log instance);
    partial void InsertAffiliate_Setting(Affiliate_Setting instance);
    partial void UpdateAffiliate_Setting(Affiliate_Setting instance);
    partial void DeleteAffiliate_Setting(Affiliate_Setting instance);
    partial void InsertAffiliate_Transaction(Affiliate_Transaction instance);
    partial void UpdateAffiliate_Transaction(Affiliate_Transaction instance);
    partial void DeleteAffiliate_Transaction(Affiliate_Transaction instance);
    partial void InsertAffiliate_Wallet(Affiliate_Wallet instance);
    partial void UpdateAffiliate_Wallet(Affiliate_Wallet instance);
    partial void DeleteAffiliate_Wallet(Affiliate_Wallet instance);
    partial void InsertAffiliate_Wallet_Transaction(Affiliate_Wallet_Transaction instance);
    partial void UpdateAffiliate_Wallet_Transaction(Affiliate_Wallet_Transaction instance);
    partial void DeleteAffiliate_Wallet_Transaction(Affiliate_Wallet_Transaction instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertBank_Account_Type(Bank_Account_Type instance);
    partial void UpdateBank_Account_Type(Bank_Account_Type instance);
    partial void DeleteBank_Account_Type(Bank_Account_Type instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertBet(Bet instance);
    partial void UpdateBet(Bet instance);
    partial void DeleteBet(Bet instance);
    partial void InsertBet_Type(Bet_Type instance);
    partial void UpdateBet_Type(Bet_Type instance);
    partial void DeleteBet_Type(Bet_Type instance);
    partial void InsertBonus(Bonus instance);
    partial void UpdateBonus(Bonus instance);
    partial void DeleteBonus(Bonus instance);
    partial void InsertBonus_Condition(Bonus_Condition instance);
    partial void UpdateBonus_Condition(Bonus_Condition instance);
    partial void DeleteBonus_Condition(Bonus_Condition instance);
    partial void InsertBonus_Log(Bonus_Log instance);
    partial void UpdateBonus_Log(Bonus_Log instance);
    partial void DeleteBonus_Log(Bonus_Log instance);
    partial void InsertBonus_Type(Bonus_Type instance);
    partial void UpdateBonus_Type(Bonus_Type instance);
    partial void DeleteBonus_Type(Bonus_Type instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertConfig_Operation_Mode(Config_Operation_Mode instance);
    partial void UpdateConfig_Operation_Mode(Config_Operation_Mode instance);
    partial void DeleteConfig_Operation_Mode(Config_Operation_Mode instance);
    partial void InsertConfig_Payout_Type(Config_Payout_Type instance);
    partial void UpdateConfig_Payout_Type(Config_Payout_Type instance);
    partial void DeleteConfig_Payout_Type(Config_Payout_Type instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomer_Account(Customer_Account instance);
    partial void UpdateCustomer_Account(Customer_Account instance);
    partial void DeleteCustomer_Account(Customer_Account instance);
    partial void InsertCustomer_Account_Status(Customer_Account_Status instance);
    partial void UpdateCustomer_Account_Status(Customer_Account_Status instance);
    partial void DeleteCustomer_Account_Status(Customer_Account_Status instance);
    partial void InsertCustomer_Bank_Account_Update_Log(Customer_Bank_Account_Update_Log instance);
    partial void UpdateCustomer_Bank_Account_Update_Log(Customer_Bank_Account_Update_Log instance);
    partial void DeleteCustomer_Bank_Account_Update_Log(Customer_Bank_Account_Update_Log instance);
    partial void InsertCustomer_Category(Customer_Category instance);
    partial void UpdateCustomer_Category(Customer_Category instance);
    partial void DeleteCustomer_Category(Customer_Category instance);
    partial void InsertCustomer_Deposit(Customer_Deposit instance);
    partial void UpdateCustomer_Deposit(Customer_Deposit instance);
    partial void DeleteCustomer_Deposit(Customer_Deposit instance);
    partial void InsertCustomer_Deposit_Payout_Type(Customer_Deposit_Payout_Type instance);
    partial void UpdateCustomer_Deposit_Payout_Type(Customer_Deposit_Payout_Type instance);
    partial void DeleteCustomer_Deposit_Payout_Type(Customer_Deposit_Payout_Type instance);
    partial void InsertCustomer_Deposit_Request(Customer_Deposit_Request instance);
    partial void UpdateCustomer_Deposit_Request(Customer_Deposit_Request instance);
    partial void DeleteCustomer_Deposit_Request(Customer_Deposit_Request instance);
    partial void InsertCustomer_Deposit_Status(Customer_Deposit_Status instance);
    partial void UpdateCustomer_Deposit_Status(Customer_Deposit_Status instance);
    partial void DeleteCustomer_Deposit_Status(Customer_Deposit_Status instance);
    partial void InsertCustomer_Login(Customer_Login instance);
    partial void UpdateCustomer_Login(Customer_Login instance);
    partial void DeleteCustomer_Login(Customer_Login instance);
    partial void InsertCustomer_Login_Log(Customer_Login_Log instance);
    partial void UpdateCustomer_Login_Log(Customer_Login_Log instance);
    partial void DeleteCustomer_Login_Log(Customer_Login_Log instance);
    partial void InsertCustomer_Modification_Log(Customer_Modification_Log instance);
    partial void UpdateCustomer_Modification_Log(Customer_Modification_Log instance);
    partial void DeleteCustomer_Modification_Log(Customer_Modification_Log instance);
    partial void InsertCustomer_Payout(Customer_Payout instance);
    partial void UpdateCustomer_Payout(Customer_Payout instance);
    partial void DeleteCustomer_Payout(Customer_Payout instance);
    partial void InsertCustomer_Payout_Request(Customer_Payout_Request instance);
    partial void UpdateCustomer_Payout_Request(Customer_Payout_Request instance);
    partial void DeleteCustomer_Payout_Request(Customer_Payout_Request instance);
    partial void InsertCustomer_Payout_Request_Log(Customer_Payout_Request_Log instance);
    partial void UpdateCustomer_Payout_Request_Log(Customer_Payout_Request_Log instance);
    partial void DeleteCustomer_Payout_Request_Log(Customer_Payout_Request_Log instance);
    partial void InsertCustomer_Payout_Status(Customer_Payout_Status instance);
    partial void UpdateCustomer_Payout_Status(Customer_Payout_Status instance);
    partial void DeleteCustomer_Payout_Status(Customer_Payout_Status instance);
    partial void InsertCustomer_Setting(Customer_Setting instance);
    partial void UpdateCustomer_Setting(Customer_Setting instance);
    partial void DeleteCustomer_Setting(Customer_Setting instance);
    partial void Insertcustomer_terminal_allocation(customer_terminal_allocation instance);
    partial void Updatecustomer_terminal_allocation(customer_terminal_allocation instance);
    partial void Deletecustomer_terminal_allocation(customer_terminal_allocation instance);
    partial void InsertCustomer_Transaction(Customer_Transaction instance);
    partial void UpdateCustomer_Transaction(Customer_Transaction instance);
    partial void DeleteCustomer_Transaction(Customer_Transaction instance);
    partial void InsertCustomer_Type(Customer_Type instance);
    partial void UpdateCustomer_Type(Customer_Type instance);
    partial void DeleteCustomer_Type(Customer_Type instance);
    partial void InsertCustomer_Wallet(Customer_Wallet instance);
    partial void UpdateCustomer_Wallet(Customer_Wallet instance);
    partial void DeleteCustomer_Wallet(Customer_Wallet instance);
    partial void InsertDaily_Game(Daily_Game instance);
    partial void UpdateDaily_Game(Daily_Game instance);
    partial void DeleteDaily_Game(Daily_Game instance);
    partial void InsertDaily_Game_Result(Daily_Game_Result instance);
    partial void UpdateDaily_Game_Result(Daily_Game_Result instance);
    partial void DeleteDaily_Game_Result(Daily_Game_Result instance);
    partial void InsertDepositor_Payout_Detail(Depositor_Payout_Detail instance);
    partial void UpdateDepositor_Payout_Detail(Depositor_Payout_Detail instance);
    partial void DeleteDepositor_Payout_Detail(Depositor_Payout_Detail instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertGame_Type(Game_Type instance);
    partial void UpdateGame_Type(Game_Type instance);
    partial void DeleteGame_Type(Game_Type instance);
    partial void InsertMail(Mail instance);
    partial void UpdateMail(Mail instance);
    partial void DeleteMail(Mail instance);
    partial void Insertmessage(message instance);
    partial void Updatemessage(message instance);
    partial void Deletemessage(message instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertOperation_Mode(Operation_Mode instance);
    partial void UpdateOperation_Mode(Operation_Mode instance);
    partial void DeleteOperation_Mode(Operation_Mode instance);
    partial void InsertOperational_Configuration(Operational_Configuration instance);
    partial void UpdateOperational_Configuration(Operational_Configuration instance);
    partial void DeleteOperational_Configuration(Operational_Configuration instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void Insertpayment_type(payment_type instance);
    partial void Updatepayment_type(payment_type instance);
    partial void Deletepayment_type(payment_type instance);
    partial void InsertPriviledge(Priviledge instance);
    partial void UpdatePriviledge(Priviledge instance);
    partial void DeletePriviledge(Priviledge instance);
    partial void InsertPromo_Draw(Promo_Draw instance);
    partial void UpdatePromo_Draw(Promo_Draw instance);
    partial void DeletePromo_Draw(Promo_Draw instance);
    partial void InsertPromo_Ticket(Promo_Ticket instance);
    partial void UpdatePromo_Ticket(Promo_Ticket instance);
    partial void DeletePromo_Ticket(Promo_Ticket instance);
    partial void InsertRequest_Response_Type(Request_Response_Type instance);
    partial void UpdateRequest_Response_Type(Request_Response_Type instance);
    partial void DeleteRequest_Response_Type(Request_Response_Type instance);
    partial void InsertRequests_Response(Requests_Response instance);
    partial void UpdateRequests_Response(Requests_Response instance);
    partial void DeleteRequests_Response(Requests_Response instance);
    partial void InsertService_Error(Service_Error instance);
    partial void UpdateService_Error(Service_Error instance);
    partial void DeleteService_Error(Service_Error instance);
    partial void InsertShop(Shop instance);
    partial void UpdateShop(Shop instance);
    partial void DeleteShop(Shop instance);
    partial void InsertShop_Balance_Sheet(Shop_Balance_Sheet instance);
    partial void UpdateShop_Balance_Sheet(Shop_Balance_Sheet instance);
    partial void DeleteShop_Balance_Sheet(Shop_Balance_Sheet instance);
    partial void InsertShop_Credit(Shop_Credit instance);
    partial void UpdateShop_Credit(Shop_Credit instance);
    partial void DeleteShop_Credit(Shop_Credit instance);
    partial void InsertShop_Daily_Game_Sale(Shop_Daily_Game_Sale instance);
    partial void UpdateShop_Daily_Game_Sale(Shop_Daily_Game_Sale instance);
    partial void DeleteShop_Daily_Game_Sale(Shop_Daily_Game_Sale instance);
    partial void InsertShop_Daily_Sale(Shop_Daily_Sale instance);
    partial void UpdateShop_Daily_Sale(Shop_Daily_Sale instance);
    partial void DeleteShop_Daily_Sale(Shop_Daily_Sale instance);
    partial void InsertShop_Lodgement_Reimbursement(Shop_Lodgement_Reimbursement instance);
    partial void UpdateShop_Lodgement_Reimbursement(Shop_Lodgement_Reimbursement instance);
    partial void DeleteShop_Lodgement_Reimbursement(Shop_Lodgement_Reimbursement instance);
    partial void InsertShop_Setting(Shop_Setting instance);
    partial void UpdateShop_Setting(Shop_Setting instance);
    partial void DeleteShop_Setting(Shop_Setting instance);
    partial void InsertShop_Transaction(Shop_Transaction instance);
    partial void UpdateShop_Transaction(Shop_Transaction instance);
    partial void DeleteShop_Transaction(Shop_Transaction instance);
    partial void InsertShop_Type(Shop_Type instance);
    partial void UpdateShop_Type(Shop_Type instance);
    partial void DeleteShop_Type(Shop_Type instance);
    partial void InsertShop_Wallet(Shop_Wallet instance);
    partial void UpdateShop_Wallet(Shop_Wallet instance);
    partial void DeleteShop_Wallet(Shop_Wallet instance);
    partial void InsertShop_Wallet_Transaction(Shop_Wallet_Transaction instance);
    partial void UpdateShop_Wallet_Transaction(Shop_Wallet_Transaction instance);
    partial void DeleteShop_Wallet_Transaction(Shop_Wallet_Transaction instance);
    partial void InsertSms_Vendor(Sms_Vendor instance);
    partial void UpdateSms_Vendor(Sms_Vendor instance);
    partial void DeleteSms_Vendor(Sms_Vendor instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void Inserttempsale(tempsale instance);
    partial void Updatetempsale(tempsale instance);
    partial void Deletetempsale(tempsale instance);
    partial void InsertTerminal(Terminal instance);
    partial void UpdateTerminal(Terminal instance);
    partial void DeleteTerminal(Terminal instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertTicket_Action(Ticket_Action instance);
    partial void UpdateTicket_Action(Ticket_Action instance);
    partial void DeleteTicket_Action(Ticket_Action instance);
    partial void InsertTicket_History(Ticket_History instance);
    partial void UpdateTicket_History(Ticket_History instance);
    partial void DeleteTicket_History(Ticket_History instance);
    partial void InsertTicket_Registration_Method(Ticket_Registration_Method instance);
    partial void UpdateTicket_Registration_Method(Ticket_Registration_Method instance);
    partial void DeleteTicket_Registration_Method(Ticket_Registration_Method instance);
    partial void InsertTicket_Service_Response(Ticket_Service_Response instance);
    partial void UpdateTicket_Service_Response(Ticket_Service_Response instance);
    partial void DeleteTicket_Service_Response(Ticket_Service_Response instance);
    partial void Insertticket_service_response_type(ticket_service_response_type instance);
    partial void Updateticket_service_response_type(ticket_service_response_type instance);
    partial void Deleteticket_service_response_type(ticket_service_response_type instance);
    partial void InsertTicket_Status(Ticket_Status instance);
    partial void UpdateTicket_Status(Ticket_Status instance);
    partial void DeleteTicket_Status(Ticket_Status instance);
    partial void InsertTicket_Type(Ticket_Type instance);
    partial void UpdateTicket_Type(Ticket_Type instance);
    partial void DeleteTicket_Type(Ticket_Type instance);
    partial void InsertTransaction_Category(Transaction_Category instance);
    partial void UpdateTransaction_Category(Transaction_Category instance);
    partial void DeleteTransaction_Category(Transaction_Category instance);
    partial void InsertVoucher(Voucher instance);
    partial void UpdateVoucher(Voucher instance);
    partial void DeleteVoucher(Voucher instance);
    partial void Insertweb_pay_request_response(web_pay_request_response instance);
    partial void Updateweb_pay_request_response(web_pay_request_response instance);
    partial void Deleteweb_pay_request_response(web_pay_request_response instance);
    partial void InsertDeleted_Customer(Deleted_Customer instance);
    partial void UpdateDeleted_Customer(Deleted_Customer instance);
    partial void DeleteDeleted_Customer(Deleted_Customer instance);
    #endregion
		
		public GCL_LOTTODBCONTEXTDataContext() : 
				base(global::DeleteInactiveUsers.Properties.Settings.Default.GCL_LOTTO_MASTERDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public GCL_LOTTODBCONTEXTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GCL_LOTTODBCONTEXTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GCL_LOTTODBCONTEXTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GCL_LOTTODBCONTEXTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin_Login> Admin_Logins
		{
			get
			{
				return this.GetTable<Admin_Login>();
			}
		}
		
		public System.Data.Linq.Table<WebPay_Response> WebPay_Responses
		{
			get
			{
				return this.GetTable<WebPay_Response>();
			}
		}
		
		public System.Data.Linq.Table<Admin_Login_Log> Admin_Login_Logs
		{
			get
			{
				return this.GetTable<Admin_Login_Log>();
			}
		}
		
		public System.Data.Linq.Table<Admin_Login_Role> Admin_Login_Roles
		{
			get
			{
				return this.GetTable<Admin_Login_Role>();
			}
		}
		
		public System.Data.Linq.Table<Admin_Login_Role_Access> Admin_Login_Role_Accesses
		{
			get
			{
				return this.GetTable<Admin_Login_Role_Access>();
			}
		}
		
		public System.Data.Linq.Table<Admin_User> Admin_Users
		{
			get
			{
				return this.GetTable<Admin_User>();
			}
		}
		
		public System.Data.Linq.Table<Admin_User_Role_Access> Admin_User_Role_Accesses
		{
			get
			{
				return this.GetTable<Admin_User_Role_Access>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate> Affiliates
		{
			get
			{
				return this.GetTable<Affiliate>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Balance_Sheet> Affiliate_Balance_Sheets
		{
			get
			{
				return this.GetTable<Affiliate_Balance_Sheet>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Daily_Game_Sale> Affiliate_Daily_Game_Sales
		{
			get
			{
				return this.GetTable<Affiliate_Daily_Game_Sale>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Lodgement_Reimbursement> Affiliate_Lodgement_Reimbursements
		{
			get
			{
				return this.GetTable<Affiliate_Lodgement_Reimbursement>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Login> Affiliate_Logins
		{
			get
			{
				return this.GetTable<Affiliate_Login>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Login_Log> Affiliate_Login_Logs
		{
			get
			{
				return this.GetTable<Affiliate_Login_Log>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Setting> Affiliate_Settings
		{
			get
			{
				return this.GetTable<Affiliate_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Transaction> Affiliate_Transactions
		{
			get
			{
				return this.GetTable<Affiliate_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Wallet> Affiliate_Wallets
		{
			get
			{
				return this.GetTable<Affiliate_Wallet>();
			}
		}
		
		public System.Data.Linq.Table<Affiliate_Wallet_Transaction> Affiliate_Wallet_Transactions
		{
			get
			{
				return this.GetTable<Affiliate_Wallet_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<Bank_Account_Type> Bank_Account_Types
		{
			get
			{
				return this.GetTable<Bank_Account_Type>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Bet> Bets
		{
			get
			{
				return this.GetTable<Bet>();
			}
		}
		
		public System.Data.Linq.Table<Bet_Type> Bet_Types
		{
			get
			{
				return this.GetTable<Bet_Type>();
			}
		}
		
		public System.Data.Linq.Table<Bonus> Bonus
		{
			get
			{
				return this.GetTable<Bonus>();
			}
		}
		
		public System.Data.Linq.Table<Bonus_Condition> Bonus_Conditions
		{
			get
			{
				return this.GetTable<Bonus_Condition>();
			}
		}
		
		public System.Data.Linq.Table<Bonus_Log> Bonus_Logs
		{
			get
			{
				return this.GetTable<Bonus_Log>();
			}
		}
		
		public System.Data.Linq.Table<Bonus_Type> Bonus_Types
		{
			get
			{
				return this.GetTable<Bonus_Type>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Config_Operation_Mode> Config_Operation_Modes
		{
			get
			{
				return this.GetTable<Config_Operation_Mode>();
			}
		}
		
		public System.Data.Linq.Table<Config_Payout_Type> Config_Payout_Types
		{
			get
			{
				return this.GetTable<Config_Payout_Type>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Account> Customer_Accounts
		{
			get
			{
				return this.GetTable<Customer_Account>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Account_Status> Customer_Account_Status
		{
			get
			{
				return this.GetTable<Customer_Account_Status>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Bank_Account_Update_Log> Customer_Bank_Account_Update_Logs
		{
			get
			{
				return this.GetTable<Customer_Bank_Account_Update_Log>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Category> Customer_Categories
		{
			get
			{
				return this.GetTable<Customer_Category>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Deposit> Customer_Deposits
		{
			get
			{
				return this.GetTable<Customer_Deposit>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Deposit_Payout_Type> Customer_Deposit_Payout_Types
		{
			get
			{
				return this.GetTable<Customer_Deposit_Payout_Type>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Deposit_Request> Customer_Deposit_Requests
		{
			get
			{
				return this.GetTable<Customer_Deposit_Request>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Deposit_Status> Customer_Deposit_Status
		{
			get
			{
				return this.GetTable<Customer_Deposit_Status>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Login> Customer_Logins
		{
			get
			{
				return this.GetTable<Customer_Login>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Login_Log> Customer_Login_Logs
		{
			get
			{
				return this.GetTable<Customer_Login_Log>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Modification_Log> Customer_Modification_Logs
		{
			get
			{
				return this.GetTable<Customer_Modification_Log>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this.GetTable<Customer_Payout>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this.GetTable<Customer_Payout_Request>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Payout_Request_Log> Customer_Payout_Request_Logs
		{
			get
			{
				return this.GetTable<Customer_Payout_Request_Log>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Payout_Status> Customer_Payout_Status
		{
			get
			{
				return this.GetTable<Customer_Payout_Status>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Setting> Customer_Settings
		{
			get
			{
				return this.GetTable<Customer_Setting>();
			}
		}
		
		public System.Data.Linq.Table<customer_terminal_allocation> customer_terminal_allocations
		{
			get
			{
				return this.GetTable<customer_terminal_allocation>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Transaction> Customer_Transactions
		{
			get
			{
				return this.GetTable<Customer_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Type> Customer_Types
		{
			get
			{
				return this.GetTable<Customer_Type>();
			}
		}
		
		public System.Data.Linq.Table<Customer_Wallet> Customer_Wallets
		{
			get
			{
				return this.GetTable<Customer_Wallet>();
			}
		}
		
		public System.Data.Linq.Table<Daily_Game> Daily_Games
		{
			get
			{
				return this.GetTable<Daily_Game>();
			}
		}
		
		public System.Data.Linq.Table<Daily_Game_Result> Daily_Game_Results
		{
			get
			{
				return this.GetTable<Daily_Game_Result>();
			}
		}
		
		public System.Data.Linq.Table<Depositor_Payout_Detail> Depositor_Payout_Details
		{
			get
			{
				return this.GetTable<Depositor_Payout_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<Game_Type> Game_Types
		{
			get
			{
				return this.GetTable<Game_Type>();
			}
		}
		
		public System.Data.Linq.Table<Mail> Mails
		{
			get
			{
				return this.GetTable<Mail>();
			}
		}
		
		public System.Data.Linq.Table<Mail_Validity> Mail_Validities
		{
			get
			{
				return this.GetTable<Mail_Validity>();
			}
		}
		
		public System.Data.Linq.Table<message> messages
		{
			get
			{
				return this.GetTable<message>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<Operation_Mode> Operation_Modes
		{
			get
			{
				return this.GetTable<Operation_Mode>();
			}
		}
		
		public System.Data.Linq.Table<Operational_Configuration> Operational_Configurations
		{
			get
			{
				return this.GetTable<Operational_Configuration>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<payment_type> payment_types
		{
			get
			{
				return this.GetTable<payment_type>();
			}
		}
		
		public System.Data.Linq.Table<Priviledge> Priviledges
		{
			get
			{
				return this.GetTable<Priviledge>();
			}
		}
		
		public System.Data.Linq.Table<Promo_Draw> Promo_Draws
		{
			get
			{
				return this.GetTable<Promo_Draw>();
			}
		}
		
		public System.Data.Linq.Table<Promo_Ticket> Promo_Tickets
		{
			get
			{
				return this.GetTable<Promo_Ticket>();
			}
		}
		
		public System.Data.Linq.Table<Request_Response_Type> Request_Response_Types
		{
			get
			{
				return this.GetTable<Request_Response_Type>();
			}
		}
		
		public System.Data.Linq.Table<Requests_Response> Requests_Responses
		{
			get
			{
				return this.GetTable<Requests_Response>();
			}
		}
		
		public System.Data.Linq.Table<Service_Error> Service_Errors
		{
			get
			{
				return this.GetTable<Service_Error>();
			}
		}
		
		public System.Data.Linq.Table<Shop> Shops
		{
			get
			{
				return this.GetTable<Shop>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Balance_Sheet> Shop_Balance_Sheets
		{
			get
			{
				return this.GetTable<Shop_Balance_Sheet>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Credit> Shop_Credits
		{
			get
			{
				return this.GetTable<Shop_Credit>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Daily_Game_Sale> Shop_Daily_Game_Sales
		{
			get
			{
				return this.GetTable<Shop_Daily_Game_Sale>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Daily_Sale> Shop_Daily_Sales
		{
			get
			{
				return this.GetTable<Shop_Daily_Sale>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Lodgement_Reimbursement> Shop_Lodgement_Reimbursements
		{
			get
			{
				return this.GetTable<Shop_Lodgement_Reimbursement>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Setting> Shop_Settings
		{
			get
			{
				return this.GetTable<Shop_Setting>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Transaction> Shop_Transactions
		{
			get
			{
				return this.GetTable<Shop_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Type> Shop_Types
		{
			get
			{
				return this.GetTable<Shop_Type>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Wallet> Shop_Wallets
		{
			get
			{
				return this.GetTable<Shop_Wallet>();
			}
		}
		
		public System.Data.Linq.Table<Shop_Wallet_Transaction> Shop_Wallet_Transactions
		{
			get
			{
				return this.GetTable<Shop_Wallet_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Sm> Sms
		{
			get
			{
				return this.GetTable<Sm>();
			}
		}
		
		public System.Data.Linq.Table<Sms_Vendor> Sms_Vendors
		{
			get
			{
				return this.GetTable<Sms_Vendor>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<temp_tab> temp_tabs
		{
			get
			{
				return this.GetTable<temp_tab>();
			}
		}
		
		public System.Data.Linq.Table<tempsale> tempsales
		{
			get
			{
				return this.GetTable<tempsale>();
			}
		}
		
		public System.Data.Linq.Table<Terminal> Terminals
		{
			get
			{
				return this.GetTable<Terminal>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Action> Ticket_Actions
		{
			get
			{
				return this.GetTable<Ticket_Action>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_History> Ticket_Histories
		{
			get
			{
				return this.GetTable<Ticket_History>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Registration_Method> Ticket_Registration_Methods
		{
			get
			{
				return this.GetTable<Ticket_Registration_Method>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Service_Response> Ticket_Service_Responses
		{
			get
			{
				return this.GetTable<Ticket_Service_Response>();
			}
		}
		
		public System.Data.Linq.Table<ticket_service_response_type> ticket_service_response_types
		{
			get
			{
				return this.GetTable<ticket_service_response_type>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Status> Ticket_Status
		{
			get
			{
				return this.GetTable<Ticket_Status>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Type> Ticket_Types
		{
			get
			{
				return this.GetTable<Ticket_Type>();
			}
		}
		
		public System.Data.Linq.Table<Transaction_Category> Transaction_Categories
		{
			get
			{
				return this.GetTable<Transaction_Category>();
			}
		}
		
		public System.Data.Linq.Table<Voucher> Vouchers
		{
			get
			{
				return this.GetTable<Voucher>();
			}
		}
		
		public System.Data.Linq.Table<web_pay_request_response> web_pay_request_responses
		{
			get
			{
				return this.GetTable<web_pay_request_response>();
			}
		}
		
		public System.Data.Linq.Table<Deleted_Customer> Deleted_Customers
		{
			get
			{
				return this.GetTable<Deleted_Customer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteCustomer")]
		public int deleteCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> customerid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerid);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_Login")]
	public partial class Admin_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private int _admin_login_role;
		
		private bool _is_active;
		
		private bool _is_verified;
		
		private EntitySet<Admin_Login_Log> _Admin_Login_Logs;
		
		private EntityRef<Admin_Login_Role> _Admin_Login_Role1;
		
		private EntityRef<Admin_User> _Admin_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onadmin_login_roleChanging(int value);
    partial void Onadmin_login_roleChanged();
    partial void Onis_activeChanging(bool value);
    partial void Onis_activeChanged();
    partial void Onis_verifiedChanging(bool value);
    partial void Onis_verifiedChanged();
    #endregion
		
		public Admin_Login()
		{
			this._Admin_Login_Logs = new EntitySet<Admin_Login_Log>(new Action<Admin_Login_Log>(this.attach_Admin_Login_Logs), new Action<Admin_Login_Log>(this.detach_Admin_Login_Logs));
			this._Admin_Login_Role1 = default(EntityRef<Admin_Login_Role>);
			this._Admin_User = default(EntityRef<Admin_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Admin_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_login_role", DbType="Int NOT NULL")]
		public int admin_login_role
		{
			get
			{
				return this._admin_login_role;
			}
			set
			{
				if ((this._admin_login_role != value))
				{
					if (this._Admin_Login_Role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_login_roleChanging(value);
					this.SendPropertyChanging();
					this._admin_login_role = value;
					this.SendPropertyChanged("admin_login_role");
					this.Onadmin_login_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit NOT NULL")]
		public bool is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_verified", DbType="Bit NOT NULL")]
		public bool is_verified
		{
			get
			{
				return this._is_verified;
			}
			set
			{
				if ((this._is_verified != value))
				{
					this.Onis_verifiedChanging(value);
					this.SendPropertyChanging();
					this._is_verified = value;
					this.SendPropertyChanged("is_verified");
					this.Onis_verifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Login_Admin_Login_Log", Storage="_Admin_Login_Logs", ThisKey="id", OtherKey="admin_login")]
		public EntitySet<Admin_Login_Log> Admin_Login_Logs
		{
			get
			{
				return this._Admin_Login_Logs;
			}
			set
			{
				this._Admin_Login_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Login_Role_Admin_Login", Storage="_Admin_Login_Role1", ThisKey="admin_login_role", OtherKey="id", IsForeignKey=true)]
		public Admin_Login_Role Admin_Login_Role1
		{
			get
			{
				return this._Admin_Login_Role1.Entity;
			}
			set
			{
				Admin_Login_Role previousValue = this._Admin_Login_Role1.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Login_Role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Login_Role1.Entity = null;
						previousValue.Admin_Logins.Remove(this);
					}
					this._Admin_Login_Role1.Entity = value;
					if ((value != null))
					{
						value.Admin_Logins.Add(this);
						this._admin_login_role = value.id;
					}
					else
					{
						this._admin_login_role = default(int);
					}
					this.SendPropertyChanged("Admin_Login_Role1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Admin_Login", Storage="_Admin_User", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Admin_User Admin_User
		{
			get
			{
				return this._Admin_User.Entity;
			}
			set
			{
				Admin_User previousValue = this._Admin_User.Entity;
				if (((previousValue != value) 
							|| (this._Admin_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_User.Entity = null;
						previousValue.Admin_Login = null;
					}
					this._Admin_User.Entity = value;
					if ((value != null))
					{
						value.Admin_Login = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Admin_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admin_Login_Logs(Admin_Login_Log entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Login1 = this;
		}
		
		private void detach_Admin_Login_Logs(Admin_Login_Log entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Login1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebPay_Response")]
	public partial class WebPay_Response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _deposit_request;
		
		private string _payRef;
		
		private string _retRef;
		
		private string _txn_ref;
		
		private string _cardnum;
		
		private string _apprAmt;
		
		private EntityRef<Customer_Deposit_Request> _Customer_Deposit_Request;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondeposit_requestChanging(int value);
    partial void Ondeposit_requestChanged();
    partial void OnpayRefChanging(string value);
    partial void OnpayRefChanged();
    partial void OnretRefChanging(string value);
    partial void OnretRefChanged();
    partial void Ontxn_refChanging(string value);
    partial void Ontxn_refChanged();
    partial void OncardnumChanging(string value);
    partial void OncardnumChanged();
    partial void OnapprAmtChanging(string value);
    partial void OnapprAmtChanged();
    #endregion
		
		public WebPay_Response()
		{
			this._Customer_Deposit_Request = default(EntityRef<Customer_Deposit_Request>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deposit_request", DbType="Int NOT NULL")]
		public int deposit_request
		{
			get
			{
				return this._deposit_request;
			}
			set
			{
				if ((this._deposit_request != value))
				{
					if (this._Customer_Deposit_Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondeposit_requestChanging(value);
					this.SendPropertyChanging();
					this._deposit_request = value;
					this.SendPropertyChanged("deposit_request");
					this.Ondeposit_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payRef", DbType="VarChar(100)")]
		public string payRef
		{
			get
			{
				return this._payRef;
			}
			set
			{
				if ((this._payRef != value))
				{
					this.OnpayRefChanging(value);
					this.SendPropertyChanging();
					this._payRef = value;
					this.SendPropertyChanged("payRef");
					this.OnpayRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retRef", DbType="VarChar(100)")]
		public string retRef
		{
			get
			{
				return this._retRef;
			}
			set
			{
				if ((this._retRef != value))
				{
					this.OnretRefChanging(value);
					this.SendPropertyChanging();
					this._retRef = value;
					this.SendPropertyChanged("retRef");
					this.OnretRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txn_ref", DbType="VarChar(100)")]
		public string txn_ref
		{
			get
			{
				return this._txn_ref;
			}
			set
			{
				if ((this._txn_ref != value))
				{
					this.Ontxn_refChanging(value);
					this.SendPropertyChanging();
					this._txn_ref = value;
					this.SendPropertyChanged("txn_ref");
					this.Ontxn_refChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cardnum", DbType="VarChar(50)")]
		public string cardnum
		{
			get
			{
				return this._cardnum;
			}
			set
			{
				if ((this._cardnum != value))
				{
					this.OncardnumChanging(value);
					this.SendPropertyChanging();
					this._cardnum = value;
					this.SendPropertyChanged("cardnum");
					this.OncardnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apprAmt", DbType="VarChar(50)")]
		public string apprAmt
		{
			get
			{
				return this._apprAmt;
			}
			set
			{
				if ((this._apprAmt != value))
				{
					this.OnapprAmtChanging(value);
					this.SendPropertyChanging();
					this._apprAmt = value;
					this.SendPropertyChanged("apprAmt");
					this.OnapprAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Request_WebPay_Response", Storage="_Customer_Deposit_Request", ThisKey="deposit_request", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Request Customer_Deposit_Request
		{
			get
			{
				return this._Customer_Deposit_Request.Entity;
			}
			set
			{
				Customer_Deposit_Request previousValue = this._Customer_Deposit_Request.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Request.Entity = null;
						previousValue.WebPay_Responses.Remove(this);
					}
					this._Customer_Deposit_Request.Entity = value;
					if ((value != null))
					{
						value.WebPay_Responses.Add(this);
						this._deposit_request = value.id;
					}
					else
					{
						this._deposit_request = default(int);
					}
					this.SendPropertyChanged("Customer_Deposit_Request");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_Login_Log")]
	public partial class Admin_Login_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _admin_login;
		
		private string _password;
		
		private System.DateTime _timein;
		
		private System.Nullable<System.DateTime> _timeout;
		
		private bool _status;
		
		private string _module;
		
		private string _ip;
		
		private EntityRef<Admin_Login> _Admin_Login1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onadmin_loginChanging(int value);
    partial void Onadmin_loginChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntimeinChanging(System.DateTime value);
    partial void OntimeinChanged();
    partial void OntimeoutChanging(System.Nullable<System.DateTime> value);
    partial void OntimeoutChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OnmoduleChanging(string value);
    partial void OnmoduleChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    #endregion
		
		public Admin_Login_Log()
		{
			this._Admin_Login1 = default(EntityRef<Admin_Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_login", DbType="Int NOT NULL")]
		public int admin_login
		{
			get
			{
				return this._admin_login;
			}
			set
			{
				if ((this._admin_login != value))
				{
					if (this._Admin_Login1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_loginChanging(value);
					this.SendPropertyChanging();
					this._admin_login = value;
					this.SendPropertyChanged("admin_login");
					this.Onadmin_loginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(300)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timein", DbType="DateTime NOT NULL")]
		public System.DateTime timein
		{
			get
			{
				return this._timein;
			}
			set
			{
				if ((this._timein != value))
				{
					this.OntimeinChanging(value);
					this.SendPropertyChanging();
					this._timein = value;
					this.SendPropertyChanged("timein");
					this.OntimeinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeout", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeout
		{
			get
			{
				return this._timeout;
			}
			set
			{
				if ((this._timeout != value))
				{
					this.OntimeoutChanging(value);
					this.SendPropertyChanging();
					this._timeout = value;
					this.SendPropertyChanged("timeout");
					this.OntimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="VarChar(50)")]
		public string module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(30)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Login_Admin_Login_Log", Storage="_Admin_Login1", ThisKey="admin_login", OtherKey="id", IsForeignKey=true)]
		public Admin_Login Admin_Login1
		{
			get
			{
				return this._Admin_Login1.Entity;
			}
			set
			{
				Admin_Login previousValue = this._Admin_Login1.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Login1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Login1.Entity = null;
						previousValue.Admin_Login_Logs.Remove(this);
					}
					this._Admin_Login1.Entity = value;
					if ((value != null))
					{
						value.Admin_Login_Logs.Add(this);
						this._admin_login = value.id;
					}
					else
					{
						this._admin_login = default(int);
					}
					this.SendPropertyChanged("Admin_Login1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_Login_Role")]
	public partial class Admin_Login_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private EntitySet<Admin_Login> _Admin_Logins;
		
		private EntityRef<Admin_Login_Role_Access> _Admin_Login_Role_Access;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Admin_Login_Role()
		{
			this._Admin_Logins = new EntitySet<Admin_Login>(new Action<Admin_Login>(this.attach_Admin_Logins), new Action<Admin_Login>(this.detach_Admin_Logins));
			this._Admin_Login_Role_Access = default(EntityRef<Admin_Login_Role_Access>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Login_Role_Admin_Login", Storage="_Admin_Logins", ThisKey="id", OtherKey="admin_login_role")]
		public EntitySet<Admin_Login> Admin_Logins
		{
			get
			{
				return this._Admin_Logins;
			}
			set
			{
				this._Admin_Logins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Login_Role_Admin_Login_Role_Access", Storage="_Admin_Login_Role_Access", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Admin_Login_Role_Access Admin_Login_Role_Access
		{
			get
			{
				return this._Admin_Login_Role_Access.Entity;
			}
			set
			{
				Admin_Login_Role_Access previousValue = this._Admin_Login_Role_Access.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Login_Role_Access.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Login_Role_Access.Entity = null;
						previousValue.Admin_Login_Role = null;
					}
					this._Admin_Login_Role_Access.Entity = value;
					if ((value != null))
					{
						value.Admin_Login_Role = this;
					}
					this.SendPropertyChanged("Admin_Login_Role_Access");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admin_Logins(Admin_Login entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Login_Role1 = this;
		}
		
		private void detach_Admin_Logins(Admin_Login entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Login_Role1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_Login_Role_Access")]
	public partial class Admin_Login_Role_Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _priviledges;
		
		private string _accesible_pages;
		
		private EntityRef<Admin_Login_Role> _Admin_Login_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpriviledgesChanging(string value);
    partial void OnpriviledgesChanged();
    partial void Onaccesible_pagesChanging(string value);
    partial void Onaccesible_pagesChanged();
    #endregion
		
		public Admin_Login_Role_Access()
		{
			this._Admin_Login_Role = default(EntityRef<Admin_Login_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Admin_Login_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priviledges", DbType="VarChar(500)")]
		public string priviledges
		{
			get
			{
				return this._priviledges;
			}
			set
			{
				if ((this._priviledges != value))
				{
					this.OnpriviledgesChanging(value);
					this.SendPropertyChanging();
					this._priviledges = value;
					this.SendPropertyChanged("priviledges");
					this.OnpriviledgesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesible_pages", DbType="VarChar(500)")]
		public string accesible_pages
		{
			get
			{
				return this._accesible_pages;
			}
			set
			{
				if ((this._accesible_pages != value))
				{
					this.Onaccesible_pagesChanging(value);
					this.SendPropertyChanging();
					this._accesible_pages = value;
					this.SendPropertyChanged("accesible_pages");
					this.Onaccesible_pagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Login_Role_Admin_Login_Role_Access", Storage="_Admin_Login_Role", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Admin_Login_Role Admin_Login_Role
		{
			get
			{
				return this._Admin_Login_Role.Entity;
			}
			set
			{
				Admin_Login_Role previousValue = this._Admin_Login_Role.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Login_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Login_Role.Entity = null;
						previousValue.Admin_Login_Role_Access = null;
					}
					this._Admin_Login_Role.Entity = value;
					if ((value != null))
					{
						value.Admin_Login_Role_Access = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Admin_Login_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_User")]
	public partial class Admin_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name_title;
		
		private System.Nullable<bool> _sex;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _middlename;
		
		private string _address;
		
		private string _email;
		
		private string _phone;
		
		private string _mobile;
		
		private string _skype;
		
		private string _bbm_pin;
		
		private System.Nullable<System.DateTime> _join_date;
		
		private bool _isactive;
		
		private System.Nullable<int> _num_of_shops;
		
		private string _photopath;
		
		private string _account_name;
		
		private string _accountNo;
		
		private System.Nullable<int> _Bank;
		
		private System.Nullable<int> _admin_user_role_access;
		
		private string _state;
		
		private System.Nullable<int> _affiliate;
		
		private string _branch;
		
		private EntityRef<Admin_Login> _Admin_Login;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntitySet<Customer_Payout_Request> _Customer_Payout_Requests;
		
		private EntitySet<Terminal> _Terminals;
		
		private EntityRef<Admin_User_Role_Access> _Admin_User_Role_Access1;
		
		private EntityRef<Bank> _Bank1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onname_titleChanging(string value);
    partial void Onname_titleChanged();
    partial void OnsexChanging(System.Nullable<bool> value);
    partial void OnsexChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnmiddlenameChanging(string value);
    partial void OnmiddlenameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnskypeChanging(string value);
    partial void OnskypeChanged();
    partial void Onbbm_pinChanging(string value);
    partial void Onbbm_pinChanged();
    partial void Onjoin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onjoin_dateChanged();
    partial void OnisactiveChanging(bool value);
    partial void OnisactiveChanged();
    partial void Onnum_of_shopsChanging(System.Nullable<int> value);
    partial void Onnum_of_shopsChanged();
    partial void OnphotopathChanging(string value);
    partial void OnphotopathChanged();
    partial void Onaccount_nameChanging(string value);
    partial void Onaccount_nameChanged();
    partial void OnaccountNoChanging(string value);
    partial void OnaccountNoChanged();
    partial void OnBankChanging(System.Nullable<int> value);
    partial void OnBankChanged();
    partial void Onadmin_user_role_accessChanging(System.Nullable<int> value);
    partial void Onadmin_user_role_accessChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnaffiliateChanging(System.Nullable<int> value);
    partial void OnaffiliateChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    #endregion
		
		public Admin_User()
		{
			this._Admin_Login = default(EntityRef<Admin_Login>);
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer_Payout_Requests = new EntitySet<Customer_Payout_Request>(new Action<Customer_Payout_Request>(this.attach_Customer_Payout_Requests), new Action<Customer_Payout_Request>(this.detach_Customer_Payout_Requests));
			this._Terminals = new EntitySet<Terminal>(new Action<Terminal>(this.attach_Terminals), new Action<Terminal>(this.detach_Terminals));
			this._Admin_User_Role_Access1 = default(EntityRef<Admin_User_Role_Access>);
			this._Bank1 = default(EntityRef<Bank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_title", DbType="VarChar(10)")]
		public string name_title
		{
			get
			{
				return this._name_title;
			}
			set
			{
				if ((this._name_title != value))
				{
					this.Onname_titleChanging(value);
					this.SendPropertyChanging();
					this._name_title = value;
					this.SendPropertyChanged("name_title");
					this.Onname_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="Bit")]
		public System.Nullable<bool> sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middlename", DbType="VarChar(50)")]
		public string middlename
		{
			get
			{
				return this._middlename;
			}
			set
			{
				if ((this._middlename != value))
				{
					this.OnmiddlenameChanging(value);
					this.SendPropertyChanging();
					this._middlename = value;
					this.SendPropertyChanged("middlename");
					this.OnmiddlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="VarChar(20)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skype", DbType="VarChar(50)")]
		public string skype
		{
			get
			{
				return this._skype;
			}
			set
			{
				if ((this._skype != value))
				{
					this.OnskypeChanging(value);
					this.SendPropertyChanging();
					this._skype = value;
					this.SendPropertyChanged("skype");
					this.OnskypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bbm_pin", DbType="VarChar(10)")]
		public string bbm_pin
		{
			get
			{
				return this._bbm_pin;
			}
			set
			{
				if ((this._bbm_pin != value))
				{
					this.Onbbm_pinChanging(value);
					this.SendPropertyChanging();
					this._bbm_pin = value;
					this.SendPropertyChanged("bbm_pin");
					this.Onbbm_pinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_date", DbType="Date")]
		public System.Nullable<System.DateTime> join_date
		{
			get
			{
				return this._join_date;
			}
			set
			{
				if ((this._join_date != value))
				{
					this.Onjoin_dateChanging(value);
					this.SendPropertyChanging();
					this._join_date = value;
					this.SendPropertyChanged("join_date");
					this.Onjoin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit NOT NULL")]
		public bool isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_of_shops", DbType="Int")]
		public System.Nullable<int> num_of_shops
		{
			get
			{
				return this._num_of_shops;
			}
			set
			{
				if ((this._num_of_shops != value))
				{
					this.Onnum_of_shopsChanging(value);
					this.SendPropertyChanging();
					this._num_of_shops = value;
					this.SendPropertyChanged("num_of_shops");
					this.Onnum_of_shopsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photopath", DbType="VarChar(150)")]
		public string photopath
		{
			get
			{
				return this._photopath;
			}
			set
			{
				if ((this._photopath != value))
				{
					this.OnphotopathChanging(value);
					this.SendPropertyChanging();
					this._photopath = value;
					this.SendPropertyChanged("photopath");
					this.OnphotopathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_name", DbType="VarChar(150)")]
		public string account_name
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.Onaccount_nameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("account_name");
					this.Onaccount_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountNo", DbType="VarChar(20)")]
		public string accountNo
		{
			get
			{
				return this._accountNo;
			}
			set
			{
				if ((this._accountNo != value))
				{
					this.OnaccountNoChanging(value);
					this.SendPropertyChanging();
					this._accountNo = value;
					this.SendPropertyChanged("accountNo");
					this.OnaccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="Int")]
		public System.Nullable<int> Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					if (this._Bank1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_user_role_access", DbType="Int")]
		public System.Nullable<int> admin_user_role_access
		{
			get
			{
				return this._admin_user_role_access;
			}
			set
			{
				if ((this._admin_user_role_access != value))
				{
					if (this._Admin_User_Role_Access1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_user_role_accessChanging(value);
					this.SendPropertyChanging();
					this._admin_user_role_access = value;
					this.SendPropertyChanged("admin_user_role_access");
					this.Onadmin_user_role_accessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(150)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affiliate", DbType="Int")]
		public System.Nullable<int> affiliate
		{
			get
			{
				return this._affiliate;
			}
			set
			{
				if ((this._affiliate != value))
				{
					this.OnaffiliateChanging(value);
					this.SendPropertyChanging();
					this._affiliate = value;
					this.SendPropertyChanged("affiliate");
					this.OnaffiliateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(200)")]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Admin_Login", Storage="_Admin_Login", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Admin_Login Admin_Login
		{
			get
			{
				return this._Admin_Login.Entity;
			}
			set
			{
				Admin_Login previousValue = this._Admin_Login.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Login.Entity = null;
						previousValue.Admin_User = null;
					}
					this._Admin_Login.Entity = value;
					if ((value != null))
					{
						value.Admin_User = this;
					}
					this.SendPropertyChanged("Admin_Login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="approved_by")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Customer_Payout_Request", Storage="_Customer_Payout_Requests", ThisKey="id", OtherKey="approved_by")]
		public EntitySet<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this._Customer_Payout_Requests;
			}
			set
			{
				this._Customer_Payout_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Terminal", Storage="_Terminals", ThisKey="id", OtherKey="created_by")]
		public EntitySet<Terminal> Terminals
		{
			get
			{
				return this._Terminals;
			}
			set
			{
				this._Terminals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Role_Access_Admin_User", Storage="_Admin_User_Role_Access1", ThisKey="admin_user_role_access", OtherKey="id", IsForeignKey=true)]
		public Admin_User_Role_Access Admin_User_Role_Access1
		{
			get
			{
				return this._Admin_User_Role_Access1.Entity;
			}
			set
			{
				Admin_User_Role_Access previousValue = this._Admin_User_Role_Access1.Entity;
				if (((previousValue != value) 
							|| (this._Admin_User_Role_Access1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_User_Role_Access1.Entity = null;
						previousValue.Admin_Users.Remove(this);
					}
					this._Admin_User_Role_Access1.Entity = value;
					if ((value != null))
					{
						value.Admin_Users.Add(this);
						this._admin_user_role_access = value.id;
					}
					else
					{
						this._admin_user_role_access = default(Nullable<int>);
					}
					this.SendPropertyChanged("Admin_User_Role_Access1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Admin_User", Storage="_Bank1", ThisKey="Bank", OtherKey="id", IsForeignKey=true)]
		public Bank Bank1
		{
			get
			{
				return this._Bank1.Entity;
			}
			set
			{
				Bank previousValue = this._Bank1.Entity;
				if (((previousValue != value) 
							|| (this._Bank1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank1.Entity = null;
						previousValue.Admin_Users.Remove(this);
					}
					this._Bank1.Entity = value;
					if ((value != null))
					{
						value.Admin_Users.Add(this);
						this._Bank = value.id;
					}
					else
					{
						this._Bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User = null;
		}
		
		private void attach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User = this;
		}
		
		private void detach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User = null;
		}
		
		private void attach_Terminals(Terminal entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User = this;
		}
		
		private void detach_Terminals(Terminal entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_User_Role_Access")]
	public partial class Admin_User_Role_Access : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _admin_user;
		
		private string _accesible_page;
		
		private string _priviledges;
		
		private EntitySet<Admin_User> _Admin_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onadmin_userChanging(System.Nullable<int> value);
    partial void Onadmin_userChanged();
    partial void Onaccesible_pageChanging(string value);
    partial void Onaccesible_pageChanged();
    partial void OnpriviledgesChanging(string value);
    partial void OnpriviledgesChanged();
    #endregion
		
		public Admin_User_Role_Access()
		{
			this._Admin_Users = new EntitySet<Admin_User>(new Action<Admin_User>(this.attach_Admin_Users), new Action<Admin_User>(this.detach_Admin_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_user", DbType="Int")]
		public System.Nullable<int> admin_user
		{
			get
			{
				return this._admin_user;
			}
			set
			{
				if ((this._admin_user != value))
				{
					this.Onadmin_userChanging(value);
					this.SendPropertyChanging();
					this._admin_user = value;
					this.SendPropertyChanged("admin_user");
					this.Onadmin_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesible_page", DbType="VarChar(500)")]
		public string accesible_page
		{
			get
			{
				return this._accesible_page;
			}
			set
			{
				if ((this._accesible_page != value))
				{
					this.Onaccesible_pageChanging(value);
					this.SendPropertyChanging();
					this._accesible_page = value;
					this.SendPropertyChanged("accesible_page");
					this.Onaccesible_pageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priviledges", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string priviledges
		{
			get
			{
				return this._priviledges;
			}
			set
			{
				if ((this._priviledges != value))
				{
					this.OnpriviledgesChanging(value);
					this.SendPropertyChanging();
					this._priviledges = value;
					this.SendPropertyChanged("priviledges");
					this.OnpriviledgesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Role_Access_Admin_User", Storage="_Admin_Users", ThisKey="id", OtherKey="admin_user_role_access")]
		public EntitySet<Admin_User> Admin_Users
		{
			get
			{
				return this._Admin_Users;
			}
			set
			{
				this._Admin_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admin_Users(Admin_User entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User_Role_Access1 = this;
		}
		
		private void detach_Admin_Users(Admin_User entity)
		{
			this.SendPropertyChanging();
			entity.Admin_User_Role_Access1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate")]
	public partial class Affiliate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private string _address;
		
		private string _phone;
		
		private decimal _commission;
		
		private decimal _subagent_commission;
		
		private System.Nullable<bool> _autopayout;
		
		private bool _isactive;
		
		private string _account_name;
		
		private string _account_number;
		
		private System.Nullable<int> _bank;
		
		private System.Nullable<System.DateTime> _date_registered;
		
		private string _email;
		
		private string _contact_person;
		
		private string _other_details;
		
		private System.Nullable<decimal> _credit_limit;
		
		private System.Nullable<int> _branch;
		
		private EntityRef<Affiliate_Balance_Sheet> _Affiliate_Balance_Sheet;
		
		private EntitySet<Affiliate_Daily_Game_Sale> _Affiliate_Daily_Game_Sales;
		
		private EntitySet<Affiliate_Lodgement_Reimbursement> _Affiliate_Lodgement_Reimbursements;
		
		private EntityRef<Affiliate_Login> _Affiliate_Login;
		
		private EntityRef<Affiliate_Setting> _Affiliate_Setting;
		
		private EntitySet<Affiliate_Transaction> _Affiliate_Transactions;
		
		private EntityRef<Affiliate_Wallet> _Affiliate_Wallet;
		
		private EntitySet<Shop> _Shops;
		
		private EntityRef<Branch> _Branch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OncommissionChanging(decimal value);
    partial void OncommissionChanged();
    partial void Onsubagent_commissionChanging(decimal value);
    partial void Onsubagent_commissionChanged();
    partial void OnautopayoutChanging(System.Nullable<bool> value);
    partial void OnautopayoutChanged();
    partial void OnisactiveChanging(bool value);
    partial void OnisactiveChanged();
    partial void Onaccount_nameChanging(string value);
    partial void Onaccount_nameChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void OnbankChanging(System.Nullable<int> value);
    partial void OnbankChanged();
    partial void Ondate_registeredChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_registeredChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncontact_personChanging(string value);
    partial void Oncontact_personChanged();
    partial void Onother_detailsChanging(string value);
    partial void Onother_detailsChanged();
    partial void Oncredit_limitChanging(System.Nullable<decimal> value);
    partial void Oncredit_limitChanged();
    partial void OnbranchChanging(System.Nullable<int> value);
    partial void OnbranchChanged();
    #endregion
		
		public Affiliate()
		{
			this._Affiliate_Balance_Sheet = default(EntityRef<Affiliate_Balance_Sheet>);
			this._Affiliate_Daily_Game_Sales = new EntitySet<Affiliate_Daily_Game_Sale>(new Action<Affiliate_Daily_Game_Sale>(this.attach_Affiliate_Daily_Game_Sales), new Action<Affiliate_Daily_Game_Sale>(this.detach_Affiliate_Daily_Game_Sales));
			this._Affiliate_Lodgement_Reimbursements = new EntitySet<Affiliate_Lodgement_Reimbursement>(new Action<Affiliate_Lodgement_Reimbursement>(this.attach_Affiliate_Lodgement_Reimbursements), new Action<Affiliate_Lodgement_Reimbursement>(this.detach_Affiliate_Lodgement_Reimbursements));
			this._Affiliate_Login = default(EntityRef<Affiliate_Login>);
			this._Affiliate_Setting = default(EntityRef<Affiliate_Setting>);
			this._Affiliate_Transactions = new EntitySet<Affiliate_Transaction>(new Action<Affiliate_Transaction>(this.attach_Affiliate_Transactions), new Action<Affiliate_Transaction>(this.detach_Affiliate_Transactions));
			this._Affiliate_Wallet = default(EntityRef<Affiliate_Wallet>);
			this._Shops = new EntitySet<Shop>(new Action<Shop>(this.attach_Shops), new Action<Shop>(this.detach_Shops));
			this._Branch1 = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(250)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commission", DbType="Decimal(18,3) NOT NULL")]
		public decimal commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OncommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("commission");
					this.OncommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subagent_commission", DbType="Decimal(18,3) NOT NULL")]
		public decimal subagent_commission
		{
			get
			{
				return this._subagent_commission;
			}
			set
			{
				if ((this._subagent_commission != value))
				{
					this.Onsubagent_commissionChanging(value);
					this.SendPropertyChanging();
					this._subagent_commission = value;
					this.SendPropertyChanged("subagent_commission");
					this.Onsubagent_commissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autopayout", DbType="Bit")]
		public System.Nullable<bool> autopayout
		{
			get
			{
				return this._autopayout;
			}
			set
			{
				if ((this._autopayout != value))
				{
					this.OnautopayoutChanging(value);
					this.SendPropertyChanging();
					this._autopayout = value;
					this.SendPropertyChanged("autopayout");
					this.OnautopayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit NOT NULL")]
		public bool isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_name", DbType="VarChar(500)")]
		public string account_name
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.Onaccount_nameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("account_name");
					this.Onaccount_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(50)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Int")]
		public System.Nullable<int> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_registered", DbType="Date")]
		public System.Nullable<System.DateTime> date_registered
		{
			get
			{
				return this._date_registered;
			}
			set
			{
				if ((this._date_registered != value))
				{
					this.Ondate_registeredChanging(value);
					this.SendPropertyChanging();
					this._date_registered = value;
					this.SendPropertyChanged("date_registered");
					this.Ondate_registeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(250)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_person", DbType="VarChar(500)")]
		public string contact_person
		{
			get
			{
				return this._contact_person;
			}
			set
			{
				if ((this._contact_person != value))
				{
					this.Oncontact_personChanging(value);
					this.SendPropertyChanging();
					this._contact_person = value;
					this.SendPropertyChanged("contact_person");
					this.Oncontact_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_details", DbType="VarChar(500)")]
		public string other_details
		{
			get
			{
				return this._other_details;
			}
			set
			{
				if ((this._other_details != value))
				{
					this.Onother_detailsChanging(value);
					this.SendPropertyChanging();
					this._other_details = value;
					this.SendPropertyChanged("other_details");
					this.Onother_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_limit", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> credit_limit
		{
			get
			{
				return this._credit_limit;
			}
			set
			{
				if ((this._credit_limit != value))
				{
					this.Oncredit_limitChanging(value);
					this.SendPropertyChanging();
					this._credit_limit = value;
					this.SendPropertyChanged("credit_limit");
					this.Oncredit_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="Int")]
		public System.Nullable<int> branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Balance_Sheet", Storage="_Affiliate_Balance_Sheet", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Affiliate_Balance_Sheet Affiliate_Balance_Sheet
		{
			get
			{
				return this._Affiliate_Balance_Sheet.Entity;
			}
			set
			{
				Affiliate_Balance_Sheet previousValue = this._Affiliate_Balance_Sheet.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Balance_Sheet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Balance_Sheet.Entity = null;
						previousValue.Affiliate = null;
					}
					this._Affiliate_Balance_Sheet.Entity = value;
					if ((value != null))
					{
						value.Affiliate = this;
					}
					this.SendPropertyChanged("Affiliate_Balance_Sheet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Daily_Game_Sale", Storage="_Affiliate_Daily_Game_Sales", ThisKey="id", OtherKey="Affiliate")]
		public EntitySet<Affiliate_Daily_Game_Sale> Affiliate_Daily_Game_Sales
		{
			get
			{
				return this._Affiliate_Daily_Game_Sales;
			}
			set
			{
				this._Affiliate_Daily_Game_Sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Lodgement_Reimbursement", Storage="_Affiliate_Lodgement_Reimbursements", ThisKey="id", OtherKey="Affiliate")]
		public EntitySet<Affiliate_Lodgement_Reimbursement> Affiliate_Lodgement_Reimbursements
		{
			get
			{
				return this._Affiliate_Lodgement_Reimbursements;
			}
			set
			{
				this._Affiliate_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Login", Storage="_Affiliate_Login", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Affiliate_Login Affiliate_Login
		{
			get
			{
				return this._Affiliate_Login.Entity;
			}
			set
			{
				Affiliate_Login previousValue = this._Affiliate_Login.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Login.Entity = null;
						previousValue.Affiliate = null;
					}
					this._Affiliate_Login.Entity = value;
					if ((value != null))
					{
						value.Affiliate = this;
					}
					this.SendPropertyChanged("Affiliate_Login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Setting", Storage="_Affiliate_Setting", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Affiliate_Setting Affiliate_Setting
		{
			get
			{
				return this._Affiliate_Setting.Entity;
			}
			set
			{
				Affiliate_Setting previousValue = this._Affiliate_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Setting.Entity = null;
						previousValue.Affiliate = null;
					}
					this._Affiliate_Setting.Entity = value;
					if ((value != null))
					{
						value.Affiliate = this;
					}
					this.SendPropertyChanged("Affiliate_Setting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Transaction", Storage="_Affiliate_Transactions", ThisKey="id", OtherKey="Affiliate")]
		public EntitySet<Affiliate_Transaction> Affiliate_Transactions
		{
			get
			{
				return this._Affiliate_Transactions;
			}
			set
			{
				this._Affiliate_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Wallet", Storage="_Affiliate_Wallet", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Affiliate_Wallet Affiliate_Wallet
		{
			get
			{
				return this._Affiliate_Wallet.Entity;
			}
			set
			{
				Affiliate_Wallet previousValue = this._Affiliate_Wallet.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Wallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Wallet.Entity = null;
						previousValue.Affiliate = null;
					}
					this._Affiliate_Wallet.Entity = value;
					if ((value != null))
					{
						value.Affiliate = this;
					}
					this.SendPropertyChanged("Affiliate_Wallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Shop", Storage="_Shops", ThisKey="id", OtherKey="affiliate")]
		public EntitySet<Shop> Shops
		{
			get
			{
				return this._Shops;
			}
			set
			{
				this._Shops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Affiliate", Storage="_Branch1", ThisKey="branch", OtherKey="id", IsForeignKey=true)]
		public Branch Branch1
		{
			get
			{
				return this._Branch1.Entity;
			}
			set
			{
				Branch previousValue = this._Branch1.Entity;
				if (((previousValue != value) 
							|| (this._Branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch1.Entity = null;
						previousValue.Affiliates.Remove(this);
					}
					this._Branch1.Entity = value;
					if ((value != null))
					{
						value.Affiliates.Add(this);
						this._branch = value.id;
					}
					else
					{
						this._branch = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliate_Daily_Game_Sales(Affiliate_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = this;
		}
		
		private void detach_Affiliate_Daily_Game_Sales(Affiliate_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = null;
		}
		
		private void attach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = this;
		}
		
		private void detach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = null;
		}
		
		private void attach_Affiliate_Transactions(Affiliate_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = this;
		}
		
		private void detach_Affiliate_Transactions(Affiliate_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = null;
		}
		
		private void attach_Shops(Shop entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = this;
		}
		
		private void detach_Shops(Shop entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Balance_Sheet")]
	public partial class Affiliate_Balance_Sheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _sales_balance;
		
		private System.Nullable<decimal> _credit_balance;
		
		private System.Nullable<decimal> _online_credit;
		
		private System.Nullable<decimal> _netbalance;
		
		private EntityRef<Affiliate> _Affiliate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsales_balanceChanging(System.Nullable<decimal> value);
    partial void Onsales_balanceChanged();
    partial void Oncredit_balanceChanging(System.Nullable<decimal> value);
    partial void Oncredit_balanceChanged();
    partial void Ononline_creditChanging(System.Nullable<decimal> value);
    partial void Ononline_creditChanged();
    partial void OnnetbalanceChanging(System.Nullable<decimal> value);
    partial void OnnetbalanceChanged();
    #endregion
		
		public Affiliate_Balance_Sheet()
		{
			this._Affiliate = default(EntityRef<Affiliate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Affiliate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sales_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> sales_balance
		{
			get
			{
				return this._sales_balance;
			}
			set
			{
				if ((this._sales_balance != value))
				{
					this.Onsales_balanceChanging(value);
					this.SendPropertyChanging();
					this._sales_balance = value;
					this.SendPropertyChanged("sales_balance");
					this.Onsales_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> credit_balance
		{
			get
			{
				return this._credit_balance;
			}
			set
			{
				if ((this._credit_balance != value))
				{
					this.Oncredit_balanceChanging(value);
					this.SendPropertyChanging();
					this._credit_balance = value;
					this.SendPropertyChanged("credit_balance");
					this.Oncredit_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_online_credit", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> online_credit
		{
			get
			{
				return this._online_credit;
			}
			set
			{
				if ((this._online_credit != value))
				{
					this.Ononline_creditChanging(value);
					this.SendPropertyChanging();
					this._online_credit = value;
					this.SendPropertyChanged("online_credit");
					this.Ononline_creditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netbalance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> netbalance
		{
			get
			{
				return this._netbalance;
			}
			set
			{
				if ((this._netbalance != value))
				{
					this.OnnetbalanceChanging(value);
					this.SendPropertyChanging();
					this._netbalance = value;
					this.SendPropertyChanged("netbalance");
					this.OnnetbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Balance_Sheet", Storage="_Affiliate", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate
		{
			get
			{
				return this._Affiliate.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate.Entity = null;
						previousValue.Affiliate_Balance_Sheet = null;
					}
					this._Affiliate.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Balance_Sheet = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Affiliate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Daily_Game_Sales")]
	public partial class Affiliate_Daily_Game_Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Affiliate;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<decimal> _stake;
		
		private System.Nullable<decimal> _cancelled;
		
		private System.Nullable<decimal> _sales;
		
		private System.Nullable<decimal> _winnings;
		
		private System.Nullable<decimal> _balance;
		
		private System.Nullable<System.DateTime> _date_posted;
		
		private System.Nullable<decimal> _multicomm;
		
		private System.Nullable<decimal> _singlecomm;
		
		private System.Nullable<decimal> _commision;
		
		private System.Nullable<decimal> _net_balance;
		
		private System.Nullable<int> _posted_by;
		
		private System.Nullable<bool> _isverified;
		
		private System.Nullable<bool> _islocked;
		
		private System.Nullable<int> _daily_game;
		
		private EntityRef<Affiliate> _Affiliate1;
		
		private EntityRef<Daily_Game> _Daily_Game1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAffiliateChanging(System.Nullable<int> value);
    partial void OnAffiliateChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnstakeChanging(System.Nullable<decimal> value);
    partial void OnstakeChanged();
    partial void OncancelledChanging(System.Nullable<decimal> value);
    partial void OncancelledChanged();
    partial void OnsalesChanging(System.Nullable<decimal> value);
    partial void OnsalesChanged();
    partial void OnwinningsChanging(System.Nullable<decimal> value);
    partial void OnwinningsChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    partial void Ondate_postedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_postedChanged();
    partial void OnmulticommChanging(System.Nullable<decimal> value);
    partial void OnmulticommChanged();
    partial void OnsinglecommChanging(System.Nullable<decimal> value);
    partial void OnsinglecommChanged();
    partial void OncommisionChanging(System.Nullable<decimal> value);
    partial void OncommisionChanged();
    partial void Onnet_balanceChanging(System.Nullable<decimal> value);
    partial void Onnet_balanceChanged();
    partial void Onposted_byChanging(System.Nullable<int> value);
    partial void Onposted_byChanged();
    partial void OnisverifiedChanging(System.Nullable<bool> value);
    partial void OnisverifiedChanged();
    partial void OnislockedChanging(System.Nullable<bool> value);
    partial void OnislockedChanged();
    partial void Ondaily_gameChanging(System.Nullable<int> value);
    partial void Ondaily_gameChanged();
    #endregion
		
		public Affiliate_Daily_Game_Sale()
		{
			this._Affiliate1 = default(EntityRef<Affiliate>);
			this._Daily_Game1 = default(EntityRef<Daily_Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliate", DbType="Int")]
		public System.Nullable<int> Affiliate
		{
			get
			{
				return this._Affiliate;
			}
			set
			{
				if ((this._Affiliate != value))
				{
					if (this._Affiliate1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliateChanging(value);
					this.SendPropertyChanging();
					this._Affiliate = value;
					this.SendPropertyChanged("Affiliate");
					this.OnAffiliateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> stake
		{
			get
			{
				return this._stake;
			}
			set
			{
				if ((this._stake != value))
				{
					this.OnstakeChanging(value);
					this.SendPropertyChanging();
					this._stake = value;
					this.SendPropertyChanged("stake");
					this.OnstakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelled", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> cancelled
		{
			get
			{
				return this._cancelled;
			}
			set
			{
				if ((this._cancelled != value))
				{
					this.OncancelledChanging(value);
					this.SendPropertyChanging();
					this._cancelled = value;
					this.SendPropertyChanged("cancelled");
					this.OncancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sales", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				if ((this._sales != value))
				{
					this.OnsalesChanging(value);
					this.SendPropertyChanging();
					this._sales = value;
					this.SendPropertyChanged("sales");
					this.OnsalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winnings", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> winnings
		{
			get
			{
				return this._winnings;
			}
			set
			{
				if ((this._winnings != value))
				{
					this.OnwinningsChanging(value);
					this.SendPropertyChanging();
					this._winnings = value;
					this.SendPropertyChanged("winnings");
					this.OnwinningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_posted", DbType="Date")]
		public System.Nullable<System.DateTime> date_posted
		{
			get
			{
				return this._date_posted;
			}
			set
			{
				if ((this._date_posted != value))
				{
					this.Ondate_postedChanging(value);
					this.SendPropertyChanging();
					this._date_posted = value;
					this.SendPropertyChanged("date_posted");
					this.Ondate_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_multicomm", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> multicomm
		{
			get
			{
				return this._multicomm;
			}
			set
			{
				if ((this._multicomm != value))
				{
					this.OnmulticommChanging(value);
					this.SendPropertyChanging();
					this._multicomm = value;
					this.SendPropertyChanged("multicomm");
					this.OnmulticommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singlecomm", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> singlecomm
		{
			get
			{
				return this._singlecomm;
			}
			set
			{
				if ((this._singlecomm != value))
				{
					this.OnsinglecommChanging(value);
					this.SendPropertyChanging();
					this._singlecomm = value;
					this.SendPropertyChanged("singlecomm");
					this.OnsinglecommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commision", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> commision
		{
			get
			{
				return this._commision;
			}
			set
			{
				if ((this._commision != value))
				{
					this.OncommisionChanging(value);
					this.SendPropertyChanging();
					this._commision = value;
					this.SendPropertyChanged("commision");
					this.OncommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> net_balance
		{
			get
			{
				return this._net_balance;
			}
			set
			{
				if ((this._net_balance != value))
				{
					this.Onnet_balanceChanging(value);
					this.SendPropertyChanging();
					this._net_balance = value;
					this.SendPropertyChanged("net_balance");
					this.Onnet_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int")]
		public System.Nullable<int> posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isverified", DbType="Bit")]
		public System.Nullable<bool> isverified
		{
			get
			{
				return this._isverified;
			}
			set
			{
				if ((this._isverified != value))
				{
					this.OnisverifiedChanging(value);
					this.SendPropertyChanging();
					this._isverified = value;
					this.SendPropertyChanged("isverified");
					this.OnisverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_islocked", DbType="Bit")]
		public System.Nullable<bool> islocked
		{
			get
			{
				return this._islocked;
			}
			set
			{
				if ((this._islocked != value))
				{
					this.OnislockedChanging(value);
					this.SendPropertyChanging();
					this._islocked = value;
					this.SendPropertyChanged("islocked");
					this.OnislockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_game", DbType="Int")]
		public System.Nullable<int> daily_game
		{
			get
			{
				return this._daily_game;
			}
			set
			{
				if ((this._daily_game != value))
				{
					if (this._Daily_Game1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_gameChanging(value);
					this.SendPropertyChanging();
					this._daily_game = value;
					this.SendPropertyChanged("daily_game");
					this.Ondaily_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Daily_Game_Sale", Storage="_Affiliate1", ThisKey="Affiliate", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate1
		{
			get
			{
				return this._Affiliate1.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate1.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate1.Entity = null;
						previousValue.Affiliate_Daily_Game_Sales.Remove(this);
					}
					this._Affiliate1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Daily_Game_Sales.Add(this);
						this._Affiliate = value.id;
					}
					else
					{
						this._Affiliate = default(Nullable<int>);
					}
					this.SendPropertyChanged("Affiliate1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Affiliate_Daily_Game_Sale", Storage="_Daily_Game1", ThisKey="daily_game", OtherKey="id", IsForeignKey=true)]
		public Daily_Game Daily_Game1
		{
			get
			{
				return this._Daily_Game1.Entity;
			}
			set
			{
				Daily_Game previousValue = this._Daily_Game1.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Game1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Game1.Entity = null;
						previousValue.Affiliate_Daily_Game_Sales.Remove(this);
					}
					this._Daily_Game1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Daily_Game_Sales.Add(this);
						this._daily_game = value.id;
					}
					else
					{
						this._daily_game = default(Nullable<int>);
					}
					this.SendPropertyChanged("Daily_Game1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Lodgement_Reimbursement")]
	public partial class Affiliate_Lodgement_Reimbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _app_id;
		
		private int _Affiliate;
		
		private System.Nullable<int> _bank;
		
		private string _teller_number;
		
		private System.Nullable<int> _transaction;
		
		private decimal _amount;
		
		private System.DateTime _date;
		
		private System.Nullable<int> _transaction_type;
		
		private System.Nullable<int> _transaction_category;
		
		private System.Nullable<bool> _isverified;
		
		private System.Nullable<bool> _islocked;
		
		private int _payment_type;
		
		private EntityRef<Affiliate> _Affiliate1;
		
		private EntityRef<Affiliate_Transaction> _Affiliate_Transaction;
		
		private EntityRef<Bank> _Bank1;
		
		private EntityRef<payment_type> _payment_type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onapp_idChanging(string value);
    partial void Onapp_idChanged();
    partial void OnAffiliateChanging(int value);
    partial void OnAffiliateChanged();
    partial void OnbankChanging(System.Nullable<int> value);
    partial void OnbankChanged();
    partial void Onteller_numberChanging(string value);
    partial void Onteller_numberChanged();
    partial void OntransactionChanging(System.Nullable<int> value);
    partial void OntransactionChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ontransaction_typeChanging(System.Nullable<int> value);
    partial void Ontransaction_typeChanged();
    partial void Ontransaction_categoryChanging(System.Nullable<int> value);
    partial void Ontransaction_categoryChanged();
    partial void OnisverifiedChanging(System.Nullable<bool> value);
    partial void OnisverifiedChanged();
    partial void OnislockedChanging(System.Nullable<bool> value);
    partial void OnislockedChanged();
    partial void Onpayment_typeChanging(int value);
    partial void Onpayment_typeChanged();
    #endregion
		
		public Affiliate_Lodgement_Reimbursement()
		{
			this._Affiliate1 = default(EntityRef<Affiliate>);
			this._Affiliate_Transaction = default(EntityRef<Affiliate_Transaction>);
			this._Bank1 = default(EntityRef<Bank>);
			this._payment_type1 = default(EntityRef<payment_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="VarChar(50)")]
		public string app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliate", DbType="Int NOT NULL")]
		public int Affiliate
		{
			get
			{
				return this._Affiliate;
			}
			set
			{
				if ((this._Affiliate != value))
				{
					if (this._Affiliate1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliateChanging(value);
					this.SendPropertyChanging();
					this._Affiliate = value;
					this.SendPropertyChanged("Affiliate");
					this.OnAffiliateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Int")]
		public System.Nullable<int> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					if (this._Bank1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teller_number", DbType="VarChar(30)")]
		public string teller_number
		{
			get
			{
				return this._teller_number;
			}
			set
			{
				if ((this._teller_number != value))
				{
					this.Onteller_numberChanging(value);
					this.SendPropertyChanging();
					this._teller_number = value;
					this.SendPropertyChanged("teller_number");
					this.Onteller_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[transaction]", Storage="_transaction", DbType="Int")]
		public System.Nullable<int> transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				if ((this._transaction != value))
				{
					this.OntransactionChanging(value);
					this.SendPropertyChanging();
					this._transaction = value;
					this.SendPropertyChanged("transaction");
					this.OntransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(15,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="Int")]
		public System.Nullable<int> transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int")]
		public System.Nullable<int> transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isverified", DbType="Bit")]
		public System.Nullable<bool> isverified
		{
			get
			{
				return this._isverified;
			}
			set
			{
				if ((this._isverified != value))
				{
					this.OnisverifiedChanging(value);
					this.SendPropertyChanging();
					this._isverified = value;
					this.SendPropertyChanged("isverified");
					this.OnisverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_islocked", DbType="Bit")]
		public System.Nullable<bool> islocked
		{
			get
			{
				return this._islocked;
			}
			set
			{
				if ((this._islocked != value))
				{
					this.OnislockedChanging(value);
					this.SendPropertyChanging();
					this._islocked = value;
					this.SendPropertyChanged("islocked");
					this.OnislockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type", DbType="Int NOT NULL")]
		public int payment_type
		{
			get
			{
				return this._payment_type;
			}
			set
			{
				if ((this._payment_type != value))
				{
					if (this._payment_type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_typeChanging(value);
					this.SendPropertyChanging();
					this._payment_type = value;
					this.SendPropertyChanged("payment_type");
					this.Onpayment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Lodgement_Reimbursement", Storage="_Affiliate1", ThisKey="Affiliate", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate1
		{
			get
			{
				return this._Affiliate1.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate1.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate1.Entity = null;
						previousValue.Affiliate_Lodgement_Reimbursements.Remove(this);
					}
					this._Affiliate1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Lodgement_Reimbursements.Add(this);
						this._Affiliate = value.id;
					}
					else
					{
						this._Affiliate = default(int);
					}
					this.SendPropertyChanged("Affiliate1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Transaction_Affiliate_Lodgement_Reimbursement", Storage="_Affiliate_Transaction", ThisKey="transaction", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Affiliate_Transaction Affiliate_Transaction
		{
			get
			{
				return this._Affiliate_Transaction.Entity;
			}
			set
			{
				Affiliate_Transaction previousValue = this._Affiliate_Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Transaction.Entity = null;
						previousValue.Affiliate_Lodgement_Reimbursements.Remove(this);
					}
					this._Affiliate_Transaction.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Lodgement_Reimbursements.Add(this);
						this._transaction = value.id;
					}
					else
					{
						this._transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Affiliate_Transaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Affiliate_Lodgement_Reimbursement", Storage="_Bank1", ThisKey="bank", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Bank Bank1
		{
			get
			{
				return this._Bank1.Entity;
			}
			set
			{
				Bank previousValue = this._Bank1.Entity;
				if (((previousValue != value) 
							|| (this._Bank1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank1.Entity = null;
						previousValue.Affiliate_Lodgement_Reimbursements.Remove(this);
					}
					this._Bank1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Lodgement_Reimbursements.Add(this);
						this._bank = value.id;
					}
					else
					{
						this._bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_type_Affiliate_Lodgement_Reimbursement", Storage="_payment_type1", ThisKey="payment_type", OtherKey="id", IsForeignKey=true)]
		public payment_type payment_type1
		{
			get
			{
				return this._payment_type1.Entity;
			}
			set
			{
				payment_type previousValue = this._payment_type1.Entity;
				if (((previousValue != value) 
							|| (this._payment_type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment_type1.Entity = null;
						previousValue.Affiliate_Lodgement_Reimbursements.Remove(this);
					}
					this._payment_type1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Lodgement_Reimbursements.Add(this);
						this._payment_type = value.id;
					}
					else
					{
						this._payment_type = default(int);
					}
					this.SendPropertyChanged("payment_type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Login")]
	public partial class Affiliate_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Affiliatename;
		
		private string _email;
		
		private string _password;
		
		private string _phonenumber;
		
		private string _verification_number;
		
		private string _verification_token;
		
		private System.Nullable<bool> _is_verified;
		
		private System.Nullable<bool> _is_active;
		
		private EntitySet<Affiliate_Login_Log> _Affiliate_Login_Logs;
		
		private EntityRef<Affiliate> _Affiliate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAffiliatenameChanging(string value);
    partial void OnAffiliatenameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    partial void Onverification_numberChanging(string value);
    partial void Onverification_numberChanged();
    partial void Onverification_tokenChanging(string value);
    partial void Onverification_tokenChanged();
    partial void Onis_verifiedChanging(System.Nullable<bool> value);
    partial void Onis_verifiedChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    #endregion
		
		public Affiliate_Login()
		{
			this._Affiliate_Login_Logs = new EntitySet<Affiliate_Login_Log>(new Action<Affiliate_Login_Log>(this.attach_Affiliate_Login_Logs), new Action<Affiliate_Login_Log>(this.detach_Affiliate_Login_Logs));
			this._Affiliate = default(EntityRef<Affiliate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Affiliate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliatename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Affiliatename
		{
			get
			{
				return this._Affiliatename;
			}
			set
			{
				if ((this._Affiliatename != value))
				{
					this.OnAffiliatenameChanging(value);
					this.SendPropertyChanging();
					this._Affiliatename = value;
					this.SendPropertyChanged("Affiliatename");
					this.OnAffiliatenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verification_number", DbType="VarChar(1500)")]
		public string verification_number
		{
			get
			{
				return this._verification_number;
			}
			set
			{
				if ((this._verification_number != value))
				{
					this.Onverification_numberChanging(value);
					this.SendPropertyChanging();
					this._verification_number = value;
					this.SendPropertyChanged("verification_number");
					this.Onverification_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verification_token", DbType="VarChar(50)")]
		public string verification_token
		{
			get
			{
				return this._verification_token;
			}
			set
			{
				if ((this._verification_token != value))
				{
					this.Onverification_tokenChanging(value);
					this.SendPropertyChanging();
					this._verification_token = value;
					this.SendPropertyChanged("verification_token");
					this.Onverification_tokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_verified", DbType="Bit")]
		public System.Nullable<bool> is_verified
		{
			get
			{
				return this._is_verified;
			}
			set
			{
				if ((this._is_verified != value))
				{
					this.Onis_verifiedChanging(value);
					this.SendPropertyChanging();
					this._is_verified = value;
					this.SendPropertyChanged("is_verified");
					this.Onis_verifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Login_Affiliate_Login_Log", Storage="_Affiliate_Login_Logs", ThisKey="id", OtherKey="login")]
		public EntitySet<Affiliate_Login_Log> Affiliate_Login_Logs
		{
			get
			{
				return this._Affiliate_Login_Logs;
			}
			set
			{
				this._Affiliate_Login_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Login", Storage="_Affiliate", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate
		{
			get
			{
				return this._Affiliate.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate.Entity = null;
						previousValue.Affiliate_Login = null;
					}
					this._Affiliate.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Login = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Affiliate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliate_Login_Logs(Affiliate_Login_Log entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate_Login = this;
		}
		
		private void detach_Affiliate_Login_Logs(Affiliate_Login_Log entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate_Login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Login_Log")]
	public partial class Affiliate_Login_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _login;
		
		private bool _status;
		
		private string _IP;
		
		private System.Nullable<bool> _isLogin;
		
		private System.DateTime _timein;
		
		private System.Nullable<System.DateTime> _timeout;
		
		private System.Nullable<int> _Affiliate_type;
		
		private string _session_id;
		
		private EntityRef<Affiliate_Login> _Affiliate_Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnloginChanging(int value);
    partial void OnloginChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnisLoginChanging(System.Nullable<bool> value);
    partial void OnisLoginChanged();
    partial void OntimeinChanging(System.DateTime value);
    partial void OntimeinChanged();
    partial void OntimeoutChanging(System.Nullable<System.DateTime> value);
    partial void OntimeoutChanged();
    partial void OnAffiliate_typeChanging(System.Nullable<int> value);
    partial void OnAffiliate_typeChanged();
    partial void Onsession_idChanging(string value);
    partial void Onsession_idChanged();
    #endregion
		
		public Affiliate_Login_Log()
		{
			this._Affiliate_Login = default(EntityRef<Affiliate_Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="Int NOT NULL")]
		public int login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					if (this._Affiliate_Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLogin", DbType="Bit")]
		public System.Nullable<bool> isLogin
		{
			get
			{
				return this._isLogin;
			}
			set
			{
				if ((this._isLogin != value))
				{
					this.OnisLoginChanging(value);
					this.SendPropertyChanging();
					this._isLogin = value;
					this.SendPropertyChanged("isLogin");
					this.OnisLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timein", DbType="DateTime NOT NULL")]
		public System.DateTime timein
		{
			get
			{
				return this._timein;
			}
			set
			{
				if ((this._timein != value))
				{
					this.OntimeinChanging(value);
					this.SendPropertyChanging();
					this._timein = value;
					this.SendPropertyChanged("timein");
					this.OntimeinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeout", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeout
		{
			get
			{
				return this._timeout;
			}
			set
			{
				if ((this._timeout != value))
				{
					this.OntimeoutChanging(value);
					this.SendPropertyChanging();
					this._timeout = value;
					this.SendPropertyChanged("timeout");
					this.OntimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliate_type", DbType="Int")]
		public System.Nullable<int> Affiliate_type
		{
			get
			{
				return this._Affiliate_type;
			}
			set
			{
				if ((this._Affiliate_type != value))
				{
					this.OnAffiliate_typeChanging(value);
					this.SendPropertyChanging();
					this._Affiliate_type = value;
					this.SendPropertyChanged("Affiliate_type");
					this.OnAffiliate_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", DbType="VarChar(100)")]
		public string session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Login_Affiliate_Login_Log", Storage="_Affiliate_Login", ThisKey="login", OtherKey="id", IsForeignKey=true)]
		public Affiliate_Login Affiliate_Login
		{
			get
			{
				return this._Affiliate_Login.Entity;
			}
			set
			{
				Affiliate_Login previousValue = this._Affiliate_Login.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Login.Entity = null;
						previousValue.Affiliate_Login_Logs.Remove(this);
					}
					this._Affiliate_Login.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Login_Logs.Add(this);
						this._login = value.id;
					}
					else
					{
						this._login = default(int);
					}
					this.SendPropertyChanged("Affiliate_Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Settings")]
	public partial class Affiliate_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<bool> _cancreateshop;
		
		private System.Nullable<bool> _cancreateshopcashiers;
		
		private System.Nullable<int> _payouttype;
		
		private System.Nullable<int> _operationmode;
		
		private EntityRef<Affiliate> _Affiliate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncancreateshopChanging(System.Nullable<bool> value);
    partial void OncancreateshopChanged();
    partial void OncancreateshopcashiersChanging(System.Nullable<bool> value);
    partial void OncancreateshopcashiersChanged();
    partial void OnpayouttypeChanging(System.Nullable<int> value);
    partial void OnpayouttypeChanged();
    partial void OnoperationmodeChanging(System.Nullable<int> value);
    partial void OnoperationmodeChanged();
    #endregion
		
		public Affiliate_Setting()
		{
			this._Affiliate = default(EntityRef<Affiliate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Affiliate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancreateshop", DbType="Bit")]
		public System.Nullable<bool> cancreateshop
		{
			get
			{
				return this._cancreateshop;
			}
			set
			{
				if ((this._cancreateshop != value))
				{
					this.OncancreateshopChanging(value);
					this.SendPropertyChanging();
					this._cancreateshop = value;
					this.SendPropertyChanged("cancreateshop");
					this.OncancreateshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancreateshopcashiers", DbType="Bit")]
		public System.Nullable<bool> cancreateshopcashiers
		{
			get
			{
				return this._cancreateshopcashiers;
			}
			set
			{
				if ((this._cancreateshopcashiers != value))
				{
					this.OncancreateshopcashiersChanging(value);
					this.SendPropertyChanging();
					this._cancreateshopcashiers = value;
					this.SendPropertyChanged("cancreateshopcashiers");
					this.OncancreateshopcashiersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payouttype", DbType="Int")]
		public System.Nullable<int> payouttype
		{
			get
			{
				return this._payouttype;
			}
			set
			{
				if ((this._payouttype != value))
				{
					this.OnpayouttypeChanging(value);
					this.SendPropertyChanging();
					this._payouttype = value;
					this.SendPropertyChanged("payouttype");
					this.OnpayouttypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationmode", DbType="Int")]
		public System.Nullable<int> operationmode
		{
			get
			{
				return this._operationmode;
			}
			set
			{
				if ((this._operationmode != value))
				{
					this.OnoperationmodeChanging(value);
					this.SendPropertyChanging();
					this._operationmode = value;
					this.SendPropertyChanged("operationmode");
					this.OnoperationmodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Setting", Storage="_Affiliate", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate
		{
			get
			{
				return this._Affiliate.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate.Entity = null;
						previousValue.Affiliate_Setting = null;
					}
					this._Affiliate.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Setting = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Affiliate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Transaction")]
	public partial class Affiliate_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Affiliate;
		
		private System.DateTime _trans_timestamp;
		
		private decimal _amount;
		
		private System.Nullable<int> _trans_type;
		
		private System.Nullable<decimal> _balance_before;
		
		private System.Nullable<decimal> _balance_after;
		
		private string _details;
		
		private string _description;
		
		private System.Nullable<int> _trans_category;
		
		private System.Nullable<int> _posted_by;
		
		private EntitySet<Affiliate_Lodgement_Reimbursement> _Affiliate_Lodgement_Reimbursements;
		
		private EntityRef<Affiliate> _Affiliate1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAffiliateChanging(int value);
    partial void OnAffiliateChanged();
    partial void Ontrans_timestampChanging(System.DateTime value);
    partial void Ontrans_timestampChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Ontrans_typeChanging(System.Nullable<int> value);
    partial void Ontrans_typeChanged();
    partial void Onbalance_beforeChanging(System.Nullable<decimal> value);
    partial void Onbalance_beforeChanged();
    partial void Onbalance_afterChanging(System.Nullable<decimal> value);
    partial void Onbalance_afterChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ontrans_categoryChanging(System.Nullable<int> value);
    partial void Ontrans_categoryChanged();
    partial void Onposted_byChanging(System.Nullable<int> value);
    partial void Onposted_byChanged();
    #endregion
		
		public Affiliate_Transaction()
		{
			this._Affiliate_Lodgement_Reimbursements = new EntitySet<Affiliate_Lodgement_Reimbursement>(new Action<Affiliate_Lodgement_Reimbursement>(this.attach_Affiliate_Lodgement_Reimbursements), new Action<Affiliate_Lodgement_Reimbursement>(this.detach_Affiliate_Lodgement_Reimbursements));
			this._Affiliate1 = default(EntityRef<Affiliate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliate", DbType="Int NOT NULL")]
		public int Affiliate
		{
			get
			{
				return this._Affiliate;
			}
			set
			{
				if ((this._Affiliate != value))
				{
					if (this._Affiliate1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliateChanging(value);
					this.SendPropertyChanging();
					this._Affiliate = value;
					this.SendPropertyChanged("Affiliate");
					this.OnAffiliateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime trans_timestamp
		{
			get
			{
				return this._trans_timestamp;
			}
			set
			{
				if ((this._trans_timestamp != value))
				{
					this.Ontrans_timestampChanging(value);
					this.SendPropertyChanging();
					this._trans_timestamp = value;
					this.SendPropertyChanged("trans_timestamp");
					this.Ontrans_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(15,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_type", DbType="Int")]
		public System.Nullable<int> trans_type
		{
			get
			{
				return this._trans_type;
			}
			set
			{
				if ((this._trans_type != value))
				{
					this.Ontrans_typeChanging(value);
					this.SendPropertyChanging();
					this._trans_type = value;
					this.SendPropertyChanged("trans_type");
					this.Ontrans_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_before", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance_before
		{
			get
			{
				return this._balance_before;
			}
			set
			{
				if ((this._balance_before != value))
				{
					this.Onbalance_beforeChanging(value);
					this.SendPropertyChanging();
					this._balance_before = value;
					this.SendPropertyChanged("balance_before");
					this.Onbalance_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_after", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance_after
		{
			get
			{
				return this._balance_after;
			}
			set
			{
				if ((this._balance_after != value))
				{
					this.Onbalance_afterChanging(value);
					this.SendPropertyChanging();
					this._balance_after = value;
					this.SendPropertyChanged("balance_after");
					this.Onbalance_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(1000)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_category", DbType="Int")]
		public System.Nullable<int> trans_category
		{
			get
			{
				return this._trans_category;
			}
			set
			{
				if ((this._trans_category != value))
				{
					this.Ontrans_categoryChanging(value);
					this.SendPropertyChanging();
					this._trans_category = value;
					this.SendPropertyChanged("trans_category");
					this.Ontrans_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int")]
		public System.Nullable<int> posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Transaction_Affiliate_Lodgement_Reimbursement", Storage="_Affiliate_Lodgement_Reimbursements", ThisKey="id", OtherKey="transaction")]
		public EntitySet<Affiliate_Lodgement_Reimbursement> Affiliate_Lodgement_Reimbursements
		{
			get
			{
				return this._Affiliate_Lodgement_Reimbursements;
			}
			set
			{
				this._Affiliate_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Transaction", Storage="_Affiliate1", ThisKey="Affiliate", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate1
		{
			get
			{
				return this._Affiliate1.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate1.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate1.Entity = null;
						previousValue.Affiliate_Transactions.Remove(this);
					}
					this._Affiliate1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Transactions.Add(this);
						this._Affiliate = value.id;
					}
					else
					{
						this._Affiliate = default(int);
					}
					this.SendPropertyChanged("Affiliate1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate_Transaction = this;
		}
		
		private void detach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate_Transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Wallet")]
	public partial class Affiliate_Wallet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _balance;
		
		private EntitySet<Affiliate_Wallet_Transaction> _Affiliate_Wallet_Transactions;
		
		private EntityRef<Affiliate> _Affiliate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    #endregion
		
		public Affiliate_Wallet()
		{
			this._Affiliate_Wallet_Transactions = new EntitySet<Affiliate_Wallet_Transaction>(new Action<Affiliate_Wallet_Transaction>(this.attach_Affiliate_Wallet_Transactions), new Action<Affiliate_Wallet_Transaction>(this.detach_Affiliate_Wallet_Transactions));
			this._Affiliate = default(EntityRef<Affiliate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Affiliate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Wallet_Affiliate_Wallet_Transaction", Storage="_Affiliate_Wallet_Transactions", ThisKey="id", OtherKey="Affiliate_wallet")]
		public EntitySet<Affiliate_Wallet_Transaction> Affiliate_Wallet_Transactions
		{
			get
			{
				return this._Affiliate_Wallet_Transactions;
			}
			set
			{
				this._Affiliate_Wallet_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Affiliate_Wallet", Storage="_Affiliate", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate
		{
			get
			{
				return this._Affiliate.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate.Entity = null;
						previousValue.Affiliate_Wallet = null;
					}
					this._Affiliate.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Wallet = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Affiliate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliate_Wallet_Transactions(Affiliate_Wallet_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate_Wallet1 = this;
		}
		
		private void detach_Affiliate_Wallet_Transactions(Affiliate_Wallet_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Affiliate_Wallet1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliate_Wallet_Transaction")]
	public partial class Affiliate_Wallet_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _Affiliate_wallet;
		
		private decimal _amount;
		
		private decimal _balance_before;
		
		private decimal _balance_after;
		
		private int _transaction_category;
		
		private System.Nullable<int> _transaction_type;
		
		private string _Description;
		
		private int _posted_by;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Affiliate_Wallet> _Affiliate_Wallet1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAffiliate_walletChanging(int value);
    partial void OnAffiliate_walletChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onbalance_beforeChanging(decimal value);
    partial void Onbalance_beforeChanged();
    partial void Onbalance_afterChanging(decimal value);
    partial void Onbalance_afterChanged();
    partial void Ontransaction_categoryChanging(int value);
    partial void Ontransaction_categoryChanged();
    partial void Ontransaction_typeChanging(System.Nullable<int> value);
    partial void Ontransaction_typeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void Onposted_byChanging(int value);
    partial void Onposted_byChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public Affiliate_Wallet_Transaction()
		{
			this._Affiliate_Wallet1 = default(EntityRef<Affiliate_Wallet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliate_wallet", DbType="Int NOT NULL")]
		public int Affiliate_wallet
		{
			get
			{
				return this._Affiliate_wallet;
			}
			set
			{
				if ((this._Affiliate_wallet != value))
				{
					if (this._Affiliate_Wallet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAffiliate_walletChanging(value);
					this.SendPropertyChanging();
					this._Affiliate_wallet = value;
					this.SendPropertyChanged("Affiliate_wallet");
					this.OnAffiliate_walletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(15,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_before", DbType="Decimal(15,2) NOT NULL")]
		public decimal balance_before
		{
			get
			{
				return this._balance_before;
			}
			set
			{
				if ((this._balance_before != value))
				{
					this.Onbalance_beforeChanging(value);
					this.SendPropertyChanging();
					this._balance_before = value;
					this.SendPropertyChanged("balance_before");
					this.Onbalance_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_after", DbType="Decimal(15,2) NOT NULL")]
		public decimal balance_after
		{
			get
			{
				return this._balance_after;
			}
			set
			{
				if ((this._balance_after != value))
				{
					this.Onbalance_afterChanging(value);
					this.SendPropertyChanging();
					this._balance_after = value;
					this.SendPropertyChanged("balance_after");
					this.Onbalance_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int NOT NULL")]
		public int transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="Int")]
		public System.Nullable<int> transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int NOT NULL")]
		public int posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Wallet_Affiliate_Wallet_Transaction", Storage="_Affiliate_Wallet1", ThisKey="Affiliate_wallet", OtherKey="id", IsForeignKey=true)]
		public Affiliate_Wallet Affiliate_Wallet1
		{
			get
			{
				return this._Affiliate_Wallet1.Entity;
			}
			set
			{
				Affiliate_Wallet previousValue = this._Affiliate_Wallet1.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate_Wallet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate_Wallet1.Entity = null;
						previousValue.Affiliate_Wallet_Transactions.Remove(this);
					}
					this._Affiliate_Wallet1.Entity = value;
					if ((value != null))
					{
						value.Affiliate_Wallet_Transactions.Add(this);
						this._Affiliate_wallet = value.id;
					}
					else
					{
						this._Affiliate_wallet = default(int);
					}
					this.SendPropertyChanged("Affiliate_Wallet1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _bank_name;
		
		private string _bank_code;
		
		private string _bank_description;
		
		private string _bank_sort_code;
		
		private System.Nullable<int> _branch;
		
		private EntitySet<Admin_User> _Admin_Users;
		
		private EntitySet<Affiliate_Lodgement_Reimbursement> _Affiliate_Lodgement_Reimbursements;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Customer_Bank_Account_Update_Log> _Customer_Bank_Account_Update_Logs;
		
		private EntitySet<Shop_Lodgement_Reimbursement> _Shop_Lodgement_Reimbursements;
		
		private EntityRef<Branch> _Branch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onbank_nameChanging(string value);
    partial void Onbank_nameChanged();
    partial void Onbank_codeChanging(string value);
    partial void Onbank_codeChanged();
    partial void Onbank_descriptionChanging(string value);
    partial void Onbank_descriptionChanged();
    partial void Onbank_sort_codeChanging(string value);
    partial void Onbank_sort_codeChanged();
    partial void OnbranchChanging(System.Nullable<int> value);
    partial void OnbranchChanged();
    #endregion
		
		public Bank()
		{
			this._Admin_Users = new EntitySet<Admin_User>(new Action<Admin_User>(this.attach_Admin_Users), new Action<Admin_User>(this.detach_Admin_Users));
			this._Affiliate_Lodgement_Reimbursements = new EntitySet<Affiliate_Lodgement_Reimbursement>(new Action<Affiliate_Lodgement_Reimbursement>(this.attach_Affiliate_Lodgement_Reimbursements), new Action<Affiliate_Lodgement_Reimbursement>(this.detach_Affiliate_Lodgement_Reimbursements));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Customer_Bank_Account_Update_Logs = new EntitySet<Customer_Bank_Account_Update_Log>(new Action<Customer_Bank_Account_Update_Log>(this.attach_Customer_Bank_Account_Update_Logs), new Action<Customer_Bank_Account_Update_Log>(this.detach_Customer_Bank_Account_Update_Logs));
			this._Shop_Lodgement_Reimbursements = new EntitySet<Shop_Lodgement_Reimbursement>(new Action<Shop_Lodgement_Reimbursement>(this.attach_Shop_Lodgement_Reimbursements), new Action<Shop_Lodgement_Reimbursement>(this.detach_Shop_Lodgement_Reimbursements));
			this._Branch1 = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string bank_name
		{
			get
			{
				return this._bank_name;
			}
			set
			{
				if ((this._bank_name != value))
				{
					this.Onbank_nameChanging(value);
					this.SendPropertyChanging();
					this._bank_name = value;
					this.SendPropertyChanged("bank_name");
					this.Onbank_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_code", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string bank_code
		{
			get
			{
				return this._bank_code;
			}
			set
			{
				if ((this._bank_code != value))
				{
					this.Onbank_codeChanging(value);
					this.SendPropertyChanging();
					this._bank_code = value;
					this.SendPropertyChanged("bank_code");
					this.Onbank_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_description", DbType="VarChar(150)")]
		public string bank_description
		{
			get
			{
				return this._bank_description;
			}
			set
			{
				if ((this._bank_description != value))
				{
					this.Onbank_descriptionChanging(value);
					this.SendPropertyChanging();
					this._bank_description = value;
					this.SendPropertyChanged("bank_description");
					this.Onbank_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank_sort_code", DbType="VarChar(150)")]
		public string bank_sort_code
		{
			get
			{
				return this._bank_sort_code;
			}
			set
			{
				if ((this._bank_sort_code != value))
				{
					this.Onbank_sort_codeChanging(value);
					this.SendPropertyChanging();
					this._bank_sort_code = value;
					this.SendPropertyChanged("bank_sort_code");
					this.Onbank_sort_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="Int")]
		public System.Nullable<int> branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Admin_User", Storage="_Admin_Users", ThisKey="id", OtherKey="Bank")]
		public EntitySet<Admin_User> Admin_Users
		{
			get
			{
				return this._Admin_Users;
			}
			set
			{
				this._Admin_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Affiliate_Lodgement_Reimbursement", Storage="_Affiliate_Lodgement_Reimbursements", ThisKey="id", OtherKey="bank")]
		public EntitySet<Affiliate_Lodgement_Reimbursement> Affiliate_Lodgement_Reimbursements
		{
			get
			{
				return this._Affiliate_Lodgement_Reimbursements;
			}
			set
			{
				this._Affiliate_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Customer", Storage="_Customers", ThisKey="id", OtherKey="bank")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Customer_Bank_Account_Update_Log", Storage="_Customer_Bank_Account_Update_Logs", ThisKey="id", OtherKey="bank")]
		public EntitySet<Customer_Bank_Account_Update_Log> Customer_Bank_Account_Update_Logs
		{
			get
			{
				return this._Customer_Bank_Account_Update_Logs;
			}
			set
			{
				this._Customer_Bank_Account_Update_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Shop_Lodgement_Reimbursement", Storage="_Shop_Lodgement_Reimbursements", ThisKey="id", OtherKey="bank")]
		public EntitySet<Shop_Lodgement_Reimbursement> Shop_Lodgement_Reimbursements
		{
			get
			{
				return this._Shop_Lodgement_Reimbursements;
			}
			set
			{
				this._Shop_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Bank", Storage="_Branch1", ThisKey="branch", OtherKey="id", IsForeignKey=true)]
		public Branch Branch1
		{
			get
			{
				return this._Branch1.Entity;
			}
			set
			{
				Branch previousValue = this._Branch1.Entity;
				if (((previousValue != value) 
							|| (this._Branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch1.Entity = null;
						previousValue.Banks.Remove(this);
					}
					this._Branch1.Entity = value;
					if ((value != null))
					{
						value.Banks.Add(this);
						this._branch = value.id;
					}
					else
					{
						this._branch = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admin_Users(Admin_User entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = this;
		}
		
		private void detach_Admin_Users(Admin_User entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = null;
		}
		
		private void attach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = this;
		}
		
		private void detach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = null;
		}
		
		private void attach_Customer_Bank_Account_Update_Logs(Customer_Bank_Account_Update_Log entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = this;
		}
		
		private void detach_Customer_Bank_Account_Update_Logs(Customer_Bank_Account_Update_Log entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = null;
		}
		
		private void attach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = this;
		}
		
		private void detach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Bank1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank_Account_Type")]
	public partial class Bank_Account_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Bank_Account_Type()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Account_Type_Customer", Storage="_Customers", ThisKey="id", OtherKey="account_type")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Bank_Account_Type = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Bank_Account_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _filepath;
		
		private int _location;
		
		private string _location_name;
		
		private bool _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfilepathChanging(string value);
    partial void OnfilepathChanged();
    partial void OnlocationChanging(int value);
    partial void OnlocationChanged();
    partial void Onlocation_nameChanging(string value);
    partial void Onlocation_nameChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filepath", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string filepath
		{
			get
			{
				return this._filepath;
			}
			set
			{
				if ((this._filepath != value))
				{
					this.OnfilepathChanging(value);
					this.SendPropertyChanging();
					this._filepath = value;
					this.SendPropertyChanged("filepath");
					this.OnfilepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="Int NOT NULL")]
		public int location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string location_name
		{
			get
			{
				return this._location_name;
			}
			set
			{
				if ((this._location_name != value))
				{
					this.Onlocation_nameChanging(value);
					this.SendPropertyChanging();
					this._location_name = value;
					this.SendPropertyChanged("location_name");
					this.Onlocation_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bet")]
	public partial class Bet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ticket_reference_id;
		
		private string _master_ticket_id;
		
		private int _bet_type;
		
		private int _owner;
		
		private int _daily_game;
		
		private decimal _amount;
		
		private int _no_of_lines;
		
		private decimal _stake_per_line;
		
		private string _stakebet1;
		
		private string _stakebet2;
		
		private int _ticket_status;
		
		private System.DateTime _date_registered;
		
		private string _ipAdress;
		
		private System.Nullable<decimal> _won_amount;
		
		private int _owner_type;
		
		private int _reg_method;
		
		private System.Nullable<int> _currency;
		
		private System.Nullable<decimal> _possible_win;
		
		private System.Nullable<decimal> _bonus;
		
		private System.Nullable<decimal> _confirmed_return;
		
		private System.Nullable<int> _ticket_type;
		
		private System.Nullable<decimal> _possible_bonus;
		
		private System.Nullable<int> _shop;
		
		private System.Nullable<bool> _ispaid;
		
		private System.Nullable<bool> _isexpired;
		
		private System.Nullable<int> _payoutshop;
		
		private System.Nullable<int> _payoutBy;
		
		private System.Nullable<System.DateTime> _payoutDate;
		
		private int _Ticket;
		
		private EntityRef<Bet_Type> _Bet_Type1;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Daily_Game> _Daily_Game1;
		
		private EntityRef<Ticket> _Ticket1;
		
		private EntityRef<Ticket_Registration_Method> _Ticket_Registration_Method;
		
		private EntityRef<Ticket_Status> _Ticket_Status1;
		
		private EntityRef<Ticket_Type> _Ticket_Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onticket_reference_idChanging(string value);
    partial void Onticket_reference_idChanged();
    partial void Onmaster_ticket_idChanging(string value);
    partial void Onmaster_ticket_idChanged();
    partial void Onbet_typeChanging(int value);
    partial void Onbet_typeChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void Ondaily_gameChanging(int value);
    partial void Ondaily_gameChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onno_of_linesChanging(int value);
    partial void Onno_of_linesChanged();
    partial void Onstake_per_lineChanging(decimal value);
    partial void Onstake_per_lineChanged();
    partial void Onstakebet1Changing(string value);
    partial void Onstakebet1Changed();
    partial void Onstakebet2Changing(string value);
    partial void Onstakebet2Changed();
    partial void Onticket_statusChanging(int value);
    partial void Onticket_statusChanged();
    partial void Ondate_registeredChanging(System.DateTime value);
    partial void Ondate_registeredChanged();
    partial void OnipAdressChanging(string value);
    partial void OnipAdressChanged();
    partial void Onwon_amountChanging(System.Nullable<decimal> value);
    partial void Onwon_amountChanged();
    partial void Onowner_typeChanging(int value);
    partial void Onowner_typeChanged();
    partial void Onreg_methodChanging(int value);
    partial void Onreg_methodChanged();
    partial void OncurrencyChanging(System.Nullable<int> value);
    partial void OncurrencyChanged();
    partial void Onpossible_winChanging(System.Nullable<decimal> value);
    partial void Onpossible_winChanged();
    partial void OnbonusChanging(System.Nullable<decimal> value);
    partial void OnbonusChanged();
    partial void Onconfirmed_returnChanging(System.Nullable<decimal> value);
    partial void Onconfirmed_returnChanged();
    partial void Onticket_typeChanging(System.Nullable<int> value);
    partial void Onticket_typeChanged();
    partial void Onpossible_bonusChanging(System.Nullable<decimal> value);
    partial void Onpossible_bonusChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OnispaidChanging(System.Nullable<bool> value);
    partial void OnispaidChanged();
    partial void OnisexpiredChanging(System.Nullable<bool> value);
    partial void OnisexpiredChanged();
    partial void OnpayoutshopChanging(System.Nullable<int> value);
    partial void OnpayoutshopChanged();
    partial void OnpayoutByChanging(System.Nullable<int> value);
    partial void OnpayoutByChanged();
    partial void OnpayoutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpayoutDateChanged();
    partial void OnTicketChanging(int value);
    partial void OnTicketChanged();
    #endregion
		
		public Bet()
		{
			this._Bet_Type1 = default(EntityRef<Bet_Type>);
			this._Customer = default(EntityRef<Customer>);
			this._Daily_Game1 = default(EntityRef<Daily_Game>);
			this._Ticket1 = default(EntityRef<Ticket>);
			this._Ticket_Registration_Method = default(EntityRef<Ticket_Registration_Method>);
			this._Ticket_Status1 = default(EntityRef<Ticket_Status>);
			this._Ticket_Type1 = default(EntityRef<Ticket_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_reference_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticket_reference_id
		{
			get
			{
				return this._ticket_reference_id;
			}
			set
			{
				if ((this._ticket_reference_id != value))
				{
					this.Onticket_reference_idChanging(value);
					this.SendPropertyChanging();
					this._ticket_reference_id = value;
					this.SendPropertyChanged("ticket_reference_id");
					this.Onticket_reference_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_master_ticket_id", DbType="VarChar(50)")]
		public string master_ticket_id
		{
			get
			{
				return this._master_ticket_id;
			}
			set
			{
				if ((this._master_ticket_id != value))
				{
					this.Onmaster_ticket_idChanging(value);
					this.SendPropertyChanging();
					this._master_ticket_id = value;
					this.SendPropertyChanged("master_ticket_id");
					this.Onmaster_ticket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bet_type", DbType="Int NOT NULL")]
		public int bet_type
		{
			get
			{
				return this._bet_type;
			}
			set
			{
				if ((this._bet_type != value))
				{
					if (this._Bet_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbet_typeChanging(value);
					this.SendPropertyChanging();
					this._bet_type = value;
					this.SendPropertyChanged("bet_type");
					this.Onbet_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_game", DbType="Int NOT NULL")]
		public int daily_game
		{
			get
			{
				return this._daily_game;
			}
			set
			{
				if ((this._daily_game != value))
				{
					if (this._Daily_Game1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_gameChanging(value);
					this.SendPropertyChanging();
					this._daily_game = value;
					this.SendPropertyChanged("daily_game");
					this.Ondaily_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_of_lines", DbType="Int NOT NULL")]
		public int no_of_lines
		{
			get
			{
				return this._no_of_lines;
			}
			set
			{
				if ((this._no_of_lines != value))
				{
					this.Onno_of_linesChanging(value);
					this.SendPropertyChanging();
					this._no_of_lines = value;
					this.SendPropertyChanged("no_of_lines");
					this.Onno_of_linesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake_per_line", DbType="Decimal(18,2) NOT NULL")]
		public decimal stake_per_line
		{
			get
			{
				return this._stake_per_line;
			}
			set
			{
				if ((this._stake_per_line != value))
				{
					this.Onstake_per_lineChanging(value);
					this.SendPropertyChanging();
					this._stake_per_line = value;
					this.SendPropertyChanged("stake_per_line");
					this.Onstake_per_lineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakebet1", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string stakebet1
		{
			get
			{
				return this._stakebet1;
			}
			set
			{
				if ((this._stakebet1 != value))
				{
					this.Onstakebet1Changing(value);
					this.SendPropertyChanging();
					this._stakebet1 = value;
					this.SendPropertyChanged("stakebet1");
					this.Onstakebet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakebet2", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string stakebet2
		{
			get
			{
				return this._stakebet2;
			}
			set
			{
				if ((this._stakebet2 != value))
				{
					this.Onstakebet2Changing(value);
					this.SendPropertyChanging();
					this._stakebet2 = value;
					this.SendPropertyChanged("stakebet2");
					this.Onstakebet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_status", DbType="Int NOT NULL")]
		public int ticket_status
		{
			get
			{
				return this._ticket_status;
			}
			set
			{
				if ((this._ticket_status != value))
				{
					if (this._Ticket_Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onticket_statusChanging(value);
					this.SendPropertyChanging();
					this._ticket_status = value;
					this.SendPropertyChanged("ticket_status");
					this.Onticket_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_registered", DbType="DateTime NOT NULL")]
		public System.DateTime date_registered
		{
			get
			{
				return this._date_registered;
			}
			set
			{
				if ((this._date_registered != value))
				{
					this.Ondate_registeredChanging(value);
					this.SendPropertyChanging();
					this._date_registered = value;
					this.SendPropertyChanged("date_registered");
					this.Ondate_registeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAdress", DbType="VarChar(50)")]
		public string ipAdress
		{
			get
			{
				return this._ipAdress;
			}
			set
			{
				if ((this._ipAdress != value))
				{
					this.OnipAdressChanging(value);
					this.SendPropertyChanging();
					this._ipAdress = value;
					this.SendPropertyChanged("ipAdress");
					this.OnipAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_won_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> won_amount
		{
			get
			{
				return this._won_amount;
			}
			set
			{
				if ((this._won_amount != value))
				{
					this.Onwon_amountChanging(value);
					this.SendPropertyChanging();
					this._won_amount = value;
					this.SendPropertyChanged("won_amount");
					this.Onwon_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner_type", DbType="Int NOT NULL")]
		public int owner_type
		{
			get
			{
				return this._owner_type;
			}
			set
			{
				if ((this._owner_type != value))
				{
					this.Onowner_typeChanging(value);
					this.SendPropertyChanging();
					this._owner_type = value;
					this.SendPropertyChanged("owner_type");
					this.Onowner_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_method", DbType="Int NOT NULL")]
		public int reg_method
		{
			get
			{
				return this._reg_method;
			}
			set
			{
				if ((this._reg_method != value))
				{
					if (this._Ticket_Registration_Method.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreg_methodChanging(value);
					this.SendPropertyChanging();
					this._reg_method = value;
					this.SendPropertyChanged("reg_method");
					this.Onreg_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int")]
		public System.Nullable<int> currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_possible_win", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> possible_win
		{
			get
			{
				return this._possible_win;
			}
			set
			{
				if ((this._possible_win != value))
				{
					this.Onpossible_winChanging(value);
					this.SendPropertyChanging();
					this._possible_win = value;
					this.SendPropertyChanged("possible_win");
					this.Onpossible_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> bonus
		{
			get
			{
				return this._bonus;
			}
			set
			{
				if ((this._bonus != value))
				{
					this.OnbonusChanging(value);
					this.SendPropertyChanging();
					this._bonus = value;
					this.SendPropertyChanged("bonus");
					this.OnbonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmed_return", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> confirmed_return
		{
			get
			{
				return this._confirmed_return;
			}
			set
			{
				if ((this._confirmed_return != value))
				{
					this.Onconfirmed_returnChanging(value);
					this.SendPropertyChanging();
					this._confirmed_return = value;
					this.SendPropertyChanged("confirmed_return");
					this.Onconfirmed_returnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_type", DbType="Int")]
		public System.Nullable<int> ticket_type
		{
			get
			{
				return this._ticket_type;
			}
			set
			{
				if ((this._ticket_type != value))
				{
					if (this._Ticket_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onticket_typeChanging(value);
					this.SendPropertyChanging();
					this._ticket_type = value;
					this.SendPropertyChanged("ticket_type");
					this.Onticket_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_possible_bonus", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> possible_bonus
		{
			get
			{
				return this._possible_bonus;
			}
			set
			{
				if ((this._possible_bonus != value))
				{
					this.Onpossible_bonusChanging(value);
					this.SendPropertyChanging();
					this._possible_bonus = value;
					this.SendPropertyChanged("possible_bonus");
					this.Onpossible_bonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ispaid", DbType="Bit")]
		public System.Nullable<bool> ispaid
		{
			get
			{
				return this._ispaid;
			}
			set
			{
				if ((this._ispaid != value))
				{
					this.OnispaidChanging(value);
					this.SendPropertyChanging();
					this._ispaid = value;
					this.SendPropertyChanged("ispaid");
					this.OnispaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isexpired", DbType="Bit")]
		public System.Nullable<bool> isexpired
		{
			get
			{
				return this._isexpired;
			}
			set
			{
				if ((this._isexpired != value))
				{
					this.OnisexpiredChanging(value);
					this.SendPropertyChanging();
					this._isexpired = value;
					this.SendPropertyChanged("isexpired");
					this.OnisexpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payoutshop", DbType="Int")]
		public System.Nullable<int> payoutshop
		{
			get
			{
				return this._payoutshop;
			}
			set
			{
				if ((this._payoutshop != value))
				{
					this.OnpayoutshopChanging(value);
					this.SendPropertyChanging();
					this._payoutshop = value;
					this.SendPropertyChanged("payoutshop");
					this.OnpayoutshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payoutBy", DbType="Int")]
		public System.Nullable<int> payoutBy
		{
			get
			{
				return this._payoutBy;
			}
			set
			{
				if ((this._payoutBy != value))
				{
					this.OnpayoutByChanging(value);
					this.SendPropertyChanging();
					this._payoutBy = value;
					this.SendPropertyChanged("payoutBy");
					this.OnpayoutByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payoutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> payoutDate
		{
			get
			{
				return this._payoutDate;
			}
			set
			{
				if ((this._payoutDate != value))
				{
					this.OnpayoutDateChanging(value);
					this.SendPropertyChanging();
					this._payoutDate = value;
					this.SendPropertyChanged("payoutDate");
					this.OnpayoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="Int NOT NULL")]
		public int Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					if (this._Ticket1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketChanging(value);
					this.SendPropertyChanging();
					this._Ticket = value;
					this.SendPropertyChanged("Ticket");
					this.OnTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bet_Type_Bet", Storage="_Bet_Type1", ThisKey="bet_type", OtherKey="id", IsForeignKey=true)]
		public Bet_Type Bet_Type1
		{
			get
			{
				return this._Bet_Type1.Entity;
			}
			set
			{
				Bet_Type previousValue = this._Bet_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Bet_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bet_Type1.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Bet_Type1.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._bet_type = value.id;
					}
					else
					{
						this._bet_type = default(int);
					}
					this.SendPropertyChanged("Bet_Type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bet", Storage="_Customer", ThisKey="owner", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Bet", Storage="_Daily_Game1", ThisKey="daily_game", OtherKey="id", IsForeignKey=true)]
		public Daily_Game Daily_Game1
		{
			get
			{
				return this._Daily_Game1.Entity;
			}
			set
			{
				Daily_Game previousValue = this._Daily_Game1.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Game1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Game1.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Daily_Game1.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._daily_game = value.id;
					}
					else
					{
						this._daily_game = default(int);
					}
					this.SendPropertyChanged("Daily_Game1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Bet", Storage="_Ticket1", ThisKey="Ticket", OtherKey="id", IsForeignKey=true)]
		public Ticket Ticket1
		{
			get
			{
				return this._Ticket1.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket1.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Ticket1.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._Ticket = value.id;
					}
					else
					{
						this._Ticket = default(int);
					}
					this.SendPropertyChanged("Ticket1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Registration_Method_Bet", Storage="_Ticket_Registration_Method", ThisKey="reg_method", OtherKey="id", IsForeignKey=true)]
		public Ticket_Registration_Method Ticket_Registration_Method
		{
			get
			{
				return this._Ticket_Registration_Method.Entity;
			}
			set
			{
				Ticket_Registration_Method previousValue = this._Ticket_Registration_Method.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Registration_Method.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Registration_Method.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Ticket_Registration_Method.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._reg_method = value.id;
					}
					else
					{
						this._reg_method = default(int);
					}
					this.SendPropertyChanged("Ticket_Registration_Method");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Status_Bet", Storage="_Ticket_Status1", ThisKey="ticket_status", OtherKey="id", IsForeignKey=true)]
		public Ticket_Status Ticket_Status1
		{
			get
			{
				return this._Ticket_Status1.Entity;
			}
			set
			{
				Ticket_Status previousValue = this._Ticket_Status1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Status1.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Ticket_Status1.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._ticket_status = value.id;
					}
					else
					{
						this._ticket_status = default(int);
					}
					this.SendPropertyChanged("Ticket_Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Type_Bet", Storage="_Ticket_Type1", ThisKey="ticket_type", OtherKey="id", IsForeignKey=true)]
		public Ticket_Type Ticket_Type1
		{
			get
			{
				return this._Ticket_Type1.Entity;
			}
			set
			{
				Ticket_Type previousValue = this._Ticket_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Type1.Entity = null;
						previousValue.Bets.Remove(this);
					}
					this._Ticket_Type1.Entity = value;
					if ((value != null))
					{
						value.Bets.Add(this);
						this._ticket_type = value.id;
					}
					else
					{
						this._ticket_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ticket_Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bet_Type")]
	public partial class Bet_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NAP;
		
		private string _code;
		
		private decimal _win_factor;
		
		private int _max_no_of_balls;
		
		private int _min_no_of_balls;
		
		private int _game_type;
		
		private System.Nullable<decimal> _min_stake;
		
		private System.Nullable<decimal> _max_stake;
		
		private EntitySet<Bet> _Bets;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNAPChanging(string value);
    partial void OnNAPChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Onwin_factorChanging(decimal value);
    partial void Onwin_factorChanged();
    partial void Onmax_no_of_ballsChanging(int value);
    partial void Onmax_no_of_ballsChanged();
    partial void Onmin_no_of_ballsChanging(int value);
    partial void Onmin_no_of_ballsChanged();
    partial void Ongame_typeChanging(int value);
    partial void Ongame_typeChanged();
    partial void Onmin_stakeChanging(System.Nullable<decimal> value);
    partial void Onmin_stakeChanged();
    partial void Onmax_stakeChanging(System.Nullable<decimal> value);
    partial void Onmax_stakeChanged();
    #endregion
		
		public Bet_Type()
		{
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAP", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string NAP
		{
			get
			{
				return this._NAP;
			}
			set
			{
				if ((this._NAP != value))
				{
					this.OnNAPChanging(value);
					this.SendPropertyChanging();
					this._NAP = value;
					this.SendPropertyChanged("NAP");
					this.OnNAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_win_factor", DbType="Decimal(18,2) NOT NULL")]
		public decimal win_factor
		{
			get
			{
				return this._win_factor;
			}
			set
			{
				if ((this._win_factor != value))
				{
					this.Onwin_factorChanging(value);
					this.SendPropertyChanging();
					this._win_factor = value;
					this.SendPropertyChanged("win_factor");
					this.Onwin_factorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_no_of_balls", DbType="Int NOT NULL")]
		public int max_no_of_balls
		{
			get
			{
				return this._max_no_of_balls;
			}
			set
			{
				if ((this._max_no_of_balls != value))
				{
					this.Onmax_no_of_ballsChanging(value);
					this.SendPropertyChanging();
					this._max_no_of_balls = value;
					this.SendPropertyChanged("max_no_of_balls");
					this.Onmax_no_of_ballsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_no_of_balls", DbType="Int NOT NULL")]
		public int min_no_of_balls
		{
			get
			{
				return this._min_no_of_balls;
			}
			set
			{
				if ((this._min_no_of_balls != value))
				{
					this.Onmin_no_of_ballsChanging(value);
					this.SendPropertyChanging();
					this._min_no_of_balls = value;
					this.SendPropertyChanged("min_no_of_balls");
					this.Onmin_no_of_ballsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_type", DbType="Int NOT NULL")]
		public int game_type
		{
			get
			{
				return this._game_type;
			}
			set
			{
				if ((this._game_type != value))
				{
					this.Ongame_typeChanging(value);
					this.SendPropertyChanging();
					this._game_type = value;
					this.SendPropertyChanged("game_type");
					this.Ongame_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> min_stake
		{
			get
			{
				return this._min_stake;
			}
			set
			{
				if ((this._min_stake != value))
				{
					this.Onmin_stakeChanging(value);
					this.SendPropertyChanging();
					this._min_stake = value;
					this.SendPropertyChanged("min_stake");
					this.Onmin_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_stake
		{
			get
			{
				return this._max_stake;
			}
			set
			{
				if ((this._max_stake != value))
				{
					this.Onmax_stakeChanging(value);
					this.SendPropertyChanging();
					this._max_stake = value;
					this.SendPropertyChanged("max_stake");
					this.Onmax_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bet_Type_Bet", Storage="_Bets", ThisKey="id", OtherKey="bet_type")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bet_Type_Ticket", Storage="_Tickets", ThisKey="id", OtherKey="bet_type")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Bet_Type1 = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Bet_Type1 = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Bet_Type1 = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Bet_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bonus")]
	public partial class Bonus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _bonus_type;
		
		private string _code;
		
		private bool _fixed_or_percentage;
		
		private System.Nullable<decimal> _amount;
		
		private int _status;
		
		private System.Nullable<int> _no_of_times_per_staker;
		
		private System.Nullable<bool> _affects_online_user;
		
		private System.Nullable<bool> _affects_shop_staker;
		
		private System.Nullable<bool> _affect_shop_cashier;
		
		private System.Nullable<int> _bonus_condition;
		
		private string _description;
		
		private string _game_type_list;
		
		private string _sub_game_list;
		
		private EntitySet<Bonus_Log> _Bonus_Logs;
		
		private EntityRef<Bonus_Condition> _Bonus_Condition1;
		
		private EntityRef<Bonus_Type> _Bonus_Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onbonus_typeChanging(int value);
    partial void Onbonus_typeChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Onfixed_or_percentageChanging(bool value);
    partial void Onfixed_or_percentageChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onno_of_times_per_stakerChanging(System.Nullable<int> value);
    partial void Onno_of_times_per_stakerChanged();
    partial void Onaffects_online_userChanging(System.Nullable<bool> value);
    partial void Onaffects_online_userChanged();
    partial void Onaffects_shop_stakerChanging(System.Nullable<bool> value);
    partial void Onaffects_shop_stakerChanged();
    partial void Onaffect_shop_cashierChanging(System.Nullable<bool> value);
    partial void Onaffect_shop_cashierChanged();
    partial void Onbonus_conditionChanging(System.Nullable<int> value);
    partial void Onbonus_conditionChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ongame_type_listChanging(string value);
    partial void Ongame_type_listChanged();
    partial void Onsub_game_listChanging(string value);
    partial void Onsub_game_listChanged();
    #endregion
		
		public Bonus()
		{
			this._Bonus_Logs = new EntitySet<Bonus_Log>(new Action<Bonus_Log>(this.attach_Bonus_Logs), new Action<Bonus_Log>(this.detach_Bonus_Logs));
			this._Bonus_Condition1 = default(EntityRef<Bonus_Condition>);
			this._Bonus_Type1 = default(EntityRef<Bonus_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus_type", DbType="Int NOT NULL")]
		public int bonus_type
		{
			get
			{
				return this._bonus_type;
			}
			set
			{
				if ((this._bonus_type != value))
				{
					if (this._Bonus_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbonus_typeChanging(value);
					this.SendPropertyChanging();
					this._bonus_type = value;
					this.SendPropertyChanged("bonus_type");
					this.Onbonus_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fixed_or_percentage", DbType="Bit NOT NULL")]
		public bool fixed_or_percentage
		{
			get
			{
				return this._fixed_or_percentage;
			}
			set
			{
				if ((this._fixed_or_percentage != value))
				{
					this.Onfixed_or_percentageChanging(value);
					this.SendPropertyChanging();
					this._fixed_or_percentage = value;
					this.SendPropertyChanged("fixed_or_percentage");
					this.Onfixed_or_percentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_of_times_per_staker", DbType="Int")]
		public System.Nullable<int> no_of_times_per_staker
		{
			get
			{
				return this._no_of_times_per_staker;
			}
			set
			{
				if ((this._no_of_times_per_staker != value))
				{
					this.Onno_of_times_per_stakerChanging(value);
					this.SendPropertyChanging();
					this._no_of_times_per_staker = value;
					this.SendPropertyChanged("no_of_times_per_staker");
					this.Onno_of_times_per_stakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affects_online_user", DbType="Bit")]
		public System.Nullable<bool> affects_online_user
		{
			get
			{
				return this._affects_online_user;
			}
			set
			{
				if ((this._affects_online_user != value))
				{
					this.Onaffects_online_userChanging(value);
					this.SendPropertyChanging();
					this._affects_online_user = value;
					this.SendPropertyChanged("affects_online_user");
					this.Onaffects_online_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affects_shop_staker", DbType="Bit")]
		public System.Nullable<bool> affects_shop_staker
		{
			get
			{
				return this._affects_shop_staker;
			}
			set
			{
				if ((this._affects_shop_staker != value))
				{
					this.Onaffects_shop_stakerChanging(value);
					this.SendPropertyChanging();
					this._affects_shop_staker = value;
					this.SendPropertyChanged("affects_shop_staker");
					this.Onaffects_shop_stakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affect_shop_cashier", DbType="Bit")]
		public System.Nullable<bool> affect_shop_cashier
		{
			get
			{
				return this._affect_shop_cashier;
			}
			set
			{
				if ((this._affect_shop_cashier != value))
				{
					this.Onaffect_shop_cashierChanging(value);
					this.SendPropertyChanging();
					this._affect_shop_cashier = value;
					this.SendPropertyChanged("affect_shop_cashier");
					this.Onaffect_shop_cashierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus_condition", DbType="Int")]
		public System.Nullable<int> bonus_condition
		{
			get
			{
				return this._bonus_condition;
			}
			set
			{
				if ((this._bonus_condition != value))
				{
					if (this._Bonus_Condition1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbonus_conditionChanging(value);
					this.SendPropertyChanging();
					this._bonus_condition = value;
					this.SendPropertyChanged("bonus_condition");
					this.Onbonus_conditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_type_list", DbType="VarChar(500)")]
		public string game_type_list
		{
			get
			{
				return this._game_type_list;
			}
			set
			{
				if ((this._game_type_list != value))
				{
					this.Ongame_type_listChanging(value);
					this.SendPropertyChanging();
					this._game_type_list = value;
					this.SendPropertyChanged("game_type_list");
					this.Ongame_type_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_game_list", DbType="VarChar(500)")]
		public string sub_game_list
		{
			get
			{
				return this._sub_game_list;
			}
			set
			{
				if ((this._sub_game_list != value))
				{
					this.Onsub_game_listChanging(value);
					this.SendPropertyChanging();
					this._sub_game_list = value;
					this.SendPropertyChanged("sub_game_list");
					this.Onsub_game_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_Bonus_Log", Storage="_Bonus_Logs", ThisKey="id", OtherKey="bonus")]
		public EntitySet<Bonus_Log> Bonus_Logs
		{
			get
			{
				return this._Bonus_Logs;
			}
			set
			{
				this._Bonus_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_Condition_Bonus", Storage="_Bonus_Condition1", ThisKey="bonus_condition", OtherKey="id", IsForeignKey=true)]
		public Bonus_Condition Bonus_Condition1
		{
			get
			{
				return this._Bonus_Condition1.Entity;
			}
			set
			{
				Bonus_Condition previousValue = this._Bonus_Condition1.Entity;
				if (((previousValue != value) 
							|| (this._Bonus_Condition1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus_Condition1.Entity = null;
						previousValue.Bonus.Remove(this);
					}
					this._Bonus_Condition1.Entity = value;
					if ((value != null))
					{
						value.Bonus.Add(this);
						this._bonus_condition = value.id;
					}
					else
					{
						this._bonus_condition = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bonus_Condition1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_Type_Bonus", Storage="_Bonus_Type1", ThisKey="bonus_type", OtherKey="id", IsForeignKey=true)]
		public Bonus_Type Bonus_Type1
		{
			get
			{
				return this._Bonus_Type1.Entity;
			}
			set
			{
				Bonus_Type previousValue = this._Bonus_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Bonus_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus_Type1.Entity = null;
						previousValue.Bonus.Remove(this);
					}
					this._Bonus_Type1.Entity = value;
					if ((value != null))
					{
						value.Bonus.Add(this);
						this._bonus_type = value.id;
					}
					else
					{
						this._bonus_type = default(int);
					}
					this.SendPropertyChanged("Bonus_Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bonus_Logs(Bonus_Log entity)
		{
			this.SendPropertyChanging();
			entity.Bonus1 = this;
		}
		
		private void detach_Bonus_Logs(Bonus_Log entity)
		{
			this.SendPropertyChanging();
			entity.Bonus1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bonus_Condition")]
	public partial class Bonus_Condition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _max_amount;
		
		private System.Nullable<decimal> _min_amount;
		
		private System.Nullable<decimal> _max_combination;
		
		private System.Nullable<decimal> _min_combination;
		
		private System.Nullable<decimal> _min_stake;
		
		private System.Nullable<decimal> _max_stake;
		
		private System.Nullable<decimal> _min_odds;
		
		private System.Nullable<decimal> _max_odds;
		
		private EntitySet<Bonus> _Bonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmax_amountChanging(System.Nullable<decimal> value);
    partial void Onmax_amountChanged();
    partial void Onmin_amountChanging(System.Nullable<decimal> value);
    partial void Onmin_amountChanged();
    partial void Onmax_combinationChanging(System.Nullable<decimal> value);
    partial void Onmax_combinationChanged();
    partial void Onmin_combinationChanging(System.Nullable<decimal> value);
    partial void Onmin_combinationChanged();
    partial void Onmin_stakeChanging(System.Nullable<decimal> value);
    partial void Onmin_stakeChanged();
    partial void Onmax_stakeChanging(System.Nullable<decimal> value);
    partial void Onmax_stakeChanged();
    partial void Onmin_oddsChanging(System.Nullable<decimal> value);
    partial void Onmin_oddsChanged();
    partial void Onmax_oddsChanging(System.Nullable<decimal> value);
    partial void Onmax_oddsChanged();
    #endregion
		
		public Bonus_Condition()
		{
			this._Bonus = new EntitySet<Bonus>(new Action<Bonus>(this.attach_Bonus), new Action<Bonus>(this.detach_Bonus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_amount
		{
			get
			{
				return this._max_amount;
			}
			set
			{
				if ((this._max_amount != value))
				{
					this.Onmax_amountChanging(value);
					this.SendPropertyChanging();
					this._max_amount = value;
					this.SendPropertyChanged("max_amount");
					this.Onmax_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> min_amount
		{
			get
			{
				return this._min_amount;
			}
			set
			{
				if ((this._min_amount != value))
				{
					this.Onmin_amountChanging(value);
					this.SendPropertyChanging();
					this._min_amount = value;
					this.SendPropertyChanged("min_amount");
					this.Onmin_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_combination", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_combination
		{
			get
			{
				return this._max_combination;
			}
			set
			{
				if ((this._max_combination != value))
				{
					this.Onmax_combinationChanging(value);
					this.SendPropertyChanging();
					this._max_combination = value;
					this.SendPropertyChanged("max_combination");
					this.Onmax_combinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_combination", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> min_combination
		{
			get
			{
				return this._min_combination;
			}
			set
			{
				if ((this._min_combination != value))
				{
					this.Onmin_combinationChanging(value);
					this.SendPropertyChanging();
					this._min_combination = value;
					this.SendPropertyChanged("min_combination");
					this.Onmin_combinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> min_stake
		{
			get
			{
				return this._min_stake;
			}
			set
			{
				if ((this._min_stake != value))
				{
					this.Onmin_stakeChanging(value);
					this.SendPropertyChanging();
					this._min_stake = value;
					this.SendPropertyChanged("min_stake");
					this.Onmin_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_stake
		{
			get
			{
				return this._max_stake;
			}
			set
			{
				if ((this._max_stake != value))
				{
					this.Onmax_stakeChanging(value);
					this.SendPropertyChanging();
					this._max_stake = value;
					this.SendPropertyChanged("max_stake");
					this.Onmax_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_odds", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> min_odds
		{
			get
			{
				return this._min_odds;
			}
			set
			{
				if ((this._min_odds != value))
				{
					this.Onmin_oddsChanging(value);
					this.SendPropertyChanging();
					this._min_odds = value;
					this.SendPropertyChanged("min_odds");
					this.Onmin_oddsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_odds", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_odds
		{
			get
			{
				return this._max_odds;
			}
			set
			{
				if ((this._max_odds != value))
				{
					this.Onmax_oddsChanging(value);
					this.SendPropertyChanging();
					this._max_odds = value;
					this.SendPropertyChanged("max_odds");
					this.Onmax_oddsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_Condition_Bonus", Storage="_Bonus", ThisKey="id", OtherKey="bonus_condition")]
		public EntitySet<Bonus> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				this._Bonus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Bonus_Condition1 = this;
		}
		
		private void detach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Bonus_Condition1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bonus_Log")]
	public partial class Bonus_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private int _bonus;
		
		private decimal _bonus_amount;
		
		private System.DateTime _date;
		
		private int _posted_by;
		
		private System.Nullable<decimal> _original_amount;
		
		private System.Nullable<bool> _is_ticket_bonus;
		
		private System.Nullable<int> _reference_id;
		
		private EntityRef<Bonus> _Bonus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void OnbonusChanging(int value);
    partial void OnbonusChanged();
    partial void Onbonus_amountChanging(decimal value);
    partial void Onbonus_amountChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onposted_byChanging(int value);
    partial void Onposted_byChanged();
    partial void Onoriginal_amountChanging(System.Nullable<decimal> value);
    partial void Onoriginal_amountChanged();
    partial void Onis_ticket_bonusChanging(System.Nullable<bool> value);
    partial void Onis_ticket_bonusChanged();
    partial void Onreference_idChanging(System.Nullable<int> value);
    partial void Onreference_idChanged();
    #endregion
		
		public Bonus_Log()
		{
			this._Bonus1 = default(EntityRef<Bonus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus", DbType="Int NOT NULL")]
		public int bonus
		{
			get
			{
				return this._bonus;
			}
			set
			{
				if ((this._bonus != value))
				{
					if (this._Bonus1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbonusChanging(value);
					this.SendPropertyChanging();
					this._bonus = value;
					this.SendPropertyChanged("bonus");
					this.OnbonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal bonus_amount
		{
			get
			{
				return this._bonus_amount;
			}
			set
			{
				if ((this._bonus_amount != value))
				{
					this.Onbonus_amountChanging(value);
					this.SendPropertyChanging();
					this._bonus_amount = value;
					this.SendPropertyChanged("bonus_amount");
					this.Onbonus_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int NOT NULL")]
		public int posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> original_amount
		{
			get
			{
				return this._original_amount;
			}
			set
			{
				if ((this._original_amount != value))
				{
					this.Onoriginal_amountChanging(value);
					this.SendPropertyChanging();
					this._original_amount = value;
					this.SendPropertyChanged("original_amount");
					this.Onoriginal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_ticket_bonus", DbType="Bit")]
		public System.Nullable<bool> is_ticket_bonus
		{
			get
			{
				return this._is_ticket_bonus;
			}
			set
			{
				if ((this._is_ticket_bonus != value))
				{
					this.Onis_ticket_bonusChanging(value);
					this.SendPropertyChanging();
					this._is_ticket_bonus = value;
					this.SendPropertyChanged("is_ticket_bonus");
					this.Onis_ticket_bonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference_id", DbType="Int")]
		public System.Nullable<int> reference_id
		{
			get
			{
				return this._reference_id;
			}
			set
			{
				if ((this._reference_id != value))
				{
					this.Onreference_idChanging(value);
					this.SendPropertyChanging();
					this._reference_id = value;
					this.SendPropertyChanged("reference_id");
					this.Onreference_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_Bonus_Log", Storage="_Bonus1", ThisKey="bonus", OtherKey="id", IsForeignKey=true)]
		public Bonus Bonus1
		{
			get
			{
				return this._Bonus1.Entity;
			}
			set
			{
				Bonus previousValue = this._Bonus1.Entity;
				if (((previousValue != value) 
							|| (this._Bonus1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bonus1.Entity = null;
						previousValue.Bonus_Logs.Remove(this);
					}
					this._Bonus1.Entity = value;
					if ((value != null))
					{
						value.Bonus_Logs.Add(this);
						this._bonus = value.id;
					}
					else
					{
						this._bonus = default(int);
					}
					this.SendPropertyChanged("Bonus1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bonus_Type")]
	public partial class Bonus_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private System.Nullable<bool> _is_on_ticket;
		
		private EntitySet<Bonus> _Bonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Onis_on_ticketChanging(System.Nullable<bool> value);
    partial void Onis_on_ticketChanged();
    #endregion
		
		public Bonus_Type()
		{
			this._Bonus = new EntitySet<Bonus>(new Action<Bonus>(this.attach_Bonus), new Action<Bonus>(this.detach_Bonus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_on_ticket", DbType="Bit")]
		public System.Nullable<bool> is_on_ticket
		{
			get
			{
				return this._is_on_ticket;
			}
			set
			{
				if ((this._is_on_ticket != value))
				{
					this.Onis_on_ticketChanging(value);
					this.SendPropertyChanging();
					this._is_on_ticket = value;
					this.SendPropertyChanged("is_on_ticket");
					this.Onis_on_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bonus_Type_Bonus", Storage="_Bonus", ThisKey="id", OtherKey="bonus_type")]
		public EntitySet<Bonus> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				this._Bonus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Bonus_Type1 = this;
		}
		
		private void detach_Bonus(Bonus entity)
		{
			this.SendPropertyChanging();
			entity.Bonus_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private int _state;
		
		private decimal _commission;
		
		private string _others;
		
		private EntitySet<Affiliate> _Affiliates;
		
		private EntitySet<Bank> _Banks;
		
		private EntitySet<Shop> _Shops;
		
		private EntityRef<State> _State1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnstateChanging(int value);
    partial void OnstateChanged();
    partial void OncommissionChanging(decimal value);
    partial void OncommissionChanged();
    partial void OnothersChanging(string value);
    partial void OnothersChanged();
    #endregion
		
		public Branch()
		{
			this._Affiliates = new EntitySet<Affiliate>(new Action<Affiliate>(this.attach_Affiliates), new Action<Affiliate>(this.detach_Affiliates));
			this._Banks = new EntitySet<Bank>(new Action<Bank>(this.attach_Banks), new Action<Bank>(this.detach_Banks));
			this._Shops = new EntitySet<Shop>(new Action<Shop>(this.attach_Shops), new Action<Shop>(this.detach_Shops));
			this._State1 = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Int NOT NULL")]
		public int state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					if (this._State1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commission", DbType="Decimal(18,2) NOT NULL")]
		public decimal commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OncommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("commission");
					this.OncommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_others", DbType="VarChar(200)")]
		public string others
		{
			get
			{
				return this._others;
			}
			set
			{
				if ((this._others != value))
				{
					this.OnothersChanging(value);
					this.SendPropertyChanging();
					this._others = value;
					this.SendPropertyChanged("others");
					this.OnothersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Affiliate", Storage="_Affiliates", ThisKey="id", OtherKey="branch")]
		public EntitySet<Affiliate> Affiliates
		{
			get
			{
				return this._Affiliates;
			}
			set
			{
				this._Affiliates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Bank", Storage="_Banks", ThisKey="id", OtherKey="branch")]
		public EntitySet<Bank> Banks
		{
			get
			{
				return this._Banks;
			}
			set
			{
				this._Banks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Shop", Storage="_Shops", ThisKey="id", OtherKey="branch")]
		public EntitySet<Shop> Shops
		{
			get
			{
				return this._Shops;
			}
			set
			{
				this._Shops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Branch", Storage="_State1", ThisKey="state", OtherKey="id", IsForeignKey=true)]
		public State State1
		{
			get
			{
				return this._State1.Entity;
			}
			set
			{
				State previousValue = this._State1.Entity;
				if (((previousValue != value) 
							|| (this._State1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State1.Entity = null;
						previousValue.Branches.Remove(this);
					}
					this._State1.Entity = value;
					if ((value != null))
					{
						value.Branches.Add(this);
						this._state = value.id;
					}
					else
					{
						this._state = default(int);
					}
					this.SendPropertyChanged("State1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = this;
		}
		
		private void detach_Affiliates(Affiliate entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = null;
		}
		
		private void attach_Banks(Bank entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = this;
		}
		
		private void detach_Banks(Bank entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = null;
		}
		
		private void attach_Shops(Shop entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = this;
		}
		
		private void detach_Shops(Shop entity)
		{
			this.SendPropertyChanging();
			entity.Branch1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config_Operation_Mode")]
	public partial class Config_Operation_Mode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Customer_Setting> _Customer_Settings;
		
		private EntitySet<Shop_Setting> _Shop_Settings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Config_Operation_Mode()
		{
			this._Customer_Settings = new EntitySet<Customer_Setting>(new Action<Customer_Setting>(this.attach_Customer_Settings), new Action<Customer_Setting>(this.detach_Customer_Settings));
			this._Shop_Settings = new EntitySet<Shop_Setting>(new Action<Shop_Setting>(this.attach_Shop_Settings), new Action<Shop_Setting>(this.detach_Shop_Settings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Config_Operation_Mode_Customer_Setting", Storage="_Customer_Settings", ThisKey="id", OtherKey="operation_mode")]
		public EntitySet<Customer_Setting> Customer_Settings
		{
			get
			{
				return this._Customer_Settings;
			}
			set
			{
				this._Customer_Settings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Config_Operation_Mode_Shop_Setting", Storage="_Shop_Settings", ThisKey="id", OtherKey="operationmode")]
		public EntitySet<Shop_Setting> Shop_Settings
		{
			get
			{
				return this._Shop_Settings;
			}
			set
			{
				this._Shop_Settings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Settings(Customer_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Config_Operation_Mode = this;
		}
		
		private void detach_Customer_Settings(Customer_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Config_Operation_Mode = null;
		}
		
		private void attach_Shop_Settings(Shop_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Config_Operation_Mode = this;
		}
		
		private void detach_Shop_Settings(Shop_Setting entity)
		{
			this.SendPropertyChanging();
			entity.Config_Operation_Mode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config_Payout_Type")]
	public partial class Config_Payout_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Config_Payout_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _country;
		
		private string _code;
		
		private System.Nullable<decimal> _ratio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncountryChanging(int value);
    partial void OncountryChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnratioChanging(System.Nullable<decimal> value);
    partial void OnratioChanged();
    #endregion
		
		public Currency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Int NOT NULL")]
		public int country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ratio", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ratio
		{
			get
			{
				return this._ratio;
			}
			set
			{
				if ((this._ratio != value))
				{
					this.OnratioChanging(value);
					this.SendPropertyChanging();
					this._ratio = value;
					this.SendPropertyChanged("ratio");
					this.OnratioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _middlename;
		
		private string _address;
		
		private string _mobile;
		
		private System.Nullable<int> _sex;
		
		private string _skype;
		
		private string _bbm_pin;
		
		private string _account_name;
		
		private string _account_number;
		
		private System.Nullable<int> _account_type;
		
		private System.Nullable<int> _bank;
		
		private System.Nullable<System.DateTime> _dateOfBirth;
		
		private System.Nullable<int> _state;
		
		private string _country;
		
		private string _other_information;
		
		private System.Nullable<int> _customer_type;
		
		private System.Nullable<int> _customer_category;
		
		private System.DateTime _dateRegistered;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private System.Nullable<int> _shop;
		
		private bool _subscribedsms;
		
		private bool _subscribedmail;
		
		private EntitySet<Bet> _Bets;
		
		private EntityRef<Customer_Account> _Customer_Account;
		
		private EntitySet<Customer_Bank_Account_Update_Log> _Customer_Bank_Account_Update_Logs;
		
		private EntitySet<Customer_Deposit> _Customer_Deposits;
		
		private EntitySet<Customer_Deposit_Request> _Customer_Deposit_Requests;
		
		private EntityRef<Customer_Login> _Customer_Login;
		
		private EntitySet<Customer_Modification_Log> _Customer_Modification_Logs;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntitySet<Customer_Payout_Request> _Customer_Payout_Requests;
		
		private EntityRef<Customer_Setting> _Customer_Setting;
		
		private EntitySet<customer_terminal_allocation> _customer_terminal_allocations;
		
		private EntitySet<Customer_Transaction> _Customer_Transactions;
		
		private EntityRef<Customer_Wallet> _Customer_Wallet;
		
		private EntitySet<Promo_Ticket> _Promo_Tickets;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Bank_Account_Type> _Bank_Account_Type;
		
		private EntityRef<Bank> _Bank1;
		
		private EntityRef<Customer_Category> _Customer_Category1;
		
		private EntityRef<Customer_Type> _Customer_Type1;
		
		private EntityRef<Shop> _Shop1;
		
		private EntityRef<State> _State1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnmiddlenameChanging(string value);
    partial void OnmiddlenameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnsexChanging(System.Nullable<int> value);
    partial void OnsexChanged();
    partial void OnskypeChanging(string value);
    partial void OnskypeChanged();
    partial void Onbbm_pinChanging(string value);
    partial void Onbbm_pinChanged();
    partial void Onaccount_nameChanging(string value);
    partial void Onaccount_nameChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void Onaccount_typeChanging(System.Nullable<int> value);
    partial void Onaccount_typeChanged();
    partial void OnbankChanging(System.Nullable<int> value);
    partial void OnbankChanged();
    partial void OndateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OndateOfBirthChanged();
    partial void OnstateChanging(System.Nullable<int> value);
    partial void OnstateChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void Onother_informationChanging(string value);
    partial void Onother_informationChanged();
    partial void Oncustomer_typeChanging(System.Nullable<int> value);
    partial void Oncustomer_typeChanged();
    partial void Oncustomer_categoryChanging(System.Nullable<int> value);
    partial void Oncustomer_categoryChanged();
    partial void OndateRegisteredChanging(System.DateTime value);
    partial void OndateRegisteredChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OnsubscribedsmsChanging(bool value);
    partial void OnsubscribedsmsChanged();
    partial void OnsubscribedmailChanging(bool value);
    partial void OnsubscribedmailChanged();
    #endregion
		
		public Customer()
		{
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Customer_Account = default(EntityRef<Customer_Account>);
			this._Customer_Bank_Account_Update_Logs = new EntitySet<Customer_Bank_Account_Update_Log>(new Action<Customer_Bank_Account_Update_Log>(this.attach_Customer_Bank_Account_Update_Logs), new Action<Customer_Bank_Account_Update_Log>(this.detach_Customer_Bank_Account_Update_Logs));
			this._Customer_Deposits = new EntitySet<Customer_Deposit>(new Action<Customer_Deposit>(this.attach_Customer_Deposits), new Action<Customer_Deposit>(this.detach_Customer_Deposits));
			this._Customer_Deposit_Requests = new EntitySet<Customer_Deposit_Request>(new Action<Customer_Deposit_Request>(this.attach_Customer_Deposit_Requests), new Action<Customer_Deposit_Request>(this.detach_Customer_Deposit_Requests));
			this._Customer_Login = default(EntityRef<Customer_Login>);
			this._Customer_Modification_Logs = new EntitySet<Customer_Modification_Log>(new Action<Customer_Modification_Log>(this.attach_Customer_Modification_Logs), new Action<Customer_Modification_Log>(this.detach_Customer_Modification_Logs));
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer_Payout_Requests = new EntitySet<Customer_Payout_Request>(new Action<Customer_Payout_Request>(this.attach_Customer_Payout_Requests), new Action<Customer_Payout_Request>(this.detach_Customer_Payout_Requests));
			this._Customer_Setting = default(EntityRef<Customer_Setting>);
			this._customer_terminal_allocations = new EntitySet<customer_terminal_allocation>(new Action<customer_terminal_allocation>(this.attach_customer_terminal_allocations), new Action<customer_terminal_allocation>(this.detach_customer_terminal_allocations));
			this._Customer_Transactions = new EntitySet<Customer_Transaction>(new Action<Customer_Transaction>(this.attach_Customer_Transactions), new Action<Customer_Transaction>(this.detach_Customer_Transactions));
			this._Customer_Wallet = default(EntityRef<Customer_Wallet>);
			this._Promo_Tickets = new EntitySet<Promo_Ticket>(new Action<Promo_Ticket>(this.attach_Promo_Tickets), new Action<Promo_Ticket>(this.detach_Promo_Tickets));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Bank_Account_Type = default(EntityRef<Bank_Account_Type>);
			this._Bank1 = default(EntityRef<Bank>);
			this._Customer_Category1 = default(EntityRef<Customer_Category>);
			this._Customer_Type1 = default(EntityRef<Customer_Type>);
			this._Shop1 = default(EntityRef<Shop>);
			this._State1 = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(150)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(150)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middlename", DbType="VarChar(150)")]
		public string middlename
		{
			get
			{
				return this._middlename;
			}
			set
			{
				if ((this._middlename != value))
				{
					this.OnmiddlenameChanging(value);
					this.SendPropertyChanging();
					this._middlename = value;
					this.SendPropertyChanged("middlename");
					this.OnmiddlenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(150)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="VarChar(150)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="Int")]
		public System.Nullable<int> sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skype", DbType="VarChar(50)")]
		public string skype
		{
			get
			{
				return this._skype;
			}
			set
			{
				if ((this._skype != value))
				{
					this.OnskypeChanging(value);
					this.SendPropertyChanging();
					this._skype = value;
					this.SendPropertyChanged("skype");
					this.OnskypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bbm_pin", DbType="VarChar(50)")]
		public string bbm_pin
		{
			get
			{
				return this._bbm_pin;
			}
			set
			{
				if ((this._bbm_pin != value))
				{
					this.Onbbm_pinChanging(value);
					this.SendPropertyChanging();
					this._bbm_pin = value;
					this.SendPropertyChanged("bbm_pin");
					this.Onbbm_pinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_name", DbType="VarChar(250)")]
		public string account_name
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.Onaccount_nameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("account_name");
					this.Onaccount_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(150)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_type", DbType="Int")]
		public System.Nullable<int> account_type
		{
			get
			{
				return this._account_type;
			}
			set
			{
				if ((this._account_type != value))
				{
					if (this._Bank_Account_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaccount_typeChanging(value);
					this.SendPropertyChanging();
					this._account_type = value;
					this.SendPropertyChanged("account_type");
					this.Onaccount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Int")]
		public System.Nullable<int> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					if (this._Bank1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> dateOfBirth
		{
			get
			{
				return this._dateOfBirth;
			}
			set
			{
				if ((this._dateOfBirth != value))
				{
					this.OndateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirth = value;
					this.SendPropertyChanged("dateOfBirth");
					this.OndateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					if (this._State1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(150)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other_information", DbType="VarChar(250)")]
		public string other_information
		{
			get
			{
				return this._other_information;
			}
			set
			{
				if ((this._other_information != value))
				{
					this.Onother_informationChanging(value);
					this.SendPropertyChanging();
					this._other_information = value;
					this.SendPropertyChanged("other_information");
					this.Onother_informationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_type", DbType="Int")]
		public System.Nullable<int> customer_type
		{
			get
			{
				return this._customer_type;
			}
			set
			{
				if ((this._customer_type != value))
				{
					if (this._Customer_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_type = value;
					this.SendPropertyChanged("customer_type");
					this.Oncustomer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_category", DbType="Int")]
		public System.Nullable<int> customer_category
		{
			get
			{
				return this._customer_category;
			}
			set
			{
				if ((this._customer_category != value))
				{
					if (this._Customer_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_categoryChanging(value);
					this.SendPropertyChanging();
					this._customer_category = value;
					this.SendPropertyChanged("customer_category");
					this.Oncustomer_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRegistered", DbType="DateTime NOT NULL")]
		public System.DateTime dateRegistered
		{
			get
			{
				return this._dateRegistered;
			}
			set
			{
				if ((this._dateRegistered != value))
				{
					this.OndateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._dateRegistered = value;
					this.SendPropertyChanged("dateRegistered");
					this.OndateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					if (this._Shop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribedsms", DbType="Bit NOT NULL")]
		public bool subscribedsms
		{
			get
			{
				return this._subscribedsms;
			}
			set
			{
				if ((this._subscribedsms != value))
				{
					this.OnsubscribedsmsChanging(value);
					this.SendPropertyChanging();
					this._subscribedsms = value;
					this.SendPropertyChanged("subscribedsms");
					this.OnsubscribedsmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscribedmail", DbType="Bit NOT NULL")]
		public bool subscribedmail
		{
			get
			{
				return this._subscribedmail;
			}
			set
			{
				if ((this._subscribedmail != value))
				{
					this.OnsubscribedmailChanging(value);
					this.SendPropertyChanging();
					this._subscribedmail = value;
					this.SendPropertyChanged("subscribedmail");
					this.OnsubscribedmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bet", Storage="_Bets", ThisKey="id", OtherKey="owner")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Account", Storage="_Customer_Account", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Customer_Account Customer_Account
		{
			get
			{
				return this._Customer_Account.Entity;
			}
			set
			{
				Customer_Account previousValue = this._Customer_Account.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Account.Entity = null;
						previousValue.Customer = null;
					}
					this._Customer_Account.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("Customer_Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Bank_Account_Update_Log", Storage="_Customer_Bank_Account_Update_Logs", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Bank_Account_Update_Log> Customer_Bank_Account_Update_Logs
		{
			get
			{
				return this._Customer_Bank_Account_Update_Logs;
			}
			set
			{
				this._Customer_Bank_Account_Update_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Deposit", Storage="_Customer_Deposits", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Deposit> Customer_Deposits
		{
			get
			{
				return this._Customer_Deposits;
			}
			set
			{
				this._Customer_Deposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Deposit_Request", Storage="_Customer_Deposit_Requests", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Deposit_Request> Customer_Deposit_Requests
		{
			get
			{
				return this._Customer_Deposit_Requests;
			}
			set
			{
				this._Customer_Deposit_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Login", Storage="_Customer_Login", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Customer_Login Customer_Login
		{
			get
			{
				return this._Customer_Login.Entity;
			}
			set
			{
				Customer_Login previousValue = this._Customer_Login.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Login.Entity = null;
						previousValue.Customer = null;
					}
					this._Customer_Login.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("Customer_Login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Modification_Log", Storage="_Customer_Modification_Logs", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Modification_Log> Customer_Modification_Logs
		{
			get
			{
				return this._Customer_Modification_Logs;
			}
			set
			{
				this._Customer_Modification_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Payout_Request", Storage="_Customer_Payout_Requests", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this._Customer_Payout_Requests;
			}
			set
			{
				this._Customer_Payout_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Setting", Storage="_Customer_Setting", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Customer_Setting Customer_Setting
		{
			get
			{
				return this._Customer_Setting.Entity;
			}
			set
			{
				Customer_Setting previousValue = this._Customer_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Setting.Entity = null;
						previousValue.Customer = null;
					}
					this._Customer_Setting.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("Customer_Setting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_terminal_allocation", Storage="_customer_terminal_allocations", ThisKey="id", OtherKey="customer")]
		public EntitySet<customer_terminal_allocation> customer_terminal_allocations
		{
			get
			{
				return this._customer_terminal_allocations;
			}
			set
			{
				this._customer_terminal_allocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Transaction", Storage="_Customer_Transactions", ThisKey="id", OtherKey="customer")]
		public EntitySet<Customer_Transaction> Customer_Transactions
		{
			get
			{
				return this._Customer_Transactions;
			}
			set
			{
				this._Customer_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Wallet", Storage="_Customer_Wallet", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Customer_Wallet Customer_Wallet
		{
			get
			{
				return this._Customer_Wallet.Entity;
			}
			set
			{
				Customer_Wallet previousValue = this._Customer_Wallet.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Wallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Wallet.Entity = null;
						previousValue.Customer = null;
					}
					this._Customer_Wallet.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("Customer_Wallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Promo_Ticket", Storage="_Promo_Tickets", ThisKey="id", OtherKey="user")]
		public EntitySet<Promo_Ticket> Promo_Tickets
		{
			get
			{
				return this._Promo_Tickets;
			}
			set
			{
				this._Promo_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Ticket", Storage="_Tickets", ThisKey="id", OtherKey="owner")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Account_Type_Customer", Storage="_Bank_Account_Type", ThisKey="account_type", OtherKey="id", IsForeignKey=true)]
		public Bank_Account_Type Bank_Account_Type
		{
			get
			{
				return this._Bank_Account_Type.Entity;
			}
			set
			{
				Bank_Account_Type previousValue = this._Bank_Account_Type.Entity;
				if (((previousValue != value) 
							|| (this._Bank_Account_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank_Account_Type.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Bank_Account_Type.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._account_type = value.id;
					}
					else
					{
						this._account_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank_Account_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Customer", Storage="_Bank1", ThisKey="bank", OtherKey="id", IsForeignKey=true)]
		public Bank Bank1
		{
			get
			{
				return this._Bank1.Entity;
			}
			set
			{
				Bank previousValue = this._Bank1.Entity;
				if (((previousValue != value) 
							|| (this._Bank1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Bank1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._bank = value.id;
					}
					else
					{
						this._bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Category_Customer", Storage="_Customer_Category1", ThisKey="customer_category", OtherKey="id", IsForeignKey=true)]
		public Customer_Category Customer_Category1
		{
			get
			{
				return this._Customer_Category1.Entity;
			}
			set
			{
				Customer_Category previousValue = this._Customer_Category1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Category1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Customer_Category1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._customer_category = value.id;
					}
					else
					{
						this._customer_category = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer_Category1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Type_Customer", Storage="_Customer_Type1", ThisKey="customer_type", OtherKey="id", IsForeignKey=true)]
		public Customer_Type Customer_Type1
		{
			get
			{
				return this._Customer_Type1.Entity;
			}
			set
			{
				Customer_Type previousValue = this._Customer_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Type1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Customer_Type1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._customer_type = value.id;
					}
					else
					{
						this._customer_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer_Type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Customer", Storage="_Shop1", ThisKey="shop", OtherKey="id", IsForeignKey=true)]
		public Shop Shop1
		{
			get
			{
				return this._Shop1.Entity;
			}
			set
			{
				Shop previousValue = this._Shop1.Entity;
				if (((previousValue != value) 
							|| (this._Shop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Shop1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._shop = value.id;
					}
					else
					{
						this._shop = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Customer", Storage="_State1", ThisKey="state", OtherKey="id", IsForeignKey=true)]
		public State State1
		{
			get
			{
				return this._State1.Entity;
			}
			set
			{
				State previousValue = this._State1.Entity;
				if (((previousValue != value) 
							|| (this._State1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._State1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._state = value.id;
					}
					else
					{
						this._state = default(Nullable<int>);
					}
					this.SendPropertyChanged("State1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Customer_Bank_Account_Update_Logs(Customer_Bank_Account_Update_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Bank_Account_Update_Logs(Customer_Bank_Account_Update_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Customer_Modification_Logs(Customer_Modification_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Modification_Logs(Customer_Modification_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_customer_terminal_allocations(customer_terminal_allocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_customer_terminal_allocations(customer_terminal_allocation entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Customer_Transactions(Customer_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Customer_Transactions(Customer_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
		
		private void attach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Account")]
	public partial class Customer_Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<bool> _customer_account_status;
		
		private System.Nullable<decimal> _max_stake_limit;
		
		private System.Nullable<decimal> _max_possible_return;
		
		private System.Nullable<decimal> _daily_payout_limit;
		
		private System.Nullable<decimal> _daily_deposit_limit;
		
		private bool _can_deposit;
		
		private bool _can_recieve_payout;
		
		private bool _can_request_payout;
		
		private bool _can_receive_deposit;
		
		private System.Nullable<int> _status;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Customer_Account_Status> _Customer_Account_Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncustomer_account_statusChanging(System.Nullable<bool> value);
    partial void Oncustomer_account_statusChanged();
    partial void Onmax_stake_limitChanging(System.Nullable<decimal> value);
    partial void Onmax_stake_limitChanged();
    partial void Onmax_possible_returnChanging(System.Nullable<decimal> value);
    partial void Onmax_possible_returnChanged();
    partial void Ondaily_payout_limitChanging(System.Nullable<decimal> value);
    partial void Ondaily_payout_limitChanged();
    partial void Ondaily_deposit_limitChanging(System.Nullable<decimal> value);
    partial void Ondaily_deposit_limitChanged();
    partial void Oncan_depositChanging(bool value);
    partial void Oncan_depositChanged();
    partial void Oncan_recieve_payoutChanging(bool value);
    partial void Oncan_recieve_payoutChanged();
    partial void Oncan_request_payoutChanging(bool value);
    partial void Oncan_request_payoutChanged();
    partial void Oncan_receive_depositChanging(bool value);
    partial void Oncan_receive_depositChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Customer_Account()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Customer_Account_Status1 = default(EntityRef<Customer_Account_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_account_status", DbType="Bit")]
		public System.Nullable<bool> customer_account_status
		{
			get
			{
				return this._customer_account_status;
			}
			set
			{
				if ((this._customer_account_status != value))
				{
					this.Oncustomer_account_statusChanging(value);
					this.SendPropertyChanging();
					this._customer_account_status = value;
					this.SendPropertyChanged("customer_account_status");
					this.Oncustomer_account_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_stake_limit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_stake_limit
		{
			get
			{
				return this._max_stake_limit;
			}
			set
			{
				if ((this._max_stake_limit != value))
				{
					this.Onmax_stake_limitChanging(value);
					this.SendPropertyChanging();
					this._max_stake_limit = value;
					this.SendPropertyChanged("max_stake_limit");
					this.Onmax_stake_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_possible_return", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_possible_return
		{
			get
			{
				return this._max_possible_return;
			}
			set
			{
				if ((this._max_possible_return != value))
				{
					this.Onmax_possible_returnChanging(value);
					this.SendPropertyChanging();
					this._max_possible_return = value;
					this.SendPropertyChanged("max_possible_return");
					this.Onmax_possible_returnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_payout_limit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> daily_payout_limit
		{
			get
			{
				return this._daily_payout_limit;
			}
			set
			{
				if ((this._daily_payout_limit != value))
				{
					this.Ondaily_payout_limitChanging(value);
					this.SendPropertyChanging();
					this._daily_payout_limit = value;
					this.SendPropertyChanged("daily_payout_limit");
					this.Ondaily_payout_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_deposit_limit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> daily_deposit_limit
		{
			get
			{
				return this._daily_deposit_limit;
			}
			set
			{
				if ((this._daily_deposit_limit != value))
				{
					this.Ondaily_deposit_limitChanging(value);
					this.SendPropertyChanging();
					this._daily_deposit_limit = value;
					this.SendPropertyChanged("daily_deposit_limit");
					this.Ondaily_deposit_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_deposit", DbType="Bit NOT NULL")]
		public bool can_deposit
		{
			get
			{
				return this._can_deposit;
			}
			set
			{
				if ((this._can_deposit != value))
				{
					this.Oncan_depositChanging(value);
					this.SendPropertyChanging();
					this._can_deposit = value;
					this.SendPropertyChanged("can_deposit");
					this.Oncan_depositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_recieve_payout", DbType="Bit NOT NULL")]
		public bool can_recieve_payout
		{
			get
			{
				return this._can_recieve_payout;
			}
			set
			{
				if ((this._can_recieve_payout != value))
				{
					this.Oncan_recieve_payoutChanging(value);
					this.SendPropertyChanging();
					this._can_recieve_payout = value;
					this.SendPropertyChanged("can_recieve_payout");
					this.Oncan_recieve_payoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_request_payout", DbType="Bit NOT NULL")]
		public bool can_request_payout
		{
			get
			{
				return this._can_request_payout;
			}
			set
			{
				if ((this._can_request_payout != value))
				{
					this.Oncan_request_payoutChanging(value);
					this.SendPropertyChanging();
					this._can_request_payout = value;
					this.SendPropertyChanged("can_request_payout");
					this.Oncan_request_payoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_can_receive_deposit", DbType="Bit NOT NULL")]
		public bool can_receive_deposit
		{
			get
			{
				return this._can_receive_deposit;
			}
			set
			{
				if ((this._can_receive_deposit != value))
				{
					this.Oncan_receive_depositChanging(value);
					this.SendPropertyChanging();
					this._can_receive_deposit = value;
					this.SendPropertyChanged("can_receive_deposit");
					this.Oncan_receive_depositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._Customer_Account_Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Account", Storage="_Customer", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Account = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Account = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Account_Status_Customer_Account", Storage="_Customer_Account_Status1", ThisKey="status", OtherKey="id", IsForeignKey=true)]
		public Customer_Account_Status Customer_Account_Status1
		{
			get
			{
				return this._Customer_Account_Status1.Entity;
			}
			set
			{
				Customer_Account_Status previousValue = this._Customer_Account_Status1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Account_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Account_Status1.Entity = null;
						previousValue.Customer_Accounts.Remove(this);
					}
					this._Customer_Account_Status1.Entity = value;
					if ((value != null))
					{
						value.Customer_Accounts.Add(this);
						this._status = value.id;
					}
					else
					{
						this._status = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer_Account_Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Account_Status")]
	public partial class Customer_Account_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private EntitySet<Customer_Account> _Customer_Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Customer_Account_Status()
		{
			this._Customer_Accounts = new EntitySet<Customer_Account>(new Action<Customer_Account>(this.attach_Customer_Accounts), new Action<Customer_Account>(this.detach_Customer_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Account_Status_Customer_Account", Storage="_Customer_Accounts", ThisKey="id", OtherKey="status")]
		public EntitySet<Customer_Account> Customer_Accounts
		{
			get
			{
				return this._Customer_Accounts;
			}
			set
			{
				this._Customer_Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Accounts(Customer_Account entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Account_Status1 = this;
		}
		
		private void detach_Customer_Accounts(Customer_Account entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Account_Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Bank_Account_Update_Log")]
	public partial class Customer_Bank_Account_Update_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private string _account_name;
		
		private System.Nullable<int> _bank;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _details;
		
		private string _account_number;
		
		private System.Nullable<int> _account_type;
		
		private EntityRef<Bank> _Bank1;
		
		private EntityRef<Customer> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void Onaccount_nameChanging(string value);
    partial void Onaccount_nameChanged();
    partial void OnbankChanging(System.Nullable<int> value);
    partial void OnbankChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void Onaccount_typeChanging(System.Nullable<int> value);
    partial void Onaccount_typeChanged();
    #endregion
		
		public Customer_Bank_Account_Update_Log()
		{
			this._Bank1 = default(EntityRef<Bank>);
			this._Customer1 = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_name", DbType="VarChar(250)")]
		public string account_name
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.Onaccount_nameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("account_name");
					this.Onaccount_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Int")]
		public System.Nullable<int> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					if (this._Bank1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(150)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(50)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_type", DbType="Int")]
		public System.Nullable<int> account_type
		{
			get
			{
				return this._account_type;
			}
			set
			{
				if ((this._account_type != value))
				{
					this.Onaccount_typeChanging(value);
					this.SendPropertyChanging();
					this._account_type = value;
					this.SendPropertyChanged("account_type");
					this.Onaccount_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Customer_Bank_Account_Update_Log", Storage="_Bank1", ThisKey="bank", OtherKey="id", IsForeignKey=true)]
		public Bank Bank1
		{
			get
			{
				return this._Bank1.Entity;
			}
			set
			{
				Bank previousValue = this._Bank1.Entity;
				if (((previousValue != value) 
							|| (this._Bank1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank1.Entity = null;
						previousValue.Customer_Bank_Account_Update_Logs.Remove(this);
					}
					this._Bank1.Entity = value;
					if ((value != null))
					{
						value.Customer_Bank_Account_Update_Logs.Add(this);
						this._bank = value.id;
					}
					else
					{
						this._bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Bank_Account_Update_Log", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Bank_Account_Update_Logs.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Bank_Account_Update_Logs.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Category")]
	public partial class Customer_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Customer_Category()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Category_Customer", Storage="_Customers", ThisKey="id", OtherKey="customer_category")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Category1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Deposit")]
	public partial class Customer_Deposit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private int _customer_deposit_type;
		
		private int _customer_deposit_staus;
		
		private System.Nullable<decimal> _amount;
		
		private string _details;
		
		private System.Nullable<int> _deposit_request;
		
		private System.DateTime _deposit_date;
		
		private System.Nullable<int> _customer_transaction;
		
		private int _expiry_min;
		
		private bool _is_webpay;
		
		private int _depositor;
		
		private System.Nullable<int> _depositor_details;
		
		private bool _isReversal;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Customer_Deposit_Payout_Type> _Customer_Deposit_Payout_Type;
		
		private EntityRef<Customer_Transaction> _Customer_Transaction1;
		
		private EntityRef<Depositor_Payout_Detail> _Depositor_Payout_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void Oncustomer_deposit_typeChanging(int value);
    partial void Oncustomer_deposit_typeChanged();
    partial void Oncustomer_deposit_stausChanging(int value);
    partial void Oncustomer_deposit_stausChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Ondeposit_requestChanging(System.Nullable<int> value);
    partial void Ondeposit_requestChanged();
    partial void Ondeposit_dateChanging(System.DateTime value);
    partial void Ondeposit_dateChanged();
    partial void Oncustomer_transactionChanging(System.Nullable<int> value);
    partial void Oncustomer_transactionChanged();
    partial void Onexpiry_minChanging(int value);
    partial void Onexpiry_minChanged();
    partial void Onis_webpayChanging(bool value);
    partial void Onis_webpayChanged();
    partial void OndepositorChanging(int value);
    partial void OndepositorChanged();
    partial void Ondepositor_detailsChanging(System.Nullable<int> value);
    partial void Ondepositor_detailsChanged();
    partial void OnisReversalChanging(bool value);
    partial void OnisReversalChanged();
    #endregion
		
		public Customer_Deposit()
		{
			this._Customer1 = default(EntityRef<Customer>);
			this._Customer_Deposit_Payout_Type = default(EntityRef<Customer_Deposit_Payout_Type>);
			this._Customer_Transaction1 = default(EntityRef<Customer_Transaction>);
			this._Depositor_Payout_Detail = default(EntityRef<Depositor_Payout_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_deposit_type", DbType="Int NOT NULL")]
		public int customer_deposit_type
		{
			get
			{
				return this._customer_deposit_type;
			}
			set
			{
				if ((this._customer_deposit_type != value))
				{
					if (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_deposit_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_deposit_type = value;
					this.SendPropertyChanged("customer_deposit_type");
					this.Oncustomer_deposit_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_deposit_staus", DbType="Int NOT NULL")]
		public int customer_deposit_staus
		{
			get
			{
				return this._customer_deposit_staus;
			}
			set
			{
				if ((this._customer_deposit_staus != value))
				{
					this.Oncustomer_deposit_stausChanging(value);
					this.SendPropertyChanging();
					this._customer_deposit_staus = value;
					this.SendPropertyChanged("customer_deposit_staus");
					this.Oncustomer_deposit_stausChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deposit_request", DbType="Int")]
		public System.Nullable<int> deposit_request
		{
			get
			{
				return this._deposit_request;
			}
			set
			{
				if ((this._deposit_request != value))
				{
					this.Ondeposit_requestChanging(value);
					this.SendPropertyChanging();
					this._deposit_request = value;
					this.SendPropertyChanged("deposit_request");
					this.Ondeposit_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deposit_date", DbType="DateTime NOT NULL")]
		public System.DateTime deposit_date
		{
			get
			{
				return this._deposit_date;
			}
			set
			{
				if ((this._deposit_date != value))
				{
					this.Ondeposit_dateChanging(value);
					this.SendPropertyChanging();
					this._deposit_date = value;
					this.SendPropertyChanged("deposit_date");
					this.Ondeposit_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_transaction", DbType="Int")]
		public System.Nullable<int> customer_transaction
		{
			get
			{
				return this._customer_transaction;
			}
			set
			{
				if ((this._customer_transaction != value))
				{
					if (this._Customer_Transaction1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_transactionChanging(value);
					this.SendPropertyChanging();
					this._customer_transaction = value;
					this.SendPropertyChanged("customer_transaction");
					this.Oncustomer_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry_min", DbType="Int NOT NULL")]
		public int expiry_min
		{
			get
			{
				return this._expiry_min;
			}
			set
			{
				if ((this._expiry_min != value))
				{
					this.Onexpiry_minChanging(value);
					this.SendPropertyChanging();
					this._expiry_min = value;
					this.SendPropertyChanged("expiry_min");
					this.Onexpiry_minChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_webpay", DbType="Bit NOT NULL")]
		public bool is_webpay
		{
			get
			{
				return this._is_webpay;
			}
			set
			{
				if ((this._is_webpay != value))
				{
					this.Onis_webpayChanging(value);
					this.SendPropertyChanging();
					this._is_webpay = value;
					this.SendPropertyChanged("is_webpay");
					this.Onis_webpayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositor", DbType="Int NOT NULL")]
		public int depositor
		{
			get
			{
				return this._depositor;
			}
			set
			{
				if ((this._depositor != value))
				{
					this.OndepositorChanging(value);
					this.SendPropertyChanging();
					this._depositor = value;
					this.SendPropertyChanged("depositor");
					this.OndepositorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositor_details", DbType="Int")]
		public System.Nullable<int> depositor_details
		{
			get
			{
				return this._depositor_details;
			}
			set
			{
				if ((this._depositor_details != value))
				{
					if (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepositor_detailsChanging(value);
					this.SendPropertyChanging();
					this._depositor_details = value;
					this.SendPropertyChanged("depositor_details");
					this.Ondepositor_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isReversal", DbType="Bit NOT NULL")]
		public bool isReversal
		{
			get
			{
				return this._isReversal;
			}
			set
			{
				if ((this._isReversal != value))
				{
					this.OnisReversalChanging(value);
					this.SendPropertyChanging();
					this._isReversal = value;
					this.SendPropertyChanged("isReversal");
					this.OnisReversalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Deposit", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Deposits.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposits.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Deposit", Storage="_Customer_Deposit_Payout_Type", ThisKey="customer_deposit_type", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Payout_Type Customer_Deposit_Payout_Type
		{
			get
			{
				return this._Customer_Deposit_Payout_Type.Entity;
			}
			set
			{
				Customer_Deposit_Payout_Type previousValue = this._Customer_Deposit_Payout_Type.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Payout_Type.Entity = null;
						previousValue.Customer_Deposits.Remove(this);
					}
					this._Customer_Deposit_Payout_Type.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposits.Add(this);
						this._customer_deposit_type = value.id;
					}
					else
					{
						this._customer_deposit_type = default(int);
					}
					this.SendPropertyChanged("Customer_Deposit_Payout_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Transaction_Customer_Deposit", Storage="_Customer_Transaction1", ThisKey="customer_transaction", OtherKey="id", IsForeignKey=true)]
		public Customer_Transaction Customer_Transaction1
		{
			get
			{
				return this._Customer_Transaction1.Entity;
			}
			set
			{
				Customer_Transaction previousValue = this._Customer_Transaction1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Transaction1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Transaction1.Entity = null;
						previousValue.Customer_Deposits.Remove(this);
					}
					this._Customer_Transaction1.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposits.Add(this);
						this._customer_transaction = value.id;
					}
					else
					{
						this._customer_transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer_Transaction1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Deposit", Storage="_Depositor_Payout_Detail", ThisKey="depositor_details", OtherKey="id", IsForeignKey=true)]
		public Depositor_Payout_Detail Depositor_Payout_Detail
		{
			get
			{
				return this._Depositor_Payout_Detail.Entity;
			}
			set
			{
				Depositor_Payout_Detail previousValue = this._Depositor_Payout_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depositor_Payout_Detail.Entity = null;
						previousValue.Customer_Deposits.Remove(this);
					}
					this._Depositor_Payout_Detail.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposits.Add(this);
						this._depositor_details = value.id;
					}
					else
					{
						this._depositor_details = default(Nullable<int>);
					}
					this.SendPropertyChanged("Depositor_Payout_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Deposit_Payout_Type")]
	public partial class Customer_Deposit_Payout_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private string _description;
		
		private bool _isDeposit;
		
		private string _transacton_prefix;
		
		private EntitySet<Customer_Deposit> _Customer_Deposits;
		
		private EntitySet<Customer_Deposit_Request> _Customer_Deposit_Requests;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntitySet<Customer_Payout_Request> _Customer_Payout_Requests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisDepositChanging(bool value);
    partial void OnisDepositChanged();
    partial void Ontransacton_prefixChanging(string value);
    partial void Ontransacton_prefixChanged();
    #endregion
		
		public Customer_Deposit_Payout_Type()
		{
			this._Customer_Deposits = new EntitySet<Customer_Deposit>(new Action<Customer_Deposit>(this.attach_Customer_Deposits), new Action<Customer_Deposit>(this.detach_Customer_Deposits));
			this._Customer_Deposit_Requests = new EntitySet<Customer_Deposit_Request>(new Action<Customer_Deposit_Request>(this.attach_Customer_Deposit_Requests), new Action<Customer_Deposit_Request>(this.detach_Customer_Deposit_Requests));
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer_Payout_Requests = new EntitySet<Customer_Payout_Request>(new Action<Customer_Payout_Request>(this.attach_Customer_Payout_Requests), new Action<Customer_Payout_Request>(this.detach_Customer_Payout_Requests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeposit", DbType="Bit NOT NULL")]
		public bool isDeposit
		{
			get
			{
				return this._isDeposit;
			}
			set
			{
				if ((this._isDeposit != value))
				{
					this.OnisDepositChanging(value);
					this.SendPropertyChanging();
					this._isDeposit = value;
					this.SendPropertyChanged("isDeposit");
					this.OnisDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transacton_prefix", DbType="VarChar(50)")]
		public string transacton_prefix
		{
			get
			{
				return this._transacton_prefix;
			}
			set
			{
				if ((this._transacton_prefix != value))
				{
					this.Ontransacton_prefixChanging(value);
					this.SendPropertyChanging();
					this._transacton_prefix = value;
					this.SendPropertyChanged("transacton_prefix");
					this.Ontransacton_prefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Deposit", Storage="_Customer_Deposits", ThisKey="id", OtherKey="customer_deposit_type")]
		public EntitySet<Customer_Deposit> Customer_Deposits
		{
			get
			{
				return this._Customer_Deposits;
			}
			set
			{
				this._Customer_Deposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Deposit_Request", Storage="_Customer_Deposit_Requests", ThisKey="id", OtherKey="customer_deposit_type")]
		public EntitySet<Customer_Deposit_Request> Customer_Deposit_Requests
		{
			get
			{
				return this._Customer_Deposit_Requests;
			}
			set
			{
				this._Customer_Deposit_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="customer_payout_type")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Payout_Request", Storage="_Customer_Payout_Requests", ThisKey="id", OtherKey="customer_payout_type")]
		public EntitySet<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this._Customer_Payout_Requests;
			}
			set
			{
				this._Customer_Payout_Requests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = this;
		}
		
		private void detach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = null;
		}
		
		private void attach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = this;
		}
		
		private void detach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = null;
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = null;
		}
		
		private void attach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = this;
		}
		
		private void detach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Payout_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Deposit_Request")]
	public partial class Customer_Deposit_Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private int _customer_deposit_type;
		
		private int _customer_deposit_status;
		
		private System.Nullable<decimal> _amount;
		
		private string _details;
		
		private string _remote_data;
		
		private System.DateTime _deposit_date;
		
		private int _expiry_min;
		
		private System.Nullable<int> _depositor;
		
		private System.Nullable<int> _depositor_details;
		
		private System.Nullable<int> _transaction_category;
		
		private string _transaction_refrence;
		
		private EntitySet<WebPay_Response> _WebPay_Responses;
		
		private EntitySet<web_pay_request_response> _web_pay_request_responses;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Customer_Deposit_Payout_Type> _Customer_Deposit_Payout_Type;
		
		private EntityRef<Customer_Deposit_Status> _Customer_Deposit_Status1;
		
		private EntityRef<Depositor_Payout_Detail> _Depositor_Payout_Detail;
		
		private EntityRef<Transaction_Category> _Transaction_Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void Oncustomer_deposit_typeChanging(int value);
    partial void Oncustomer_deposit_typeChanged();
    partial void Oncustomer_deposit_statusChanging(int value);
    partial void Oncustomer_deposit_statusChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Onremote_dataChanging(string value);
    partial void Onremote_dataChanged();
    partial void Ondeposit_dateChanging(System.DateTime value);
    partial void Ondeposit_dateChanged();
    partial void Onexpiry_minChanging(int value);
    partial void Onexpiry_minChanged();
    partial void OndepositorChanging(System.Nullable<int> value);
    partial void OndepositorChanged();
    partial void Ondepositor_detailsChanging(System.Nullable<int> value);
    partial void Ondepositor_detailsChanged();
    partial void Ontransaction_categoryChanging(System.Nullable<int> value);
    partial void Ontransaction_categoryChanged();
    partial void Ontransaction_refrenceChanging(string value);
    partial void Ontransaction_refrenceChanged();
    #endregion
		
		public Customer_Deposit_Request()
		{
			this._WebPay_Responses = new EntitySet<WebPay_Response>(new Action<WebPay_Response>(this.attach_WebPay_Responses), new Action<WebPay_Response>(this.detach_WebPay_Responses));
			this._web_pay_request_responses = new EntitySet<web_pay_request_response>(new Action<web_pay_request_response>(this.attach_web_pay_request_responses), new Action<web_pay_request_response>(this.detach_web_pay_request_responses));
			this._Customer1 = default(EntityRef<Customer>);
			this._Customer_Deposit_Payout_Type = default(EntityRef<Customer_Deposit_Payout_Type>);
			this._Customer_Deposit_Status1 = default(EntityRef<Customer_Deposit_Status>);
			this._Depositor_Payout_Detail = default(EntityRef<Depositor_Payout_Detail>);
			this._Transaction_Category1 = default(EntityRef<Transaction_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_deposit_type", DbType="Int NOT NULL")]
		public int customer_deposit_type
		{
			get
			{
				return this._customer_deposit_type;
			}
			set
			{
				if ((this._customer_deposit_type != value))
				{
					if (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_deposit_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_deposit_type = value;
					this.SendPropertyChanged("customer_deposit_type");
					this.Oncustomer_deposit_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_deposit_status", DbType="Int NOT NULL")]
		public int customer_deposit_status
		{
			get
			{
				return this._customer_deposit_status;
			}
			set
			{
				if ((this._customer_deposit_status != value))
				{
					if (this._Customer_Deposit_Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_deposit_statusChanging(value);
					this.SendPropertyChanging();
					this._customer_deposit_status = value;
					this.SendPropertyChanged("customer_deposit_status");
					this.Oncustomer_deposit_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remote_data", DbType="VarChar(500)")]
		public string remote_data
		{
			get
			{
				return this._remote_data;
			}
			set
			{
				if ((this._remote_data != value))
				{
					this.Onremote_dataChanging(value);
					this.SendPropertyChanging();
					this._remote_data = value;
					this.SendPropertyChanged("remote_data");
					this.Onremote_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deposit_date", DbType="DateTime NOT NULL")]
		public System.DateTime deposit_date
		{
			get
			{
				return this._deposit_date;
			}
			set
			{
				if ((this._deposit_date != value))
				{
					this.Ondeposit_dateChanging(value);
					this.SendPropertyChanging();
					this._deposit_date = value;
					this.SendPropertyChanged("deposit_date");
					this.Ondeposit_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry_min", DbType="Int NOT NULL")]
		public int expiry_min
		{
			get
			{
				return this._expiry_min;
			}
			set
			{
				if ((this._expiry_min != value))
				{
					this.Onexpiry_minChanging(value);
					this.SendPropertyChanging();
					this._expiry_min = value;
					this.SendPropertyChanged("expiry_min");
					this.Onexpiry_minChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositor", DbType="Int")]
		public System.Nullable<int> depositor
		{
			get
			{
				return this._depositor;
			}
			set
			{
				if ((this._depositor != value))
				{
					this.OndepositorChanging(value);
					this.SendPropertyChanging();
					this._depositor = value;
					this.SendPropertyChanged("depositor");
					this.OndepositorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositor_details", DbType="Int")]
		public System.Nullable<int> depositor_details
		{
			get
			{
				return this._depositor_details;
			}
			set
			{
				if ((this._depositor_details != value))
				{
					if (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepositor_detailsChanging(value);
					this.SendPropertyChanging();
					this._depositor_details = value;
					this.SendPropertyChanged("depositor_details");
					this.Ondepositor_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int")]
		public System.Nullable<int> transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					if (this._Transaction_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_refrence", DbType="VarChar(500)")]
		public string transaction_refrence
		{
			get
			{
				return this._transaction_refrence;
			}
			set
			{
				if ((this._transaction_refrence != value))
				{
					this.Ontransaction_refrenceChanging(value);
					this.SendPropertyChanging();
					this._transaction_refrence = value;
					this.SendPropertyChanged("transaction_refrence");
					this.Ontransaction_refrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Request_WebPay_Response", Storage="_WebPay_Responses", ThisKey="id", OtherKey="deposit_request")]
		public EntitySet<WebPay_Response> WebPay_Responses
		{
			get
			{
				return this._WebPay_Responses;
			}
			set
			{
				this._WebPay_Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Request_web_pay_request_response", Storage="_web_pay_request_responses", ThisKey="id", OtherKey="webpay_request")]
		public EntitySet<web_pay_request_response> web_pay_request_responses
		{
			get
			{
				return this._web_pay_request_responses;
			}
			set
			{
				this._web_pay_request_responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Deposit_Request", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Deposit_Requests.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposit_Requests.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Deposit_Request", Storage="_Customer_Deposit_Payout_Type", ThisKey="customer_deposit_type", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Payout_Type Customer_Deposit_Payout_Type
		{
			get
			{
				return this._Customer_Deposit_Payout_Type.Entity;
			}
			set
			{
				Customer_Deposit_Payout_Type previousValue = this._Customer_Deposit_Payout_Type.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Payout_Type.Entity = null;
						previousValue.Customer_Deposit_Requests.Remove(this);
					}
					this._Customer_Deposit_Payout_Type.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposit_Requests.Add(this);
						this._customer_deposit_type = value.id;
					}
					else
					{
						this._customer_deposit_type = default(int);
					}
					this.SendPropertyChanged("Customer_Deposit_Payout_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Status_Customer_Deposit_Request", Storage="_Customer_Deposit_Status1", ThisKey="customer_deposit_status", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Status Customer_Deposit_Status1
		{
			get
			{
				return this._Customer_Deposit_Status1.Entity;
			}
			set
			{
				Customer_Deposit_Status previousValue = this._Customer_Deposit_Status1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Status1.Entity = null;
						previousValue.Customer_Deposit_Requests.Remove(this);
					}
					this._Customer_Deposit_Status1.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposit_Requests.Add(this);
						this._customer_deposit_status = value.id;
					}
					else
					{
						this._customer_deposit_status = default(int);
					}
					this.SendPropertyChanged("Customer_Deposit_Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Deposit_Request", Storage="_Depositor_Payout_Detail", ThisKey="depositor_details", OtherKey="id", IsForeignKey=true)]
		public Depositor_Payout_Detail Depositor_Payout_Detail
		{
			get
			{
				return this._Depositor_Payout_Detail.Entity;
			}
			set
			{
				Depositor_Payout_Detail previousValue = this._Depositor_Payout_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depositor_Payout_Detail.Entity = null;
						previousValue.Customer_Deposit_Requests.Remove(this);
					}
					this._Depositor_Payout_Detail.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposit_Requests.Add(this);
						this._depositor_details = value.id;
					}
					else
					{
						this._depositor_details = default(Nullable<int>);
					}
					this.SendPropertyChanged("Depositor_Payout_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Category_Customer_Deposit_Request", Storage="_Transaction_Category1", ThisKey="transaction_category", OtherKey="id", IsForeignKey=true)]
		public Transaction_Category Transaction_Category1
		{
			get
			{
				return this._Transaction_Category1.Entity;
			}
			set
			{
				Transaction_Category previousValue = this._Transaction_Category1.Entity;
				if (((previousValue != value) 
							|| (this._Transaction_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction_Category1.Entity = null;
						previousValue.Customer_Deposit_Requests.Remove(this);
					}
					this._Transaction_Category1.Entity = value;
					if ((value != null))
					{
						value.Customer_Deposit_Requests.Add(this);
						this._transaction_category = value.id;
					}
					else
					{
						this._transaction_category = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaction_Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WebPay_Responses(WebPay_Response entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Request = this;
		}
		
		private void detach_WebPay_Responses(WebPay_Response entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Request = null;
		}
		
		private void attach_web_pay_request_responses(web_pay_request_response entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Request = this;
		}
		
		private void detach_web_pay_request_responses(web_pay_request_response entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Deposit_Status")]
	public partial class Customer_Deposit_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Customer_Deposit_Request> _Customer_Deposit_Requests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Customer_Deposit_Status()
		{
			this._Customer_Deposit_Requests = new EntitySet<Customer_Deposit_Request>(new Action<Customer_Deposit_Request>(this.attach_Customer_Deposit_Requests), new Action<Customer_Deposit_Request>(this.detach_Customer_Deposit_Requests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Status_Customer_Deposit_Request", Storage="_Customer_Deposit_Requests", ThisKey="id", OtherKey="customer_deposit_status")]
		public EntitySet<Customer_Deposit_Request> Customer_Deposit_Requests
		{
			get
			{
				return this._Customer_Deposit_Requests;
			}
			set
			{
				this._Customer_Deposit_Requests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Status1 = this;
		}
		
		private void detach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Deposit_Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Login")]
	public partial class Customer_Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _email;
		
		private string _password;
		
		private string _phonenumber;
		
		private string _verification_number;
		
		private string _verification_token;
		
		private System.Nullable<bool> _is_verified;
		
		private System.Nullable<bool> _is_active;
		
		private EntitySet<Customer_Login_Log> _Customer_Login_Logs;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    partial void Onverification_numberChanging(string value);
    partial void Onverification_numberChanged();
    partial void Onverification_tokenChanging(string value);
    partial void Onverification_tokenChanged();
    partial void Onis_verifiedChanging(System.Nullable<bool> value);
    partial void Onis_verifiedChanged();
    partial void Onis_activeChanging(System.Nullable<bool> value);
    partial void Onis_activeChanged();
    #endregion
		
		public Customer_Login()
		{
			this._Customer_Login_Logs = new EntitySet<Customer_Login_Log>(new Action<Customer_Login_Log>(this.attach_Customer_Login_Logs), new Action<Customer_Login_Log>(this.detach_Customer_Login_Logs));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verification_number", DbType="VarChar(1500)")]
		public string verification_number
		{
			get
			{
				return this._verification_number;
			}
			set
			{
				if ((this._verification_number != value))
				{
					this.Onverification_numberChanging(value);
					this.SendPropertyChanging();
					this._verification_number = value;
					this.SendPropertyChanged("verification_number");
					this.Onverification_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verification_token", DbType="VarChar(50)")]
		public string verification_token
		{
			get
			{
				return this._verification_token;
			}
			set
			{
				if ((this._verification_token != value))
				{
					this.Onverification_tokenChanging(value);
					this.SendPropertyChanging();
					this._verification_token = value;
					this.SendPropertyChanged("verification_token");
					this.Onverification_tokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_verified", DbType="Bit")]
		public System.Nullable<bool> is_verified
		{
			get
			{
				return this._is_verified;
			}
			set
			{
				if ((this._is_verified != value))
				{
					this.Onis_verifiedChanging(value);
					this.SendPropertyChanging();
					this._is_verified = value;
					this.SendPropertyChanged("is_verified");
					this.Onis_verifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit")]
		public System.Nullable<bool> is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Login_Customer_Login_Log", Storage="_Customer_Login_Logs", ThisKey="id", OtherKey="login")]
		public EntitySet<Customer_Login_Log> Customer_Login_Logs
		{
			get
			{
				return this._Customer_Login_Logs;
			}
			set
			{
				this._Customer_Login_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Login", Storage="_Customer", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Login = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Login = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Login_Logs(Customer_Login_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Login = this;
		}
		
		private void detach_Customer_Login_Logs(Customer_Login_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Login_Log")]
	public partial class Customer_Login_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _login;
		
		private bool _status;
		
		private string _IP;
		
		private System.Nullable<bool> _isLogin;
		
		private System.DateTime _timein;
		
		private System.Nullable<System.DateTime> _timeout;
		
		private System.Nullable<int> _customer_type;
		
		private string _session_id;
		
		private EntityRef<Customer_Login> _Customer_Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnloginChanging(int value);
    partial void OnloginChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnisLoginChanging(System.Nullable<bool> value);
    partial void OnisLoginChanged();
    partial void OntimeinChanging(System.DateTime value);
    partial void OntimeinChanged();
    partial void OntimeoutChanging(System.Nullable<System.DateTime> value);
    partial void OntimeoutChanged();
    partial void Oncustomer_typeChanging(System.Nullable<int> value);
    partial void Oncustomer_typeChanged();
    partial void Onsession_idChanging(string value);
    partial void Onsession_idChanged();
    #endregion
		
		public Customer_Login_Log()
		{
			this._Customer_Login = default(EntityRef<Customer_Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="Int NOT NULL")]
		public int login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					if (this._Customer_Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLogin", DbType="Bit")]
		public System.Nullable<bool> isLogin
		{
			get
			{
				return this._isLogin;
			}
			set
			{
				if ((this._isLogin != value))
				{
					this.OnisLoginChanging(value);
					this.SendPropertyChanging();
					this._isLogin = value;
					this.SendPropertyChanged("isLogin");
					this.OnisLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timein", DbType="DateTime NOT NULL")]
		public System.DateTime timein
		{
			get
			{
				return this._timein;
			}
			set
			{
				if ((this._timein != value))
				{
					this.OntimeinChanging(value);
					this.SendPropertyChanging();
					this._timein = value;
					this.SendPropertyChanged("timein");
					this.OntimeinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeout", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeout
		{
			get
			{
				return this._timeout;
			}
			set
			{
				if ((this._timeout != value))
				{
					this.OntimeoutChanging(value);
					this.SendPropertyChanging();
					this._timeout = value;
					this.SendPropertyChanged("timeout");
					this.OntimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_type", DbType="Int")]
		public System.Nullable<int> customer_type
		{
			get
			{
				return this._customer_type;
			}
			set
			{
				if ((this._customer_type != value))
				{
					this.Oncustomer_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_type = value;
					this.SendPropertyChanged("customer_type");
					this.Oncustomer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", DbType="VarChar(100)")]
		public string session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Login_Customer_Login_Log", Storage="_Customer_Login", ThisKey="login", OtherKey="id", IsForeignKey=true)]
		public Customer_Login Customer_Login
		{
			get
			{
				return this._Customer_Login.Entity;
			}
			set
			{
				Customer_Login previousValue = this._Customer_Login.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Login.Entity = null;
						previousValue.Customer_Login_Logs.Remove(this);
					}
					this._Customer_Login.Entity = value;
					if ((value != null))
					{
						value.Customer_Login_Logs.Add(this);
						this._login = value.id;
					}
					else
					{
						this._login = default(int);
					}
					this.SendPropertyChanged("Customer_Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Modification_Log")]
	public partial class Customer_Modification_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private System.DateTime _modTime;
		
		private string _Field;
		
		private string _oldvalue;
		
		private string _newvalue;
		
		private EntityRef<Customer> _Customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void OnmodTimeChanging(System.DateTime value);
    partial void OnmodTimeChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnoldvalueChanging(string value);
    partial void OnoldvalueChanged();
    partial void OnnewvalueChanging(string value);
    partial void OnnewvalueChanged();
    #endregion
		
		public Customer_Modification_Log()
		{
			this._Customer1 = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modTime", DbType="DateTime NOT NULL")]
		public System.DateTime modTime
		{
			get
			{
				return this._modTime;
			}
			set
			{
				if ((this._modTime != value))
				{
					this.OnmodTimeChanging(value);
					this.SendPropertyChanging();
					this._modTime = value;
					this.SendPropertyChanged("modTime");
					this.OnmodTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldvalue", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string oldvalue
		{
			get
			{
				return this._oldvalue;
			}
			set
			{
				if ((this._oldvalue != value))
				{
					this.OnoldvalueChanging(value);
					this.SendPropertyChanging();
					this._oldvalue = value;
					this.SendPropertyChanged("oldvalue");
					this.OnoldvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newvalue", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string newvalue
		{
			get
			{
				return this._newvalue;
			}
			set
			{
				if ((this._newvalue != value))
				{
					this.OnnewvalueChanging(value);
					this.SendPropertyChanging();
					this._newvalue = value;
					this.SendPropertyChanged("newvalue");
					this.OnnewvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Modification_Log", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Modification_Logs.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Modification_Logs.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Payout")]
	public partial class Customer_Payout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private decimal _amount;
		
		private System.Nullable<int> _approved_by;
		
		private System.Nullable<int> _payout_by;
		
		private System.Nullable<int> _payout_details;
		
		private System.Nullable<int> _payout_request;
		
		private string _details;
		
		private System.DateTime _payout_date;
		
		private int _customer_payout_type;
		
		private int _customer_payout_status;
		
		private bool _isReversal;
		
		private int _customer_transaction;
		
		private EntityRef<Admin_User> _Admin_User;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Customer_Deposit_Payout_Type> _Customer_Deposit_Payout_Type;
		
		private EntityRef<Customer_Payout_Request> _Customer_Payout_Request;
		
		private EntityRef<Customer_Payout_Status> _Customer_Payout_Status1;
		
		private EntityRef<Customer_Transaction> _Customer_Transaction1;
		
		private EntityRef<Depositor_Payout_Detail> _Depositor_Payout_Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onapproved_byChanging(System.Nullable<int> value);
    partial void Onapproved_byChanged();
    partial void Onpayout_byChanging(System.Nullable<int> value);
    partial void Onpayout_byChanged();
    partial void Onpayout_detailsChanging(System.Nullable<int> value);
    partial void Onpayout_detailsChanged();
    partial void Onpayout_requestChanging(System.Nullable<int> value);
    partial void Onpayout_requestChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Onpayout_dateChanging(System.DateTime value);
    partial void Onpayout_dateChanged();
    partial void Oncustomer_payout_typeChanging(int value);
    partial void Oncustomer_payout_typeChanged();
    partial void Oncustomer_payout_statusChanging(int value);
    partial void Oncustomer_payout_statusChanged();
    partial void OnisReversalChanging(bool value);
    partial void OnisReversalChanged();
    partial void Oncustomer_transactionChanging(int value);
    partial void Oncustomer_transactionChanged();
    #endregion
		
		public Customer_Payout()
		{
			this._Admin_User = default(EntityRef<Admin_User>);
			this._Customer1 = default(EntityRef<Customer>);
			this._Customer_Deposit_Payout_Type = default(EntityRef<Customer_Deposit_Payout_Type>);
			this._Customer_Payout_Request = default(EntityRef<Customer_Payout_Request>);
			this._Customer_Payout_Status1 = default(EntityRef<Customer_Payout_Status>);
			this._Customer_Transaction1 = default(EntityRef<Customer_Transaction>);
			this._Depositor_Payout_Detail = default(EntityRef<Depositor_Payout_Detail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_by", DbType="Int")]
		public System.Nullable<int> approved_by
		{
			get
			{
				return this._approved_by;
			}
			set
			{
				if ((this._approved_by != value))
				{
					if (this._Admin_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapproved_byChanging(value);
					this.SendPropertyChanging();
					this._approved_by = value;
					this.SendPropertyChanged("approved_by");
					this.Onapproved_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_by", DbType="Int")]
		public System.Nullable<int> payout_by
		{
			get
			{
				return this._payout_by;
			}
			set
			{
				if ((this._payout_by != value))
				{
					this.Onpayout_byChanging(value);
					this.SendPropertyChanging();
					this._payout_by = value;
					this.SendPropertyChanged("payout_by");
					this.Onpayout_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_details", DbType="Int")]
		public System.Nullable<int> payout_details
		{
			get
			{
				return this._payout_details;
			}
			set
			{
				if ((this._payout_details != value))
				{
					if (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayout_detailsChanging(value);
					this.SendPropertyChanging();
					this._payout_details = value;
					this.SendPropertyChanged("payout_details");
					this.Onpayout_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_request", DbType="Int")]
		public System.Nullable<int> payout_request
		{
			get
			{
				return this._payout_request;
			}
			set
			{
				if ((this._payout_request != value))
				{
					if (this._Customer_Payout_Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayout_requestChanging(value);
					this.SendPropertyChanging();
					this._payout_request = value;
					this.SendPropertyChanged("payout_request");
					this.Onpayout_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(100)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_date", DbType="DateTime NOT NULL")]
		public System.DateTime payout_date
		{
			get
			{
				return this._payout_date;
			}
			set
			{
				if ((this._payout_date != value))
				{
					this.Onpayout_dateChanging(value);
					this.SendPropertyChanging();
					this._payout_date = value;
					this.SendPropertyChanged("payout_date");
					this.Onpayout_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_payout_type", DbType="Int NOT NULL")]
		public int customer_payout_type
		{
			get
			{
				return this._customer_payout_type;
			}
			set
			{
				if ((this._customer_payout_type != value))
				{
					if (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_payout_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_payout_type = value;
					this.SendPropertyChanged("customer_payout_type");
					this.Oncustomer_payout_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_payout_status", DbType="Int NOT NULL")]
		public int customer_payout_status
		{
			get
			{
				return this._customer_payout_status;
			}
			set
			{
				if ((this._customer_payout_status != value))
				{
					if (this._Customer_Payout_Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_payout_statusChanging(value);
					this.SendPropertyChanging();
					this._customer_payout_status = value;
					this.SendPropertyChanged("customer_payout_status");
					this.Oncustomer_payout_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isReversal", DbType="Bit NOT NULL")]
		public bool isReversal
		{
			get
			{
				return this._isReversal;
			}
			set
			{
				if ((this._isReversal != value))
				{
					this.OnisReversalChanging(value);
					this.SendPropertyChanging();
					this._isReversal = value;
					this.SendPropertyChanged("isReversal");
					this.OnisReversalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_transaction", DbType="Int NOT NULL")]
		public int customer_transaction
		{
			get
			{
				return this._customer_transaction;
			}
			set
			{
				if ((this._customer_transaction != value))
				{
					if (this._Customer_Transaction1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_transactionChanging(value);
					this.SendPropertyChanging();
					this._customer_transaction = value;
					this.SendPropertyChanged("customer_transaction");
					this.Oncustomer_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Customer_Payout", Storage="_Admin_User", ThisKey="approved_by", OtherKey="id", IsForeignKey=true)]
		public Admin_User Admin_User
		{
			get
			{
				return this._Admin_User.Entity;
			}
			set
			{
				Admin_User previousValue = this._Admin_User.Entity;
				if (((previousValue != value) 
							|| (this._Admin_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_User.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Admin_User.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._approved_by = value.id;
					}
					else
					{
						this._approved_by = default(Nullable<int>);
					}
					this.SendPropertyChanged("Admin_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Payout", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Payout", Storage="_Customer_Deposit_Payout_Type", ThisKey="customer_payout_type", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Payout_Type Customer_Deposit_Payout_Type
		{
			get
			{
				return this._Customer_Deposit_Payout_Type.Entity;
			}
			set
			{
				Customer_Deposit_Payout_Type previousValue = this._Customer_Deposit_Payout_Type.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Payout_Type.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Customer_Deposit_Payout_Type.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._customer_payout_type = value.id;
					}
					else
					{
						this._customer_payout_type = default(int);
					}
					this.SendPropertyChanged("Customer_Deposit_Payout_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Request_Customer_Payout", Storage="_Customer_Payout_Request", ThisKey="payout_request", OtherKey="id", IsForeignKey=true)]
		public Customer_Payout_Request Customer_Payout_Request
		{
			get
			{
				return this._Customer_Payout_Request.Entity;
			}
			set
			{
				Customer_Payout_Request previousValue = this._Customer_Payout_Request.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Payout_Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Payout_Request.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Customer_Payout_Request.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._payout_request = value.id;
					}
					else
					{
						this._payout_request = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer_Payout_Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Status_Customer_Payout", Storage="_Customer_Payout_Status1", ThisKey="customer_payout_status", OtherKey="id", IsForeignKey=true)]
		public Customer_Payout_Status Customer_Payout_Status1
		{
			get
			{
				return this._Customer_Payout_Status1.Entity;
			}
			set
			{
				Customer_Payout_Status previousValue = this._Customer_Payout_Status1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Payout_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Payout_Status1.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Customer_Payout_Status1.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._customer_payout_status = value.id;
					}
					else
					{
						this._customer_payout_status = default(int);
					}
					this.SendPropertyChanged("Customer_Payout_Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Transaction_Customer_Payout", Storage="_Customer_Transaction1", ThisKey="customer_transaction", OtherKey="id", IsForeignKey=true)]
		public Customer_Transaction Customer_Transaction1
		{
			get
			{
				return this._Customer_Transaction1.Entity;
			}
			set
			{
				Customer_Transaction previousValue = this._Customer_Transaction1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Transaction1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Transaction1.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Customer_Transaction1.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._customer_transaction = value.id;
					}
					else
					{
						this._customer_transaction = default(int);
					}
					this.SendPropertyChanged("Customer_Transaction1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Payout", Storage="_Depositor_Payout_Detail", ThisKey="payout_details", OtherKey="id", IsForeignKey=true)]
		public Depositor_Payout_Detail Depositor_Payout_Detail
		{
			get
			{
				return this._Depositor_Payout_Detail.Entity;
			}
			set
			{
				Depositor_Payout_Detail previousValue = this._Depositor_Payout_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depositor_Payout_Detail.Entity = null;
						previousValue.Customer_Payouts.Remove(this);
					}
					this._Depositor_Payout_Detail.Entity = value;
					if ((value != null))
					{
						value.Customer_Payouts.Add(this);
						this._payout_details = value.id;
					}
					else
					{
						this._payout_details = default(Nullable<int>);
					}
					this.SendPropertyChanged("Depositor_Payout_Detail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Payout_Request")]
	public partial class Customer_Payout_Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _customer;
		
		private decimal _amount;
		
		private System.Nullable<int> _approved_by;
		
		private System.Nullable<int> _payout_by;
		
		private System.Nullable<int> _payout_details;
		
		private string _payout_pin;
		
		private bool _isPaid;
		
		private int _customer_payout_status;
		
		private string _details;
		
		private System.DateTime _requested_date;
		
		private int _customer_payout_type;
		
		private bool _isReversalRequested;
		
		private System.Nullable<int> _transaction_category;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntitySet<Customer_Payout_Request_Log> _Customer_Payout_Request_Logs;
		
		private EntityRef<Admin_User> _Admin_User;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Customer_Deposit_Payout_Type> _Customer_Deposit_Payout_Type;
		
		private EntityRef<Customer_Payout_Status> _Customer_Payout_Status1;
		
		private EntityRef<Depositor_Payout_Detail> _Depositor_Payout_Detail;
		
		private EntityRef<Transaction_Category> _Transaction_Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onapproved_byChanging(System.Nullable<int> value);
    partial void Onapproved_byChanged();
    partial void Onpayout_byChanging(System.Nullable<int> value);
    partial void Onpayout_byChanged();
    partial void Onpayout_detailsChanging(System.Nullable<int> value);
    partial void Onpayout_detailsChanged();
    partial void Onpayout_pinChanging(string value);
    partial void Onpayout_pinChanged();
    partial void OnisPaidChanging(bool value);
    partial void OnisPaidChanged();
    partial void Oncustomer_payout_statusChanging(int value);
    partial void Oncustomer_payout_statusChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Onrequested_dateChanging(System.DateTime value);
    partial void Onrequested_dateChanged();
    partial void Oncustomer_payout_typeChanging(int value);
    partial void Oncustomer_payout_typeChanged();
    partial void OnisReversalRequestedChanging(bool value);
    partial void OnisReversalRequestedChanged();
    partial void Ontransaction_categoryChanging(System.Nullable<int> value);
    partial void Ontransaction_categoryChanged();
    #endregion
		
		public Customer_Payout_Request()
		{
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer_Payout_Request_Logs = new EntitySet<Customer_Payout_Request_Log>(new Action<Customer_Payout_Request_Log>(this.attach_Customer_Payout_Request_Logs), new Action<Customer_Payout_Request_Log>(this.detach_Customer_Payout_Request_Logs));
			this._Admin_User = default(EntityRef<Admin_User>);
			this._Customer1 = default(EntityRef<Customer>);
			this._Customer_Deposit_Payout_Type = default(EntityRef<Customer_Deposit_Payout_Type>);
			this._Customer_Payout_Status1 = default(EntityRef<Customer_Payout_Status>);
			this._Depositor_Payout_Detail = default(EntityRef<Depositor_Payout_Detail>);
			this._Transaction_Category1 = default(EntityRef<Transaction_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved_by", DbType="Int")]
		public System.Nullable<int> approved_by
		{
			get
			{
				return this._approved_by;
			}
			set
			{
				if ((this._approved_by != value))
				{
					if (this._Admin_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onapproved_byChanging(value);
					this.SendPropertyChanging();
					this._approved_by = value;
					this.SendPropertyChanged("approved_by");
					this.Onapproved_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_by", DbType="Int")]
		public System.Nullable<int> payout_by
		{
			get
			{
				return this._payout_by;
			}
			set
			{
				if ((this._payout_by != value))
				{
					this.Onpayout_byChanging(value);
					this.SendPropertyChanging();
					this._payout_by = value;
					this.SendPropertyChanged("payout_by");
					this.Onpayout_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_details", DbType="Int")]
		public System.Nullable<int> payout_details
		{
			get
			{
				return this._payout_details;
			}
			set
			{
				if ((this._payout_details != value))
				{
					if (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayout_detailsChanging(value);
					this.SendPropertyChanging();
					this._payout_details = value;
					this.SendPropertyChanged("payout_details");
					this.Onpayout_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_pin", DbType="VarChar(50)")]
		public string payout_pin
		{
			get
			{
				return this._payout_pin;
			}
			set
			{
				if ((this._payout_pin != value))
				{
					this.Onpayout_pinChanging(value);
					this.SendPropertyChanging();
					this._payout_pin = value;
					this.SendPropertyChanged("payout_pin");
					this.Onpayout_pinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPaid", DbType="Bit NOT NULL")]
		public bool isPaid
		{
			get
			{
				return this._isPaid;
			}
			set
			{
				if ((this._isPaid != value))
				{
					this.OnisPaidChanging(value);
					this.SendPropertyChanging();
					this._isPaid = value;
					this.SendPropertyChanged("isPaid");
					this.OnisPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_payout_status", DbType="Int NOT NULL")]
		public int customer_payout_status
		{
			get
			{
				return this._customer_payout_status;
			}
			set
			{
				if ((this._customer_payout_status != value))
				{
					if (this._Customer_Payout_Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_payout_statusChanging(value);
					this.SendPropertyChanging();
					this._customer_payout_status = value;
					this.SendPropertyChanged("customer_payout_status");
					this.Oncustomer_payout_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(100)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requested_date", DbType="DateTime NOT NULL")]
		public System.DateTime requested_date
		{
			get
			{
				return this._requested_date;
			}
			set
			{
				if ((this._requested_date != value))
				{
					this.Onrequested_dateChanging(value);
					this.SendPropertyChanging();
					this._requested_date = value;
					this.SendPropertyChanged("requested_date");
					this.Onrequested_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_payout_type", DbType="Int NOT NULL")]
		public int customer_payout_type
		{
			get
			{
				return this._customer_payout_type;
			}
			set
			{
				if ((this._customer_payout_type != value))
				{
					if (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_payout_typeChanging(value);
					this.SendPropertyChanging();
					this._customer_payout_type = value;
					this.SendPropertyChanged("customer_payout_type");
					this.Oncustomer_payout_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isReversalRequested", DbType="Bit NOT NULL")]
		public bool isReversalRequested
		{
			get
			{
				return this._isReversalRequested;
			}
			set
			{
				if ((this._isReversalRequested != value))
				{
					this.OnisReversalRequestedChanging(value);
					this.SendPropertyChanging();
					this._isReversalRequested = value;
					this.SendPropertyChanged("isReversalRequested");
					this.OnisReversalRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int")]
		public System.Nullable<int> transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					if (this._Transaction_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Request_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="payout_request")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Request_Customer_Payout_Request_Log", Storage="_Customer_Payout_Request_Logs", ThisKey="id", OtherKey="payout_request")]
		public EntitySet<Customer_Payout_Request_Log> Customer_Payout_Request_Logs
		{
			get
			{
				return this._Customer_Payout_Request_Logs;
			}
			set
			{
				this._Customer_Payout_Request_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Customer_Payout_Request", Storage="_Admin_User", ThisKey="approved_by", OtherKey="id", IsForeignKey=true)]
		public Admin_User Admin_User
		{
			get
			{
				return this._Admin_User.Entity;
			}
			set
			{
				Admin_User previousValue = this._Admin_User.Entity;
				if (((previousValue != value) 
							|| (this._Admin_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_User.Entity = null;
						previousValue.Customer_Payout_Requests.Remove(this);
					}
					this._Admin_User.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Requests.Add(this);
						this._approved_by = value.id;
					}
					else
					{
						this._approved_by = default(Nullable<int>);
					}
					this.SendPropertyChanged("Admin_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Payout_Request", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Payout_Requests.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Requests.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Payout_Type_Customer_Payout_Request", Storage="_Customer_Deposit_Payout_Type", ThisKey="customer_payout_type", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Payout_Type Customer_Deposit_Payout_Type
		{
			get
			{
				return this._Customer_Deposit_Payout_Type.Entity;
			}
			set
			{
				Customer_Deposit_Payout_Type previousValue = this._Customer_Deposit_Payout_Type.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Payout_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Payout_Type.Entity = null;
						previousValue.Customer_Payout_Requests.Remove(this);
					}
					this._Customer_Deposit_Payout_Type.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Requests.Add(this);
						this._customer_payout_type = value.id;
					}
					else
					{
						this._customer_payout_type = default(int);
					}
					this.SendPropertyChanged("Customer_Deposit_Payout_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Status_Customer_Payout_Request", Storage="_Customer_Payout_Status1", ThisKey="customer_payout_status", OtherKey="id", IsForeignKey=true)]
		public Customer_Payout_Status Customer_Payout_Status1
		{
			get
			{
				return this._Customer_Payout_Status1.Entity;
			}
			set
			{
				Customer_Payout_Status previousValue = this._Customer_Payout_Status1.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Payout_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Payout_Status1.Entity = null;
						previousValue.Customer_Payout_Requests.Remove(this);
					}
					this._Customer_Payout_Status1.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Requests.Add(this);
						this._customer_payout_status = value.id;
					}
					else
					{
						this._customer_payout_status = default(int);
					}
					this.SendPropertyChanged("Customer_Payout_Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Payout_Request", Storage="_Depositor_Payout_Detail", ThisKey="payout_details", OtherKey="id", IsForeignKey=true)]
		public Depositor_Payout_Detail Depositor_Payout_Detail
		{
			get
			{
				return this._Depositor_Payout_Detail.Entity;
			}
			set
			{
				Depositor_Payout_Detail previousValue = this._Depositor_Payout_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depositor_Payout_Detail.Entity = null;
						previousValue.Customer_Payout_Requests.Remove(this);
					}
					this._Depositor_Payout_Detail.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Requests.Add(this);
						this._payout_details = value.id;
					}
					else
					{
						this._payout_details = default(Nullable<int>);
					}
					this.SendPropertyChanged("Depositor_Payout_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Category_Customer_Payout_Request", Storage="_Transaction_Category1", ThisKey="transaction_category", OtherKey="id", IsForeignKey=true)]
		public Transaction_Category Transaction_Category1
		{
			get
			{
				return this._Transaction_Category1.Entity;
			}
			set
			{
				Transaction_Category previousValue = this._Transaction_Category1.Entity;
				if (((previousValue != value) 
							|| (this._Transaction_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction_Category1.Entity = null;
						previousValue.Customer_Payout_Requests.Remove(this);
					}
					this._Transaction_Category1.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Requests.Add(this);
						this._transaction_category = value.id;
					}
					else
					{
						this._transaction_category = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaction_Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Request = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Request = null;
		}
		
		private void attach_Customer_Payout_Request_Logs(Customer_Payout_Request_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Request = this;
		}
		
		private void detach_Customer_Payout_Request_Logs(Customer_Payout_Request_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Payout_Request_Log")]
	public partial class Customer_Payout_Request_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _payout_request;
		
		private string _comment;
		
		private System.DateTime _date;
		
		private int _action;
		
		private EntityRef<Customer_Payout_Request> _Customer_Payout_Request;
		
		private EntityRef<Customer_Payout_Status> _Customer_Payout_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpayout_requestChanging(int value);
    partial void Onpayout_requestChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnactionChanging(int value);
    partial void OnactionChanged();
    #endregion
		
		public Customer_Payout_Request_Log()
		{
			this._Customer_Payout_Request = default(EntityRef<Customer_Payout_Request>);
			this._Customer_Payout_Status = default(EntityRef<Customer_Payout_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_request", DbType="Int NOT NULL")]
		public int payout_request
		{
			get
			{
				return this._payout_request;
			}
			set
			{
				if ((this._payout_request != value))
				{
					if (this._Customer_Payout_Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayout_requestChanging(value);
					this.SendPropertyChanging();
					this._payout_request = value;
					this.SendPropertyChanged("payout_request");
					this.Onpayout_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(500)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="Int NOT NULL")]
		public int action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					if (this._Customer_Payout_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Request_Customer_Payout_Request_Log", Storage="_Customer_Payout_Request", ThisKey="payout_request", OtherKey="id", IsForeignKey=true)]
		public Customer_Payout_Request Customer_Payout_Request
		{
			get
			{
				return this._Customer_Payout_Request.Entity;
			}
			set
			{
				Customer_Payout_Request previousValue = this._Customer_Payout_Request.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Payout_Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Payout_Request.Entity = null;
						previousValue.Customer_Payout_Request_Logs.Remove(this);
					}
					this._Customer_Payout_Request.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Request_Logs.Add(this);
						this._payout_request = value.id;
					}
					else
					{
						this._payout_request = default(int);
					}
					this.SendPropertyChanged("Customer_Payout_Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Status_Customer_Payout_Request_Log", Storage="_Customer_Payout_Status", ThisKey="action", OtherKey="id", IsForeignKey=true)]
		public Customer_Payout_Status Customer_Payout_Status
		{
			get
			{
				return this._Customer_Payout_Status.Entity;
			}
			set
			{
				Customer_Payout_Status previousValue = this._Customer_Payout_Status.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Payout_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Payout_Status.Entity = null;
						previousValue.Customer_Payout_Request_Logs.Remove(this);
					}
					this._Customer_Payout_Status.Entity = value;
					if ((value != null))
					{
						value.Customer_Payout_Request_Logs.Add(this);
						this._action = value.id;
					}
					else
					{
						this._action = default(int);
					}
					this.SendPropertyChanged("Customer_Payout_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Payout_Status")]
	public partial class Customer_Payout_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntitySet<Customer_Payout_Request> _Customer_Payout_Requests;
		
		private EntitySet<Customer_Payout_Request_Log> _Customer_Payout_Request_Logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Customer_Payout_Status()
		{
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer_Payout_Requests = new EntitySet<Customer_Payout_Request>(new Action<Customer_Payout_Request>(this.attach_Customer_Payout_Requests), new Action<Customer_Payout_Request>(this.detach_Customer_Payout_Requests));
			this._Customer_Payout_Request_Logs = new EntitySet<Customer_Payout_Request_Log>(new Action<Customer_Payout_Request_Log>(this.attach_Customer_Payout_Request_Logs), new Action<Customer_Payout_Request_Log>(this.detach_Customer_Payout_Request_Logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Status_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="customer_payout_status")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Status_Customer_Payout_Request", Storage="_Customer_Payout_Requests", ThisKey="id", OtherKey="customer_payout_status")]
		public EntitySet<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this._Customer_Payout_Requests;
			}
			set
			{
				this._Customer_Payout_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Payout_Status_Customer_Payout_Request_Log", Storage="_Customer_Payout_Request_Logs", ThisKey="id", OtherKey="action")]
		public EntitySet<Customer_Payout_Request_Log> Customer_Payout_Request_Logs
		{
			get
			{
				return this._Customer_Payout_Request_Logs;
			}
			set
			{
				this._Customer_Payout_Request_Logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Status1 = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Status1 = null;
		}
		
		private void attach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Status1 = this;
		}
		
		private void detach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Status1 = null;
		}
		
		private void attach_Customer_Payout_Request_Logs(Customer_Payout_Request_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Status = this;
		}
		
		private void detach_Customer_Payout_Request_Logs(Customer_Payout_Request_Log entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Payout_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Settings")]
	public partial class Customer_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _payout_type;
		
		private System.Nullable<int> _operation_mode;
		
		private System.Nullable<bool> _is_autopayout;
		
		private EntityRef<Config_Operation_Mode> _Config_Operation_Mode;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpayout_typeChanging(System.Nullable<int> value);
    partial void Onpayout_typeChanged();
    partial void Onoperation_modeChanging(System.Nullable<int> value);
    partial void Onoperation_modeChanged();
    partial void Onis_autopayoutChanging(System.Nullable<bool> value);
    partial void Onis_autopayoutChanged();
    #endregion
		
		public Customer_Setting()
		{
			this._Config_Operation_Mode = default(EntityRef<Config_Operation_Mode>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payout_type", DbType="Int")]
		public System.Nullable<int> payout_type
		{
			get
			{
				return this._payout_type;
			}
			set
			{
				if ((this._payout_type != value))
				{
					this.Onpayout_typeChanging(value);
					this.SendPropertyChanging();
					this._payout_type = value;
					this.SendPropertyChanged("payout_type");
					this.Onpayout_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operation_mode", DbType="Int")]
		public System.Nullable<int> operation_mode
		{
			get
			{
				return this._operation_mode;
			}
			set
			{
				if ((this._operation_mode != value))
				{
					if (this._Config_Operation_Mode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onoperation_modeChanging(value);
					this.SendPropertyChanging();
					this._operation_mode = value;
					this.SendPropertyChanged("operation_mode");
					this.Onoperation_modeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_autopayout", DbType="Bit")]
		public System.Nullable<bool> is_autopayout
		{
			get
			{
				return this._is_autopayout;
			}
			set
			{
				if ((this._is_autopayout != value))
				{
					this.Onis_autopayoutChanging(value);
					this.SendPropertyChanging();
					this._is_autopayout = value;
					this.SendPropertyChanged("is_autopayout");
					this.Onis_autopayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Config_Operation_Mode_Customer_Setting", Storage="_Config_Operation_Mode", ThisKey="operation_mode", OtherKey="id", IsForeignKey=true)]
		public Config_Operation_Mode Config_Operation_Mode
		{
			get
			{
				return this._Config_Operation_Mode.Entity;
			}
			set
			{
				Config_Operation_Mode previousValue = this._Config_Operation_Mode.Entity;
				if (((previousValue != value) 
							|| (this._Config_Operation_Mode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Config_Operation_Mode.Entity = null;
						previousValue.Customer_Settings.Remove(this);
					}
					this._Config_Operation_Mode.Entity = value;
					if ((value != null))
					{
						value.Customer_Settings.Add(this);
						this._operation_mode = value.id;
					}
					else
					{
						this._operation_mode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Config_Operation_Mode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Setting", Storage="_Customer", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Setting = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Setting = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer_terminal_allocation")]
	public partial class customer_terminal_allocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _terminal;
		
		private int _customer;
		
		private int _allocated_by;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Terminal> _Terminal1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnterminalChanging(int value);
    partial void OnterminalChanged();
    partial void OncustomerChanging(int value);
    partial void OncustomerChanged();
    partial void Onallocated_byChanging(int value);
    partial void Onallocated_byChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public customer_terminal_allocation()
		{
			this._Customer1 = default(EntityRef<Customer>);
			this._Terminal1 = default(EntityRef<Terminal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terminal", DbType="Int NOT NULL")]
		public int terminal
		{
			get
			{
				return this._terminal;
			}
			set
			{
				if ((this._terminal != value))
				{
					if (this._Terminal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnterminalChanging(value);
					this.SendPropertyChanging();
					this._terminal = value;
					this.SendPropertyChanged("terminal");
					this.OnterminalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int NOT NULL")]
		public int customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allocated_by", DbType="Int NOT NULL")]
		public int allocated_by
		{
			get
			{
				return this._allocated_by;
			}
			set
			{
				if ((this._allocated_by != value))
				{
					this.Onallocated_byChanging(value);
					this.SendPropertyChanging();
					this._allocated_by = value;
					this.SendPropertyChanged("allocated_by");
					this.Onallocated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_customer_terminal_allocation", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.customer_terminal_allocations.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.customer_terminal_allocations.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(int);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Terminal_customer_terminal_allocation", Storage="_Terminal1", ThisKey="terminal", OtherKey="id", IsForeignKey=true)]
		public Terminal Terminal1
		{
			get
			{
				return this._Terminal1.Entity;
			}
			set
			{
				Terminal previousValue = this._Terminal1.Entity;
				if (((previousValue != value) 
							|| (this._Terminal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Terminal1.Entity = null;
						previousValue.customer_terminal_allocations.Remove(this);
					}
					this._Terminal1.Entity = value;
					if ((value != null))
					{
						value.customer_terminal_allocations.Add(this);
						this._terminal = value.id;
					}
					else
					{
						this._terminal = default(int);
					}
					this.SendPropertyChanged("Terminal1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Transaction")]
	public partial class Customer_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _customer;
		
		private System.Nullable<decimal> _balance_before;
		
		private System.Nullable<decimal> _amount;
		
		private System.Nullable<decimal> _balance_after;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _postedby;
		
		private System.Nullable<int> _postedby_details;
		
		private System.Nullable<int> _transaction_category;
		
		private string _details;
		
		private string _ticket;
		
		private string _reference_code;
		
		private string _ip;
		
		private System.Nullable<int> _registration_type;
		
		private EntitySet<Customer_Deposit> _Customer_Deposits;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Depositor_Payout_Detail> _Depositor_Payout_Detail;
		
		private EntityRef<Transaction_Category> _Transaction_Category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(System.Nullable<int> value);
    partial void OncustomerChanged();
    partial void Onbalance_beforeChanging(System.Nullable<decimal> value);
    partial void Onbalance_beforeChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void Onbalance_afterChanging(System.Nullable<decimal> value);
    partial void Onbalance_afterChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnpostedbyChanging(System.Nullable<int> value);
    partial void OnpostedbyChanged();
    partial void Onpostedby_detailsChanging(System.Nullable<int> value);
    partial void Onpostedby_detailsChanged();
    partial void Ontransaction_categoryChanging(System.Nullable<int> value);
    partial void Ontransaction_categoryChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnticketChanging(string value);
    partial void OnticketChanged();
    partial void Onreference_codeChanging(string value);
    partial void Onreference_codeChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void Onregistration_typeChanging(System.Nullable<int> value);
    partial void Onregistration_typeChanged();
    #endregion
		
		public Customer_Transaction()
		{
			this._Customer_Deposits = new EntitySet<Customer_Deposit>(new Action<Customer_Deposit>(this.attach_Customer_Deposits), new Action<Customer_Deposit>(this.detach_Customer_Deposits));
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer1 = default(EntityRef<Customer>);
			this._Depositor_Payout_Detail = default(EntityRef<Depositor_Payout_Detail>);
			this._Transaction_Category1 = default(EntityRef<Transaction_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="Int")]
		public System.Nullable<int> customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_before", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> balance_before
		{
			get
			{
				return this._balance_before;
			}
			set
			{
				if ((this._balance_before != value))
				{
					this.Onbalance_beforeChanging(value);
					this.SendPropertyChanging();
					this._balance_before = value;
					this.SendPropertyChanged("balance_before");
					this.Onbalance_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_after", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> balance_after
		{
			get
			{
				return this._balance_after;
			}
			set
			{
				if ((this._balance_after != value))
				{
					this.Onbalance_afterChanging(value);
					this.SendPropertyChanging();
					this._balance_after = value;
					this.SendPropertyChanged("balance_after");
					this.Onbalance_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postedby", DbType="Int")]
		public System.Nullable<int> postedby
		{
			get
			{
				return this._postedby;
			}
			set
			{
				if ((this._postedby != value))
				{
					this.OnpostedbyChanging(value);
					this.SendPropertyChanging();
					this._postedby = value;
					this.SendPropertyChanged("postedby");
					this.OnpostedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postedby_details", DbType="Int")]
		public System.Nullable<int> postedby_details
		{
			get
			{
				return this._postedby_details;
			}
			set
			{
				if ((this._postedby_details != value))
				{
					if (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpostedby_detailsChanging(value);
					this.SendPropertyChanging();
					this._postedby_details = value;
					this.SendPropertyChanged("postedby_details");
					this.Onpostedby_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int")]
		public System.Nullable<int> transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					if (this._Transaction_Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(150)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket", DbType="VarChar(150)")]
		public string ticket
		{
			get
			{
				return this._ticket;
			}
			set
			{
				if ((this._ticket != value))
				{
					this.OnticketChanging(value);
					this.SendPropertyChanging();
					this._ticket = value;
					this.SendPropertyChanged("ticket");
					this.OnticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference_code", DbType="VarChar(50)")]
		public string reference_code
		{
			get
			{
				return this._reference_code;
			}
			set
			{
				if ((this._reference_code != value))
				{
					this.Onreference_codeChanging(value);
					this.SendPropertyChanging();
					this._reference_code = value;
					this.SendPropertyChanged("reference_code");
					this.Onreference_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_type", DbType="Int")]
		public System.Nullable<int> registration_type
		{
			get
			{
				return this._registration_type;
			}
			set
			{
				if ((this._registration_type != value))
				{
					this.Onregistration_typeChanging(value);
					this.SendPropertyChanging();
					this._registration_type = value;
					this.SendPropertyChanged("registration_type");
					this.Onregistration_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Transaction_Customer_Deposit", Storage="_Customer_Deposits", ThisKey="id", OtherKey="customer_transaction")]
		public EntitySet<Customer_Deposit> Customer_Deposits
		{
			get
			{
				return this._Customer_Deposits;
			}
			set
			{
				this._Customer_Deposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Transaction_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="customer_transaction")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Transaction", Storage="_Customer1", ThisKey="customer", OtherKey="id", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Customer_Transactions.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Customer_Transactions.Add(this);
						this._customer = value.id;
					}
					else
					{
						this._customer = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Transaction", Storage="_Depositor_Payout_Detail", ThisKey="postedby_details", OtherKey="id", IsForeignKey=true)]
		public Depositor_Payout_Detail Depositor_Payout_Detail
		{
			get
			{
				return this._Depositor_Payout_Detail.Entity;
			}
			set
			{
				Depositor_Payout_Detail previousValue = this._Depositor_Payout_Detail.Entity;
				if (((previousValue != value) 
							|| (this._Depositor_Payout_Detail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Depositor_Payout_Detail.Entity = null;
						previousValue.Customer_Transactions.Remove(this);
					}
					this._Depositor_Payout_Detail.Entity = value;
					if ((value != null))
					{
						value.Customer_Transactions.Add(this);
						this._postedby_details = value.id;
					}
					else
					{
						this._postedby_details = default(Nullable<int>);
					}
					this.SendPropertyChanged("Depositor_Payout_Detail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Category_Customer_Transaction", Storage="_Transaction_Category1", ThisKey="transaction_category", OtherKey="id", IsForeignKey=true)]
		public Transaction_Category Transaction_Category1
		{
			get
			{
				return this._Transaction_Category1.Entity;
			}
			set
			{
				Transaction_Category previousValue = this._Transaction_Category1.Entity;
				if (((previousValue != value) 
							|| (this._Transaction_Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaction_Category1.Entity = null;
						previousValue.Customer_Transactions.Remove(this);
					}
					this._Transaction_Category1.Entity = value;
					if ((value != null))
					{
						value.Customer_Transactions.Add(this);
						this._transaction_category = value.id;
					}
					else
					{
						this._transaction_category = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaction_Category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Transaction1 = this;
		}
		
		private void detach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Transaction1 = null;
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Transaction1 = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Transaction1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Type")]
	public partial class Customer_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private string _description;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Customer_Type()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(150)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Type_Customer", Storage="_Customers", ThisKey="id", OtherKey="customer_type")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Type1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Customer_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Wallet")]
	public partial class Customer_Wallet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private decimal _wallet_balance;
		
		private System.Nullable<decimal> _wallet_ledger_balance;
		
		private System.Nullable<decimal> _wallet_available_balance;
		
		private System.Nullable<decimal> _wallet_deposit_balance;
		
		private System.Nullable<decimal> _wallet_payout_balance;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onwallet_balanceChanging(decimal value);
    partial void Onwallet_balanceChanged();
    partial void Onwallet_ledger_balanceChanging(System.Nullable<decimal> value);
    partial void Onwallet_ledger_balanceChanged();
    partial void Onwallet_available_balanceChanging(System.Nullable<decimal> value);
    partial void Onwallet_available_balanceChanged();
    partial void Onwallet_deposit_balanceChanging(System.Nullable<decimal> value);
    partial void Onwallet_deposit_balanceChanged();
    partial void Onwallet_payout_balanceChanging(System.Nullable<decimal> value);
    partial void Onwallet_payout_balanceChanged();
    #endregion
		
		public Customer_Wallet()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet_balance", DbType="Decimal(18,2) NOT NULL")]
		public decimal wallet_balance
		{
			get
			{
				return this._wallet_balance;
			}
			set
			{
				if ((this._wallet_balance != value))
				{
					this.Onwallet_balanceChanging(value);
					this.SendPropertyChanging();
					this._wallet_balance = value;
					this.SendPropertyChanged("wallet_balance");
					this.Onwallet_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet_ledger_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> wallet_ledger_balance
		{
			get
			{
				return this._wallet_ledger_balance;
			}
			set
			{
				if ((this._wallet_ledger_balance != value))
				{
					this.Onwallet_ledger_balanceChanging(value);
					this.SendPropertyChanging();
					this._wallet_ledger_balance = value;
					this.SendPropertyChanged("wallet_ledger_balance");
					this.Onwallet_ledger_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet_available_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> wallet_available_balance
		{
			get
			{
				return this._wallet_available_balance;
			}
			set
			{
				if ((this._wallet_available_balance != value))
				{
					this.Onwallet_available_balanceChanging(value);
					this.SendPropertyChanging();
					this._wallet_available_balance = value;
					this.SendPropertyChanged("wallet_available_balance");
					this.Onwallet_available_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet_deposit_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> wallet_deposit_balance
		{
			get
			{
				return this._wallet_deposit_balance;
			}
			set
			{
				if ((this._wallet_deposit_balance != value))
				{
					this.Onwallet_deposit_balanceChanging(value);
					this.SendPropertyChanging();
					this._wallet_deposit_balance = value;
					this.SendPropertyChanged("wallet_deposit_balance");
					this.Onwallet_deposit_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wallet_payout_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> wallet_payout_balance
		{
			get
			{
				return this._wallet_payout_balance;
			}
			set
			{
				if ((this._wallet_payout_balance != value))
				{
					this.Onwallet_payout_balanceChanging(value);
					this.SendPropertyChanging();
					this._wallet_payout_balance = value;
					this.SendPropertyChanged("wallet_payout_balance");
					this.Onwallet_payout_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Customer_Wallet", Storage="_Customer", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Customer_Wallet = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Customer_Wallet = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Daily_Game")]
	public partial class Daily_Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _game;
		
		private System.DateTime _date;
		
		private System.DateTime _start_datetime;
		
		private System.DateTime _end_datetime;
		
		private bool _isValidated;
		
		private bool _isActive;
		
		private decimal _total_stake;
		
		private decimal _total_winnings;
		
		private decimal _total_lost;
		
		private decimal _total_commision;
		
		private decimal _total_profit;
		
		private System.Nullable<int> _total_bets;
		
		private System.Nullable<int> _total_lostbets;
		
		private System.Nullable<int> _total_wonbets;
		
		private System.Nullable<int> _total_cancelledbets;
		
		private System.Nullable<decimal> _total_error_ticket_amont;
		
		private System.Nullable<bool> _fileuploaded;
		
		private System.Nullable<bool> _isprocessed;
		
		private EntitySet<Affiliate_Daily_Game_Sale> _Affiliate_Daily_Game_Sales;
		
		private EntitySet<Bet> _Bets;
		
		private EntityRef<Daily_Game_Result> _Daily_Game_Result;
		
		private EntitySet<Shop_Daily_Game_Sale> _Shop_Daily_Game_Sales;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Game> _Game1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OngameChanging(int value);
    partial void OngameChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onstart_datetimeChanging(System.DateTime value);
    partial void Onstart_datetimeChanged();
    partial void Onend_datetimeChanging(System.DateTime value);
    partial void Onend_datetimeChanged();
    partial void OnisValidatedChanging(bool value);
    partial void OnisValidatedChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void Ontotal_stakeChanging(decimal value);
    partial void Ontotal_stakeChanged();
    partial void Ontotal_winningsChanging(decimal value);
    partial void Ontotal_winningsChanged();
    partial void Ontotal_lostChanging(decimal value);
    partial void Ontotal_lostChanged();
    partial void Ontotal_commisionChanging(decimal value);
    partial void Ontotal_commisionChanged();
    partial void Ontotal_profitChanging(decimal value);
    partial void Ontotal_profitChanged();
    partial void Ontotal_betsChanging(System.Nullable<int> value);
    partial void Ontotal_betsChanged();
    partial void Ontotal_lostbetsChanging(System.Nullable<int> value);
    partial void Ontotal_lostbetsChanged();
    partial void Ontotal_wonbetsChanging(System.Nullable<int> value);
    partial void Ontotal_wonbetsChanged();
    partial void Ontotal_cancelledbetsChanging(System.Nullable<int> value);
    partial void Ontotal_cancelledbetsChanged();
    partial void Ontotal_error_ticket_amontChanging(System.Nullable<decimal> value);
    partial void Ontotal_error_ticket_amontChanged();
    partial void OnfileuploadedChanging(System.Nullable<bool> value);
    partial void OnfileuploadedChanged();
    partial void OnisprocessedChanging(System.Nullable<bool> value);
    partial void OnisprocessedChanged();
    #endregion
		
		public Daily_Game()
		{
			this._Affiliate_Daily_Game_Sales = new EntitySet<Affiliate_Daily_Game_Sale>(new Action<Affiliate_Daily_Game_Sale>(this.attach_Affiliate_Daily_Game_Sales), new Action<Affiliate_Daily_Game_Sale>(this.detach_Affiliate_Daily_Game_Sales));
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Daily_Game_Result = default(EntityRef<Daily_Game_Result>);
			this._Shop_Daily_Game_Sales = new EntitySet<Shop_Daily_Game_Sale>(new Action<Shop_Daily_Game_Sale>(this.attach_Shop_Daily_Game_Sales), new Action<Shop_Daily_Game_Sale>(this.detach_Shop_Daily_Game_Sales));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Game1 = default(EntityRef<Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game", DbType="Int NOT NULL")]
		public int game
		{
			get
			{
				return this._game;
			}
			set
			{
				if ((this._game != value))
				{
					if (this._Game1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngameChanging(value);
					this.SendPropertyChanging();
					this._game = value;
					this.SendPropertyChanged("game");
					this.OngameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime start_datetime
		{
			get
			{
				return this._start_datetime;
			}
			set
			{
				if ((this._start_datetime != value))
				{
					this.Onstart_datetimeChanging(value);
					this.SendPropertyChanging();
					this._start_datetime = value;
					this.SendPropertyChanged("start_datetime");
					this.Onstart_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime end_datetime
		{
			get
			{
				return this._end_datetime;
			}
			set
			{
				if ((this._end_datetime != value))
				{
					this.Onend_datetimeChanging(value);
					this.SendPropertyChanging();
					this._end_datetime = value;
					this.SendPropertyChanged("end_datetime");
					this.Onend_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValidated", DbType="Bit NOT NULL")]
		public bool isValidated
		{
			get
			{
				return this._isValidated;
			}
			set
			{
				if ((this._isValidated != value))
				{
					this.OnisValidatedChanging(value);
					this.SendPropertyChanging();
					this._isValidated = value;
					this.SendPropertyChanged("isValidated");
					this.OnisValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_stake", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_stake
		{
			get
			{
				return this._total_stake;
			}
			set
			{
				if ((this._total_stake != value))
				{
					this.Ontotal_stakeChanging(value);
					this.SendPropertyChanging();
					this._total_stake = value;
					this.SendPropertyChanged("total_stake");
					this.Ontotal_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_winnings", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_winnings
		{
			get
			{
				return this._total_winnings;
			}
			set
			{
				if ((this._total_winnings != value))
				{
					this.Ontotal_winningsChanging(value);
					this.SendPropertyChanging();
					this._total_winnings = value;
					this.SendPropertyChanged("total_winnings");
					this.Ontotal_winningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_lost", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_lost
		{
			get
			{
				return this._total_lost;
			}
			set
			{
				if ((this._total_lost != value))
				{
					this.Ontotal_lostChanging(value);
					this.SendPropertyChanging();
					this._total_lost = value;
					this.SendPropertyChanged("total_lost");
					this.Ontotal_lostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_commision", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_commision
		{
			get
			{
				return this._total_commision;
			}
			set
			{
				if ((this._total_commision != value))
				{
					this.Ontotal_commisionChanging(value);
					this.SendPropertyChanging();
					this._total_commision = value;
					this.SendPropertyChanged("total_commision");
					this.Ontotal_commisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_profit", DbType="Decimal(18,2) NOT NULL")]
		public decimal total_profit
		{
			get
			{
				return this._total_profit;
			}
			set
			{
				if ((this._total_profit != value))
				{
					this.Ontotal_profitChanging(value);
					this.SendPropertyChanging();
					this._total_profit = value;
					this.SendPropertyChanged("total_profit");
					this.Ontotal_profitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_bets", DbType="Int")]
		public System.Nullable<int> total_bets
		{
			get
			{
				return this._total_bets;
			}
			set
			{
				if ((this._total_bets != value))
				{
					this.Ontotal_betsChanging(value);
					this.SendPropertyChanging();
					this._total_bets = value;
					this.SendPropertyChanged("total_bets");
					this.Ontotal_betsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_lostbets", DbType="Int")]
		public System.Nullable<int> total_lostbets
		{
			get
			{
				return this._total_lostbets;
			}
			set
			{
				if ((this._total_lostbets != value))
				{
					this.Ontotal_lostbetsChanging(value);
					this.SendPropertyChanging();
					this._total_lostbets = value;
					this.SendPropertyChanged("total_lostbets");
					this.Ontotal_lostbetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_wonbets", DbType="Int")]
		public System.Nullable<int> total_wonbets
		{
			get
			{
				return this._total_wonbets;
			}
			set
			{
				if ((this._total_wonbets != value))
				{
					this.Ontotal_wonbetsChanging(value);
					this.SendPropertyChanging();
					this._total_wonbets = value;
					this.SendPropertyChanged("total_wonbets");
					this.Ontotal_wonbetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cancelledbets", DbType="Int")]
		public System.Nullable<int> total_cancelledbets
		{
			get
			{
				return this._total_cancelledbets;
			}
			set
			{
				if ((this._total_cancelledbets != value))
				{
					this.Ontotal_cancelledbetsChanging(value);
					this.SendPropertyChanging();
					this._total_cancelledbets = value;
					this.SendPropertyChanged("total_cancelledbets");
					this.Ontotal_cancelledbetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_error_ticket_amont", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total_error_ticket_amont
		{
			get
			{
				return this._total_error_ticket_amont;
			}
			set
			{
				if ((this._total_error_ticket_amont != value))
				{
					this.Ontotal_error_ticket_amontChanging(value);
					this.SendPropertyChanging();
					this._total_error_ticket_amont = value;
					this.SendPropertyChanged("total_error_ticket_amont");
					this.Ontotal_error_ticket_amontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileuploaded", DbType="Bit")]
		public System.Nullable<bool> fileuploaded
		{
			get
			{
				return this._fileuploaded;
			}
			set
			{
				if ((this._fileuploaded != value))
				{
					this.OnfileuploadedChanging(value);
					this.SendPropertyChanging();
					this._fileuploaded = value;
					this.SendPropertyChanged("fileuploaded");
					this.OnfileuploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isprocessed", DbType="Bit")]
		public System.Nullable<bool> isprocessed
		{
			get
			{
				return this._isprocessed;
			}
			set
			{
				if ((this._isprocessed != value))
				{
					this.OnisprocessedChanging(value);
					this.SendPropertyChanging();
					this._isprocessed = value;
					this.SendPropertyChanged("isprocessed");
					this.OnisprocessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Affiliate_Daily_Game_Sale", Storage="_Affiliate_Daily_Game_Sales", ThisKey="id", OtherKey="daily_game")]
		public EntitySet<Affiliate_Daily_Game_Sale> Affiliate_Daily_Game_Sales
		{
			get
			{
				return this._Affiliate_Daily_Game_Sales;
			}
			set
			{
				this._Affiliate_Daily_Game_Sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Bet", Storage="_Bets", ThisKey="id", OtherKey="daily_game")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Daily_Game_Result", Storage="_Daily_Game_Result", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Daily_Game_Result Daily_Game_Result
		{
			get
			{
				return this._Daily_Game_Result.Entity;
			}
			set
			{
				Daily_Game_Result previousValue = this._Daily_Game_Result.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Game_Result.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Game_Result.Entity = null;
						previousValue.Daily_Game = null;
					}
					this._Daily_Game_Result.Entity = value;
					if ((value != null))
					{
						value.Daily_Game = this;
					}
					this.SendPropertyChanged("Daily_Game_Result");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Shop_Daily_Game_Sale", Storage="_Shop_Daily_Game_Sales", ThisKey="id", OtherKey="daily_game")]
		public EntitySet<Shop_Daily_Game_Sale> Shop_Daily_Game_Sales
		{
			get
			{
				return this._Shop_Daily_Game_Sales;
			}
			set
			{
				this._Shop_Daily_Game_Sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Ticket", Storage="_Tickets", ThisKey="id", OtherKey="daily_game")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Daily_Game", Storage="_Game1", ThisKey="game", OtherKey="id", IsForeignKey=true)]
		public Game Game1
		{
			get
			{
				return this._Game1.Entity;
			}
			set
			{
				Game previousValue = this._Game1.Entity;
				if (((previousValue != value) 
							|| (this._Game1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game1.Entity = null;
						previousValue.Daily_Games.Remove(this);
					}
					this._Game1.Entity = value;
					if ((value != null))
					{
						value.Daily_Games.Add(this);
						this._game = value.id;
					}
					else
					{
						this._game = default(int);
					}
					this.SendPropertyChanged("Game1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliate_Daily_Game_Sales(Affiliate_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = this;
		}
		
		private void detach_Affiliate_Daily_Game_Sales(Affiliate_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = null;
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = null;
		}
		
		private void attach_Shop_Daily_Game_Sales(Shop_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = this;
		}
		
		private void detach_Shop_Daily_Game_Sales(Shop_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Daily_Game1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Daily_Game_Result")]
	public partial class Daily_Game_Result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _winning_ball1;
		
		private int _winning_ball2;
		
		private int _winning_ball3;
		
		private int _winning_ball4;
		
		private int _winning_ball5;
		
		private int _machine_ball1;
		
		private int _machine_ball2;
		
		private int _machine_ball3;
		
		private int _machine_ball4;
		
		private int _machine_ball5;
		
		private bool _status;
		
		private EntityRef<Daily_Game> _Daily_Game;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onwinning_ball1Changing(int value);
    partial void Onwinning_ball1Changed();
    partial void Onwinning_ball2Changing(int value);
    partial void Onwinning_ball2Changed();
    partial void Onwinning_ball3Changing(int value);
    partial void Onwinning_ball3Changed();
    partial void Onwinning_ball4Changing(int value);
    partial void Onwinning_ball4Changed();
    partial void Onwinning_ball5Changing(int value);
    partial void Onwinning_ball5Changed();
    partial void Onmachine_ball1Changing(int value);
    partial void Onmachine_ball1Changed();
    partial void Onmachine_ball2Changing(int value);
    partial void Onmachine_ball2Changed();
    partial void Onmachine_ball3Changing(int value);
    partial void Onmachine_ball3Changed();
    partial void Onmachine_ball4Changing(int value);
    partial void Onmachine_ball4Changed();
    partial void Onmachine_ball5Changing(int value);
    partial void Onmachine_ball5Changed();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public Daily_Game_Result()
		{
			this._Daily_Game = default(EntityRef<Daily_Game>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Daily_Game.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winning_ball1", DbType="Int NOT NULL")]
		public int winning_ball1
		{
			get
			{
				return this._winning_ball1;
			}
			set
			{
				if ((this._winning_ball1 != value))
				{
					this.Onwinning_ball1Changing(value);
					this.SendPropertyChanging();
					this._winning_ball1 = value;
					this.SendPropertyChanged("winning_ball1");
					this.Onwinning_ball1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winning_ball2", DbType="Int NOT NULL")]
		public int winning_ball2
		{
			get
			{
				return this._winning_ball2;
			}
			set
			{
				if ((this._winning_ball2 != value))
				{
					this.Onwinning_ball2Changing(value);
					this.SendPropertyChanging();
					this._winning_ball2 = value;
					this.SendPropertyChanged("winning_ball2");
					this.Onwinning_ball2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winning_ball3", DbType="Int NOT NULL")]
		public int winning_ball3
		{
			get
			{
				return this._winning_ball3;
			}
			set
			{
				if ((this._winning_ball3 != value))
				{
					this.Onwinning_ball3Changing(value);
					this.SendPropertyChanging();
					this._winning_ball3 = value;
					this.SendPropertyChanged("winning_ball3");
					this.Onwinning_ball3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winning_ball4", DbType="Int NOT NULL")]
		public int winning_ball4
		{
			get
			{
				return this._winning_ball4;
			}
			set
			{
				if ((this._winning_ball4 != value))
				{
					this.Onwinning_ball4Changing(value);
					this.SendPropertyChanging();
					this._winning_ball4 = value;
					this.SendPropertyChanged("winning_ball4");
					this.Onwinning_ball4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winning_ball5", DbType="Int NOT NULL")]
		public int winning_ball5
		{
			get
			{
				return this._winning_ball5;
			}
			set
			{
				if ((this._winning_ball5 != value))
				{
					this.Onwinning_ball5Changing(value);
					this.SendPropertyChanging();
					this._winning_ball5 = value;
					this.SendPropertyChanged("winning_ball5");
					this.Onwinning_ball5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_ball1", DbType="Int NOT NULL")]
		public int machine_ball1
		{
			get
			{
				return this._machine_ball1;
			}
			set
			{
				if ((this._machine_ball1 != value))
				{
					this.Onmachine_ball1Changing(value);
					this.SendPropertyChanging();
					this._machine_ball1 = value;
					this.SendPropertyChanged("machine_ball1");
					this.Onmachine_ball1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_ball2", DbType="Int NOT NULL")]
		public int machine_ball2
		{
			get
			{
				return this._machine_ball2;
			}
			set
			{
				if ((this._machine_ball2 != value))
				{
					this.Onmachine_ball2Changing(value);
					this.SendPropertyChanging();
					this._machine_ball2 = value;
					this.SendPropertyChanged("machine_ball2");
					this.Onmachine_ball2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_ball3", DbType="Int NOT NULL")]
		public int machine_ball3
		{
			get
			{
				return this._machine_ball3;
			}
			set
			{
				if ((this._machine_ball3 != value))
				{
					this.Onmachine_ball3Changing(value);
					this.SendPropertyChanging();
					this._machine_ball3 = value;
					this.SendPropertyChanged("machine_ball3");
					this.Onmachine_ball3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_ball4", DbType="Int NOT NULL")]
		public int machine_ball4
		{
			get
			{
				return this._machine_ball4;
			}
			set
			{
				if ((this._machine_ball4 != value))
				{
					this.Onmachine_ball4Changing(value);
					this.SendPropertyChanging();
					this._machine_ball4 = value;
					this.SendPropertyChanged("machine_ball4");
					this.Onmachine_ball4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_ball5", DbType="Int NOT NULL")]
		public int machine_ball5
		{
			get
			{
				return this._machine_ball5;
			}
			set
			{
				if ((this._machine_ball5 != value))
				{
					this.Onmachine_ball5Changing(value);
					this.SendPropertyChanging();
					this._machine_ball5 = value;
					this.SendPropertyChanged("machine_ball5");
					this.Onmachine_ball5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Daily_Game_Result", Storage="_Daily_Game", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Daily_Game Daily_Game
		{
			get
			{
				return this._Daily_Game.Entity;
			}
			set
			{
				Daily_Game previousValue = this._Daily_Game.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Game.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Game.Entity = null;
						previousValue.Daily_Game_Result = null;
					}
					this._Daily_Game.Entity = value;
					if ((value != null))
					{
						value.Daily_Game_Result = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Daily_Game");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Depositor_Payout_Detail")]
	public partial class Depositor_Payout_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Customer_Deposit> _Customer_Deposits;
		
		private EntitySet<Customer_Deposit_Request> _Customer_Deposit_Requests;
		
		private EntitySet<Customer_Payout> _Customer_Payouts;
		
		private EntitySet<Customer_Payout_Request> _Customer_Payout_Requests;
		
		private EntitySet<Customer_Transaction> _Customer_Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Depositor_Payout_Detail()
		{
			this._Customer_Deposits = new EntitySet<Customer_Deposit>(new Action<Customer_Deposit>(this.attach_Customer_Deposits), new Action<Customer_Deposit>(this.detach_Customer_Deposits));
			this._Customer_Deposit_Requests = new EntitySet<Customer_Deposit_Request>(new Action<Customer_Deposit_Request>(this.attach_Customer_Deposit_Requests), new Action<Customer_Deposit_Request>(this.detach_Customer_Deposit_Requests));
			this._Customer_Payouts = new EntitySet<Customer_Payout>(new Action<Customer_Payout>(this.attach_Customer_Payouts), new Action<Customer_Payout>(this.detach_Customer_Payouts));
			this._Customer_Payout_Requests = new EntitySet<Customer_Payout_Request>(new Action<Customer_Payout_Request>(this.attach_Customer_Payout_Requests), new Action<Customer_Payout_Request>(this.detach_Customer_Payout_Requests));
			this._Customer_Transactions = new EntitySet<Customer_Transaction>(new Action<Customer_Transaction>(this.attach_Customer_Transactions), new Action<Customer_Transaction>(this.detach_Customer_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(150)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Deposit", Storage="_Customer_Deposits", ThisKey="id", OtherKey="depositor_details")]
		public EntitySet<Customer_Deposit> Customer_Deposits
		{
			get
			{
				return this._Customer_Deposits;
			}
			set
			{
				this._Customer_Deposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Deposit_Request", Storage="_Customer_Deposit_Requests", ThisKey="id", OtherKey="depositor_details")]
		public EntitySet<Customer_Deposit_Request> Customer_Deposit_Requests
		{
			get
			{
				return this._Customer_Deposit_Requests;
			}
			set
			{
				this._Customer_Deposit_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Payout", Storage="_Customer_Payouts", ThisKey="id", OtherKey="payout_details")]
		public EntitySet<Customer_Payout> Customer_Payouts
		{
			get
			{
				return this._Customer_Payouts;
			}
			set
			{
				this._Customer_Payouts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Payout_Request", Storage="_Customer_Payout_Requests", ThisKey="id", OtherKey="payout_details")]
		public EntitySet<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this._Customer_Payout_Requests;
			}
			set
			{
				this._Customer_Payout_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Depositor_Payout_Detail_Customer_Transaction", Storage="_Customer_Transactions", ThisKey="id", OtherKey="postedby_details")]
		public EntitySet<Customer_Transaction> Customer_Transactions
		{
			get
			{
				return this._Customer_Transactions;
			}
			set
			{
				this._Customer_Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = this;
		}
		
		private void detach_Customer_Deposits(Customer_Deposit entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = null;
		}
		
		private void attach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = this;
		}
		
		private void detach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = null;
		}
		
		private void attach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = this;
		}
		
		private void detach_Customer_Payouts(Customer_Payout entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = null;
		}
		
		private void attach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = this;
		}
		
		private void detach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = null;
		}
		
		private void attach_Customer_Transactions(Customer_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = this;
		}
		
		private void detach_Customer_Transactions(Customer_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Depositor_Payout_Detail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _day;
		
		private int _start_time;
		
		private int _end_time;
		
		private bool _status;
		
		private string _code;
		
		private string _background_image;
		
		private string _logo;
		
		private System.Nullable<int> _game_type;
		
		private bool _isGhana_game;
		
		private EntitySet<Daily_Game> _Daily_Games;
		
		private EntityRef<Game_Type> _Game_Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndayChanging(string value);
    partial void OndayChanged();
    partial void Onstart_timeChanging(int value);
    partial void Onstart_timeChanged();
    partial void Onend_timeChanging(int value);
    partial void Onend_timeChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Onbackground_imageChanging(string value);
    partial void Onbackground_imageChanged();
    partial void OnlogoChanging(string value);
    partial void OnlogoChanged();
    partial void Ongame_typeChanging(System.Nullable<int> value);
    partial void Ongame_typeChanged();
    partial void OnisGhana_gameChanging(bool value);
    partial void OnisGhana_gameChanged();
    #endregion
		
		public Game()
		{
			this._Daily_Games = new EntitySet<Daily_Game>(new Action<Daily_Game>(this.attach_Daily_Games), new Action<Daily_Game>(this.detach_Daily_Games));
			this._Game_Type1 = default(EntityRef<Game_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_time", DbType="Int NOT NULL")]
		public int start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this.Onstart_timeChanging(value);
					this.SendPropertyChanging();
					this._start_time = value;
					this.SendPropertyChanged("start_time");
					this.Onstart_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_time", DbType="Int NOT NULL")]
		public int end_time
		{
			get
			{
				return this._end_time;
			}
			set
			{
				if ((this._end_time != value))
				{
					this.Onend_timeChanging(value);
					this.SendPropertyChanging();
					this._end_time = value;
					this.SendPropertyChanged("end_time");
					this.Onend_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_background_image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string background_image
		{
			get
			{
				return this._background_image;
			}
			set
			{
				if ((this._background_image != value))
				{
					this.Onbackground_imageChanging(value);
					this.SendPropertyChanging();
					this._background_image = value;
					this.SendPropertyChanged("background_image");
					this.Onbackground_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_game_type", DbType="Int")]
		public System.Nullable<int> game_type
		{
			get
			{
				return this._game_type;
			}
			set
			{
				if ((this._game_type != value))
				{
					if (this._Game_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongame_typeChanging(value);
					this.SendPropertyChanging();
					this._game_type = value;
					this.SendPropertyChanged("game_type");
					this.Ongame_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isGhana_game", DbType="Bit NOT NULL")]
		public bool isGhana_game
		{
			get
			{
				return this._isGhana_game;
			}
			set
			{
				if ((this._isGhana_game != value))
				{
					this.OnisGhana_gameChanging(value);
					this.SendPropertyChanging();
					this._isGhana_game = value;
					this.SendPropertyChanged("isGhana_game");
					this.OnisGhana_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Daily_Game", Storage="_Daily_Games", ThisKey="id", OtherKey="game")]
		public EntitySet<Daily_Game> Daily_Games
		{
			get
			{
				return this._Daily_Games;
			}
			set
			{
				this._Daily_Games.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Type_Game", Storage="_Game_Type1", ThisKey="game_type", OtherKey="id", IsForeignKey=true)]
		public Game_Type Game_Type1
		{
			get
			{
				return this._Game_Type1.Entity;
			}
			set
			{
				Game_Type previousValue = this._Game_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Game_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Game_Type1.Entity = null;
						previousValue.Games.Remove(this);
					}
					this._Game_Type1.Entity = value;
					if ((value != null))
					{
						value.Games.Add(this);
						this._game_type = value.id;
					}
					else
					{
						this._game_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Game_Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Daily_Games(Daily_Game entity)
		{
			this.SendPropertyChanging();
			entity.Game1 = this;
		}
		
		private void detach_Daily_Games(Daily_Game entity)
		{
			this.SendPropertyChanging();
			entity.Game1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game_Type")]
	public partial class Game_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private System.Nullable<bool> _isMain;
		
		private System.Nullable<int> _maintype;
		
		private EntitySet<Game> _Games;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnisMainChanging(System.Nullable<bool> value);
    partial void OnisMainChanged();
    partial void OnmaintypeChanging(System.Nullable<int> value);
    partial void OnmaintypeChanged();
    #endregion
		
		public Game_Type()
		{
			this._Games = new EntitySet<Game>(new Action<Game>(this.attach_Games), new Action<Game>(this.detach_Games));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMain", DbType="Bit")]
		public System.Nullable<bool> isMain
		{
			get
			{
				return this._isMain;
			}
			set
			{
				if ((this._isMain != value))
				{
					this.OnisMainChanging(value);
					this.SendPropertyChanging();
					this._isMain = value;
					this.SendPropertyChanged("isMain");
					this.OnisMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maintype", DbType="Int")]
		public System.Nullable<int> maintype
		{
			get
			{
				return this._maintype;
			}
			set
			{
				if ((this._maintype != value))
				{
					this.OnmaintypeChanging(value);
					this.SendPropertyChanging();
					this._maintype = value;
					this.SendPropertyChanged("maintype");
					this.OnmaintypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Game_Type_Game", Storage="_Games", ThisKey="id", OtherKey="game_type")]
		public EntitySet<Game> Games
		{
			get
			{
				return this._Games;
			}
			set
			{
				this._Games.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.Game_Type1 = this;
		}
		
		private void detach_Games(Game entity)
		{
			this.SendPropertyChanging();
			entity.Game_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail")]
	public partial class Mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _code;
		
		private string _content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public Mail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(120)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mail_Validity")]
	public partial class Mail_Validity
	{
		
		private int _id;
		
		private string _validatycode;
		
		private System.Nullable<System.DateTime> _expirydate;
		
		public Mail_Validity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validatycode", DbType="VarChar(50)")]
		public string validatycode
		{
			get
			{
				return this._validatycode;
			}
			set
			{
				if ((this._validatycode != value))
				{
					this._validatycode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirydate", DbType="Date")]
		public System.Nullable<System.DateTime> expirydate
		{
			get
			{
				return this._expirydate;
			}
			set
			{
				if ((this._expirydate != value))
				{
					this._expirydate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.message")]
	public partial class message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _subject;
		
		private string _message1;
		
		private System.Nullable<bool> _isread;
		
		private System.Nullable<int> _sender;
		
		private System.Nullable<bool> _needsreply;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void Onmessage1Changing(string value);
    partial void Onmessage1Changed();
    partial void OnisreadChanging(System.Nullable<bool> value);
    partial void OnisreadChanged();
    partial void OnsenderChanging(System.Nullable<int> value);
    partial void OnsenderChanged();
    partial void OnneedsreplyChanging(System.Nullable<bool> value);
    partial void OnneedsreplyChanged();
    #endregion
		
		public message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(1000)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="message", Storage="_message1", DbType="VarChar(MAX)")]
		public string message1
		{
			get
			{
				return this._message1;
			}
			set
			{
				if ((this._message1 != value))
				{
					this.Onmessage1Changing(value);
					this.SendPropertyChanging();
					this._message1 = value;
					this.SendPropertyChanged("message1");
					this.Onmessage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isread", DbType="Bit")]
		public System.Nullable<bool> isread
		{
			get
			{
				return this._isread;
			}
			set
			{
				if ((this._isread != value))
				{
					this.OnisreadChanging(value);
					this.SendPropertyChanging();
					this._isread = value;
					this.SendPropertyChanged("isread");
					this.OnisreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender", DbType="Int")]
		public System.Nullable<int> sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_needsreply", DbType="Bit")]
		public System.Nullable<bool> needsreply
		{
			get
			{
				return this._needsreply;
			}
			set
			{
				if ((this._needsreply != value))
				{
					this.OnneedsreplyChanging(value);
					this.SendPropertyChanging();
					this._needsreply = value;
					this.SendPropertyChanged("needsreply");
					this.OnneedsreplyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Module()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operation_Mode")]
	public partial class Operation_Mode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Operation_Mode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operational_Configuration")]
	public partial class Operational_Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _key;
		
		private string _description;
		
		private string _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkeyChanging(string value);
    partial void OnkeyChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public Operational_Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(250)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(1500) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _url;
		
		private string _code;
		
		private System.Nullable<int> _module;
		
		private string _page_category;
		
		private System.Nullable<bool> _isMain;
		
		private System.Nullable<int> _parent;
		
		private System.Nullable<int> _page_order;
		
		private EntitySet<Page> _Pages;
		
		private EntityRef<Page> _Page1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnmoduleChanging(System.Nullable<int> value);
    partial void OnmoduleChanged();
    partial void Onpage_categoryChanging(string value);
    partial void Onpage_categoryChanged();
    partial void OnisMainChanging(System.Nullable<bool> value);
    partial void OnisMainChanged();
    partial void OnparentChanging(System.Nullable<int> value);
    partial void OnparentChanged();
    partial void Onpage_orderChanging(System.Nullable<int> value);
    partial void Onpage_orderChanged();
    #endregion
		
		public Page()
		{
			this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
			this._Page1 = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(1000)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int")]
		public System.Nullable<int> module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_category", DbType="VarChar(50)")]
		public string page_category
		{
			get
			{
				return this._page_category;
			}
			set
			{
				if ((this._page_category != value))
				{
					this.Onpage_categoryChanging(value);
					this.SendPropertyChanging();
					this._page_category = value;
					this.SendPropertyChanged("page_category");
					this.Onpage_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMain", DbType="Bit")]
		public System.Nullable<bool> isMain
		{
			get
			{
				return this._isMain;
			}
			set
			{
				if ((this._isMain != value))
				{
					this.OnisMainChanging(value);
					this.SendPropertyChanging();
					this._isMain = value;
					this.SendPropertyChanged("isMain");
					this.OnisMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="Int")]
		public System.Nullable<int> parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					if (this._Page1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_order", DbType="Int")]
		public System.Nullable<int> page_order
		{
			get
			{
				return this._page_order;
			}
			set
			{
				if ((this._page_order != value))
				{
					this.Onpage_orderChanging(value);
					this.SendPropertyChanging();
					this._page_order = value;
					this.SendPropertyChanged("page_order");
					this.Onpage_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Page", Storage="_Pages", ThisKey="id", OtherKey="parent")]
		public EntitySet<Page> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				this._Pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Page", Storage="_Page1", ThisKey="parent", OtherKey="id", IsForeignKey=true)]
		public Page Page1
		{
			get
			{
				return this._Page1.Entity;
			}
			set
			{
				Page previousValue = this._Page1.Entity;
				if (((previousValue != value) 
							|| (this._Page1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page1.Entity = null;
						previousValue.Pages.Remove(this);
					}
					this._Page1.Entity = value;
					if ((value != null))
					{
						value.Pages.Add(this);
						this._parent = value.id;
					}
					else
					{
						this._parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Page1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Page1 = this;
		}
		
		private void detach_Pages(Page entity)
		{
			this.SendPropertyChanging();
			entity.Page1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment_type")]
	public partial class payment_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _app_id;
		
		private string _name;
		
		private string _description;
		
		private string _code;
		
		private EntitySet<Affiliate_Lodgement_Reimbursement> _Affiliate_Lodgement_Reimbursements;
		
		private EntitySet<Shop_Lodgement_Reimbursement> _Shop_Lodgement_Reimbursements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onapp_idChanging(string value);
    partial void Onapp_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public payment_type()
		{
			this._Affiliate_Lodgement_Reimbursements = new EntitySet<Affiliate_Lodgement_Reimbursement>(new Action<Affiliate_Lodgement_Reimbursement>(this.attach_Affiliate_Lodgement_Reimbursements), new Action<Affiliate_Lodgement_Reimbursement>(this.detach_Affiliate_Lodgement_Reimbursements));
			this._Shop_Lodgement_Reimbursements = new EntitySet<Shop_Lodgement_Reimbursement>(new Action<Shop_Lodgement_Reimbursement>(this.attach_Shop_Lodgement_Reimbursements), new Action<Shop_Lodgement_Reimbursement>(this.detach_Shop_Lodgement_Reimbursements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_type_Affiliate_Lodgement_Reimbursement", Storage="_Affiliate_Lodgement_Reimbursements", ThisKey="id", OtherKey="payment_type")]
		public EntitySet<Affiliate_Lodgement_Reimbursement> Affiliate_Lodgement_Reimbursements
		{
			get
			{
				return this._Affiliate_Lodgement_Reimbursements;
			}
			set
			{
				this._Affiliate_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_type_Shop_Lodgement_Reimbursement", Storage="_Shop_Lodgement_Reimbursements", ThisKey="id", OtherKey="payment_type")]
		public EntitySet<Shop_Lodgement_Reimbursement> Shop_Lodgement_Reimbursements
		{
			get
			{
				return this._Shop_Lodgement_Reimbursements;
			}
			set
			{
				this._Shop_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.payment_type1 = this;
		}
		
		private void detach_Affiliate_Lodgement_Reimbursements(Affiliate_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.payment_type1 = null;
		}
		
		private void attach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.payment_type1 = this;
		}
		
		private void detach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.payment_type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Priviledge")]
	public partial class Priviledge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private System.Nullable<int> _page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnpageChanging(System.Nullable<int> value);
    partial void OnpageChanged();
    #endregion
		
		public Priviledge()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page", DbType="Int")]
		public System.Nullable<int> page
		{
			get
			{
				return this._page;
			}
			set
			{
				if ((this._page != value))
				{
					this.OnpageChanging(value);
					this.SendPropertyChanging();
					this._page = value;
					this.SendPropertyChanged("page");
					this.OnpageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promo_Draw")]
	public partial class Promo_Draw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _from_date;
		
		private System.DateTime _to_date;
		
		private System.Nullable<int> _tickets_count;
		
		private System.Nullable<int> _valid_ticket_count;
		
		private System.Nullable<int> _cancelled_ticket_count;
		
		private string _draw_name;
		
		private EntitySet<Promo_Ticket> _Promo_Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfrom_dateChanging(System.DateTime value);
    partial void Onfrom_dateChanged();
    partial void Onto_dateChanging(System.DateTime value);
    partial void Onto_dateChanged();
    partial void Ontickets_countChanging(System.Nullable<int> value);
    partial void Ontickets_countChanged();
    partial void Onvalid_ticket_countChanging(System.Nullable<int> value);
    partial void Onvalid_ticket_countChanged();
    partial void Oncancelled_ticket_countChanging(System.Nullable<int> value);
    partial void Oncancelled_ticket_countChanged();
    partial void Ondraw_nameChanging(string value);
    partial void Ondraw_nameChanged();
    #endregion
		
		public Promo_Draw()
		{
			this._Promo_Tickets = new EntitySet<Promo_Ticket>(new Action<Promo_Ticket>(this.attach_Promo_Tickets), new Action<Promo_Ticket>(this.detach_Promo_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_date", DbType="Date NOT NULL")]
		public System.DateTime from_date
		{
			get
			{
				return this._from_date;
			}
			set
			{
				if ((this._from_date != value))
				{
					this.Onfrom_dateChanging(value);
					this.SendPropertyChanging();
					this._from_date = value;
					this.SendPropertyChanged("from_date");
					this.Onfrom_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_date", DbType="Date NOT NULL")]
		public System.DateTime to_date
		{
			get
			{
				return this._to_date;
			}
			set
			{
				if ((this._to_date != value))
				{
					this.Onto_dateChanging(value);
					this.SendPropertyChanging();
					this._to_date = value;
					this.SendPropertyChanged("to_date");
					this.Onto_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tickets_count", DbType="Int")]
		public System.Nullable<int> tickets_count
		{
			get
			{
				return this._tickets_count;
			}
			set
			{
				if ((this._tickets_count != value))
				{
					this.Ontickets_countChanging(value);
					this.SendPropertyChanging();
					this._tickets_count = value;
					this.SendPropertyChanged("tickets_count");
					this.Ontickets_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid_ticket_count", DbType="Int")]
		public System.Nullable<int> valid_ticket_count
		{
			get
			{
				return this._valid_ticket_count;
			}
			set
			{
				if ((this._valid_ticket_count != value))
				{
					this.Onvalid_ticket_countChanging(value);
					this.SendPropertyChanging();
					this._valid_ticket_count = value;
					this.SendPropertyChanged("valid_ticket_count");
					this.Onvalid_ticket_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelled_ticket_count", DbType="Int")]
		public System.Nullable<int> cancelled_ticket_count
		{
			get
			{
				return this._cancelled_ticket_count;
			}
			set
			{
				if ((this._cancelled_ticket_count != value))
				{
					this.Oncancelled_ticket_countChanging(value);
					this.SendPropertyChanging();
					this._cancelled_ticket_count = value;
					this.SendPropertyChanged("cancelled_ticket_count");
					this.Oncancelled_ticket_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_draw_name", DbType="VarChar(50)")]
		public string draw_name
		{
			get
			{
				return this._draw_name;
			}
			set
			{
				if ((this._draw_name != value))
				{
					this.Ondraw_nameChanging(value);
					this.SendPropertyChanging();
					this._draw_name = value;
					this.SendPropertyChanged("draw_name");
					this.Ondraw_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promo_Draw_Promo_Ticket", Storage="_Promo_Tickets", ThisKey="id", OtherKey="draw")]
		public EntitySet<Promo_Ticket> Promo_Tickets
		{
			get
			{
				return this._Promo_Tickets;
			}
			set
			{
				this._Promo_Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Promo_Draw = this;
		}
		
		private void detach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Promo_Draw = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promo_Ticket")]
	public partial class Promo_Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ticket_ID;
		
		private string _winning_number;
		
		private decimal _amount;
		
		private int _status;
		
		private int _draw;
		
		private int _channel;
		
		private int _user;
		
		private System.Nullable<int> _shop;
		
		private bool _promotional;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Promo_Draw> _Promo_Draw;
		
		private EntityRef<Ticket_Registration_Method> _Ticket_Registration_Method;
		
		private EntityRef<Ticket_Status> _Ticket_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onticket_IDChanging(string value);
    partial void Onticket_IDChanged();
    partial void Onwinning_numberChanging(string value);
    partial void Onwinning_numberChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OndrawChanging(int value);
    partial void OndrawChanged();
    partial void OnchannelChanging(int value);
    partial void OnchannelChanged();
    partial void OnuserChanging(int value);
    partial void OnuserChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OnpromotionalChanging(bool value);
    partial void OnpromotionalChanged();
    #endregion
		
		public Promo_Ticket()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Promo_Draw = default(EntityRef<Promo_Draw>);
			this._Ticket_Registration_Method = default(EntityRef<Ticket_Registration_Method>);
			this._Ticket_Status = default(EntityRef<Ticket_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticket_ID
		{
			get
			{
				return this._ticket_ID;
			}
			set
			{
				if ((this._ticket_ID != value))
				{
					this.Onticket_IDChanging(value);
					this.SendPropertyChanging();
					this._ticket_ID = value;
					this.SendPropertyChanged("ticket_ID");
					this.Onticket_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winning_number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string winning_number
		{
			get
			{
				return this._winning_number;
			}
			set
			{
				if ((this._winning_number != value))
				{
					this.Onwinning_numberChanging(value);
					this.SendPropertyChanging();
					this._winning_number = value;
					this.SendPropertyChanged("winning_number");
					this.Onwinning_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._Ticket_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_draw", DbType="Int NOT NULL")]
		public int draw
		{
			get
			{
				return this._draw;
			}
			set
			{
				if ((this._draw != value))
				{
					if (this._Promo_Draw.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndrawChanging(value);
					this.SendPropertyChanging();
					this._draw = value;
					this.SendPropertyChanged("draw");
					this.OndrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channel", DbType="Int NOT NULL")]
		public int channel
		{
			get
			{
				return this._channel;
			}
			set
			{
				if ((this._channel != value))
				{
					if (this._Ticket_Registration_Method.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchannelChanging(value);
					this.SendPropertyChanging();
					this._channel = value;
					this.SendPropertyChanged("channel");
					this.OnchannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="Int NOT NULL")]
		public int user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_promotional", DbType="Bit NOT NULL")]
		public bool promotional
		{
			get
			{
				return this._promotional;
			}
			set
			{
				if ((this._promotional != value))
				{
					this.OnpromotionalChanging(value);
					this.SendPropertyChanging();
					this._promotional = value;
					this.SendPropertyChanged("promotional");
					this.OnpromotionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Promo_Ticket", Storage="_Customer", ThisKey="user", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Promo_Tickets.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Promo_Tickets.Add(this);
						this._user = value.id;
					}
					else
					{
						this._user = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promo_Draw_Promo_Ticket", Storage="_Promo_Draw", ThisKey="draw", OtherKey="id", IsForeignKey=true)]
		public Promo_Draw Promo_Draw
		{
			get
			{
				return this._Promo_Draw.Entity;
			}
			set
			{
				Promo_Draw previousValue = this._Promo_Draw.Entity;
				if (((previousValue != value) 
							|| (this._Promo_Draw.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promo_Draw.Entity = null;
						previousValue.Promo_Tickets.Remove(this);
					}
					this._Promo_Draw.Entity = value;
					if ((value != null))
					{
						value.Promo_Tickets.Add(this);
						this._draw = value.id;
					}
					else
					{
						this._draw = default(int);
					}
					this.SendPropertyChanged("Promo_Draw");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Registration_Method_Promo_Ticket", Storage="_Ticket_Registration_Method", ThisKey="channel", OtherKey="id", IsForeignKey=true)]
		public Ticket_Registration_Method Ticket_Registration_Method
		{
			get
			{
				return this._Ticket_Registration_Method.Entity;
			}
			set
			{
				Ticket_Registration_Method previousValue = this._Ticket_Registration_Method.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Registration_Method.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Registration_Method.Entity = null;
						previousValue.Promo_Tickets.Remove(this);
					}
					this._Ticket_Registration_Method.Entity = value;
					if ((value != null))
					{
						value.Promo_Tickets.Add(this);
						this._channel = value.id;
					}
					else
					{
						this._channel = default(int);
					}
					this.SendPropertyChanged("Ticket_Registration_Method");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Status_Promo_Ticket", Storage="_Ticket_Status", ThisKey="status", OtherKey="id", IsForeignKey=true)]
		public Ticket_Status Ticket_Status
		{
			get
			{
				return this._Ticket_Status.Entity;
			}
			set
			{
				Ticket_Status previousValue = this._Ticket_Status.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Status.Entity = null;
						previousValue.Promo_Tickets.Remove(this);
					}
					this._Ticket_Status.Entity = value;
					if ((value != null))
					{
						value.Promo_Tickets.Add(this);
						this._status = value.id;
					}
					else
					{
						this._status = default(int);
					}
					this.SendPropertyChanged("Ticket_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Request_Response_Type")]
	public partial class Request_Response_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private string _description;
		
		private EntitySet<Requests_Response> _Requests_Responses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Request_Response_Type()
		{
			this._Requests_Responses = new EntitySet<Requests_Response>(new Action<Requests_Response>(this.attach_Requests_Responses), new Action<Requests_Response>(this.detach_Requests_Responses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Response_Type_Requests_Response", Storage="_Requests_Responses", ThisKey="id", OtherKey="request_response_type")]
		public EntitySet<Requests_Response> Requests_Responses
		{
			get
			{
				return this._Requests_Responses;
			}
			set
			{
				this._Requests_Responses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Requests_Responses(Requests_Response entity)
		{
			this.SendPropertyChanging();
			entity.Request_Response_Type1 = this;
		}
		
		private void detach_Requests_Responses(Requests_Response entity)
		{
			this.SendPropertyChanging();
			entity.Request_Response_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requests_Response")]
	public partial class Requests_Response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _request_response_type;
		
		private string _service_response;
		
		private short _type;
		
		private System.DateTime _date;
		
		private string _invoker;
		
		private string _ip;
		
		private string _request;
		
		private EntitySet<Ticket_Service_Response> _Ticket_Service_Responses;
		
		private EntityRef<Request_Response_Type> _Request_Response_Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrequest_response_typeChanging(int value);
    partial void Onrequest_response_typeChanged();
    partial void Onservice_responseChanging(string value);
    partial void Onservice_responseChanged();
    partial void OntypeChanging(short value);
    partial void OntypeChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OninvokerChanging(string value);
    partial void OninvokerChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnrequestChanging(string value);
    partial void OnrequestChanged();
    #endregion
		
		public Requests_Response()
		{
			this._Ticket_Service_Responses = new EntitySet<Ticket_Service_Response>(new Action<Ticket_Service_Response>(this.attach_Ticket_Service_Responses), new Action<Ticket_Service_Response>(this.detach_Ticket_Service_Responses));
			this._Request_Response_Type1 = default(EntityRef<Request_Response_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_response_type", DbType="Int NOT NULL")]
		public int request_response_type
		{
			get
			{
				return this._request_response_type;
			}
			set
			{
				if ((this._request_response_type != value))
				{
					if (this._Request_Response_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrequest_response_typeChanging(value);
					this.SendPropertyChanging();
					this._request_response_type = value;
					this.SendPropertyChanged("request_response_type");
					this.Onrequest_response_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_response", DbType="VarChar(50)")]
		public string service_response
		{
			get
			{
				return this._service_response;
			}
			set
			{
				if ((this._service_response != value))
				{
					this.Onservice_responseChanging(value);
					this.SendPropertyChanging();
					this._service_response = value;
					this.SendPropertyChanged("service_response");
					this.Onservice_responseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="SmallInt NOT NULL")]
		public short type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoker", DbType="VarChar(100)")]
		public string invoker
		{
			get
			{
				return this._invoker;
			}
			set
			{
				if ((this._invoker != value))
				{
					this.OninvokerChanging(value);
					this.SendPropertyChanging();
					this._invoker = value;
					this.SendPropertyChanged("invoker");
					this.OninvokerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string request
		{
			get
			{
				return this._request;
			}
			set
			{
				if ((this._request != value))
				{
					this.OnrequestChanging(value);
					this.SendPropertyChanging();
					this._request = value;
					this.SendPropertyChanged("request");
					this.OnrequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requests_Response_Ticket_Service_Response", Storage="_Ticket_Service_Responses", ThisKey="id", OtherKey="requests_response")]
		public EntitySet<Ticket_Service_Response> Ticket_Service_Responses
		{
			get
			{
				return this._Ticket_Service_Responses;
			}
			set
			{
				this._Ticket_Service_Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_Response_Type_Requests_Response", Storage="_Request_Response_Type1", ThisKey="request_response_type", OtherKey="id", IsForeignKey=true)]
		public Request_Response_Type Request_Response_Type1
		{
			get
			{
				return this._Request_Response_Type1.Entity;
			}
			set
			{
				Request_Response_Type previousValue = this._Request_Response_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Request_Response_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request_Response_Type1.Entity = null;
						previousValue.Requests_Responses.Remove(this);
					}
					this._Request_Response_Type1.Entity = value;
					if ((value != null))
					{
						value.Requests_Responses.Add(this);
						this._request_response_type = value.id;
					}
					else
					{
						this._request_response_type = default(int);
					}
					this.SendPropertyChanged("Request_Response_Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Service_Responses(Ticket_Service_Response entity)
		{
			this.SendPropertyChanging();
			entity.Requests_Response1 = this;
		}
		
		private void detach_Ticket_Service_Responses(Ticket_Service_Response entity)
		{
			this.SendPropertyChanging();
			entity.Requests_Response1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service_Error")]
	public partial class Service_Error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private string _description;
		
		private string _provider;
		
		private EntitySet<Ticket_Service_Response> _Ticket_Service_Responses;
		
		private EntitySet<web_pay_request_response> _web_pay_request_responses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnproviderChanging(string value);
    partial void OnproviderChanged();
    #endregion
		
		public Service_Error()
		{
			this._Ticket_Service_Responses = new EntitySet<Ticket_Service_Response>(new Action<Ticket_Service_Response>(this.attach_Ticket_Service_Responses), new Action<Ticket_Service_Response>(this.detach_Ticket_Service_Responses));
			this._web_pay_request_responses = new EntitySet<web_pay_request_response>(new Action<web_pay_request_response>(this.attach_web_pay_request_responses), new Action<web_pay_request_response>(this.detach_web_pay_request_responses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provider", DbType="VarChar(50)")]
		public string provider
		{
			get
			{
				return this._provider;
			}
			set
			{
				if ((this._provider != value))
				{
					this.OnproviderChanging(value);
					this.SendPropertyChanging();
					this._provider = value;
					this.SendPropertyChanged("provider");
					this.OnproviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Error_Ticket_Service_Response", Storage="_Ticket_Service_Responses", ThisKey="code", OtherKey="returncode")]
		public EntitySet<Ticket_Service_Response> Ticket_Service_Responses
		{
			get
			{
				return this._Ticket_Service_Responses;
			}
			set
			{
				this._Ticket_Service_Responses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Error_web_pay_request_response", Storage="_web_pay_request_responses", ThisKey="id", OtherKey="service_response")]
		public EntitySet<web_pay_request_response> web_pay_request_responses
		{
			get
			{
				return this._web_pay_request_responses;
			}
			set
			{
				this._web_pay_request_responses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Service_Responses(Ticket_Service_Response entity)
		{
			this.SendPropertyChanging();
			entity.Service_Error = this;
		}
		
		private void detach_Ticket_Service_Responses(Ticket_Service_Response entity)
		{
			this.SendPropertyChanging();
			entity.Service_Error = null;
		}
		
		private void attach_web_pay_request_responses(web_pay_request_response entity)
		{
			this.SendPropertyChanging();
			entity.Service_Error = this;
		}
		
		private void detach_web_pay_request_responses(web_pay_request_response entity)
		{
			this.SendPropertyChanging();
			entity.Service_Error = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop")]
	public partial class Shop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _shop_code;
		
		private string _affiliate_shop_id;
		
		private string _shop_name;
		
		private System.Nullable<int> _shop_type;
		
		private string _shop_ownership;
		
		private System.Nullable<int> _affiliate;
		
		private System.Nullable<int> _state;
		
		private System.Nullable<int> _local_govt;
		
		private System.Nullable<decimal> _credit_limit;
		
		private System.Nullable<System.DateTime> _join_date;
		
		private System.Nullable<bool> _isactive;
		
		private System.Nullable<decimal> _commission;
		
		private string _address;
		
		private string _additional_text;
		
		private System.Nullable<decimal> _min_stake;
		
		private System.Nullable<decimal> _max_stake;
		
		private System.Nullable<decimal> _max_payout;
		
		private string _account_name;
		
		private string _account_number;
		
		private System.Nullable<int> _bank;
		
		private System.Nullable<int> _branch;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<Shop_Balance_Sheet> _Shop_Balance_Sheet;
		
		private EntitySet<Shop_Credit> _Shop_Credits;
		
		private EntitySet<Shop_Daily_Game_Sale> _Shop_Daily_Game_Sales;
		
		private EntitySet<Shop_Lodgement_Reimbursement> _Shop_Lodgement_Reimbursements;
		
		private EntityRef<Shop_Setting> _Shop_Setting;
		
		private EntitySet<Shop_Transaction> _Shop_Transactions;
		
		private EntityRef<Shop_Wallet> _Shop_Wallet;
		
		private EntityRef<Affiliate> _Affiliate1;
		
		private EntityRef<Branch> _Branch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onshop_codeChanging(string value);
    partial void Onshop_codeChanged();
    partial void Onaffiliate_shop_idChanging(string value);
    partial void Onaffiliate_shop_idChanged();
    partial void Onshop_nameChanging(string value);
    partial void Onshop_nameChanged();
    partial void Onshop_typeChanging(System.Nullable<int> value);
    partial void Onshop_typeChanged();
    partial void Onshop_ownershipChanging(string value);
    partial void Onshop_ownershipChanged();
    partial void OnaffiliateChanging(System.Nullable<int> value);
    partial void OnaffiliateChanged();
    partial void OnstateChanging(System.Nullable<int> value);
    partial void OnstateChanged();
    partial void Onlocal_govtChanging(System.Nullable<int> value);
    partial void Onlocal_govtChanged();
    partial void Oncredit_limitChanging(System.Nullable<decimal> value);
    partial void Oncredit_limitChanged();
    partial void Onjoin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onjoin_dateChanged();
    partial void OnisactiveChanging(System.Nullable<bool> value);
    partial void OnisactiveChanged();
    partial void OncommissionChanging(System.Nullable<decimal> value);
    partial void OncommissionChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onadditional_textChanging(string value);
    partial void Onadditional_textChanged();
    partial void Onmin_stakeChanging(System.Nullable<decimal> value);
    partial void Onmin_stakeChanged();
    partial void Onmax_stakeChanging(System.Nullable<decimal> value);
    partial void Onmax_stakeChanged();
    partial void Onmax_payoutChanging(System.Nullable<decimal> value);
    partial void Onmax_payoutChanged();
    partial void Onaccount_nameChanging(string value);
    partial void Onaccount_nameChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void OnbankChanging(System.Nullable<int> value);
    partial void OnbankChanged();
    partial void OnbranchChanging(System.Nullable<int> value);
    partial void OnbranchChanged();
    #endregion
		
		public Shop()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Shop_Balance_Sheet = default(EntityRef<Shop_Balance_Sheet>);
			this._Shop_Credits = new EntitySet<Shop_Credit>(new Action<Shop_Credit>(this.attach_Shop_Credits), new Action<Shop_Credit>(this.detach_Shop_Credits));
			this._Shop_Daily_Game_Sales = new EntitySet<Shop_Daily_Game_Sale>(new Action<Shop_Daily_Game_Sale>(this.attach_Shop_Daily_Game_Sales), new Action<Shop_Daily_Game_Sale>(this.detach_Shop_Daily_Game_Sales));
			this._Shop_Lodgement_Reimbursements = new EntitySet<Shop_Lodgement_Reimbursement>(new Action<Shop_Lodgement_Reimbursement>(this.attach_Shop_Lodgement_Reimbursements), new Action<Shop_Lodgement_Reimbursement>(this.detach_Shop_Lodgement_Reimbursements));
			this._Shop_Setting = default(EntityRef<Shop_Setting>);
			this._Shop_Transactions = new EntitySet<Shop_Transaction>(new Action<Shop_Transaction>(this.attach_Shop_Transactions), new Action<Shop_Transaction>(this.detach_Shop_Transactions));
			this._Shop_Wallet = default(EntityRef<Shop_Wallet>);
			this._Affiliate1 = default(EntityRef<Affiliate>);
			this._Branch1 = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string shop_code
		{
			get
			{
				return this._shop_code;
			}
			set
			{
				if ((this._shop_code != value))
				{
					this.Onshop_codeChanging(value);
					this.SendPropertyChanging();
					this._shop_code = value;
					this.SendPropertyChanged("shop_code");
					this.Onshop_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affiliate_shop_id", DbType="VarChar(50)")]
		public string affiliate_shop_id
		{
			get
			{
				return this._affiliate_shop_id;
			}
			set
			{
				if ((this._affiliate_shop_id != value))
				{
					this.Onaffiliate_shop_idChanging(value);
					this.SendPropertyChanging();
					this._affiliate_shop_id = value;
					this.SendPropertyChanged("affiliate_shop_id");
					this.Onaffiliate_shop_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_name", DbType="VarChar(50)")]
		public string shop_name
		{
			get
			{
				return this._shop_name;
			}
			set
			{
				if ((this._shop_name != value))
				{
					this.Onshop_nameChanging(value);
					this.SendPropertyChanging();
					this._shop_name = value;
					this.SendPropertyChanged("shop_name");
					this.Onshop_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_type", DbType="Int")]
		public System.Nullable<int> shop_type
		{
			get
			{
				return this._shop_type;
			}
			set
			{
				if ((this._shop_type != value))
				{
					this.Onshop_typeChanging(value);
					this.SendPropertyChanging();
					this._shop_type = value;
					this.SendPropertyChanged("shop_type");
					this.Onshop_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_ownership", DbType="VarChar(20)")]
		public string shop_ownership
		{
			get
			{
				return this._shop_ownership;
			}
			set
			{
				if ((this._shop_ownership != value))
				{
					this.Onshop_ownershipChanging(value);
					this.SendPropertyChanging();
					this._shop_ownership = value;
					this.SendPropertyChanged("shop_ownership");
					this.Onshop_ownershipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affiliate", DbType="Int")]
		public System.Nullable<int> affiliate
		{
			get
			{
				return this._affiliate;
			}
			set
			{
				if ((this._affiliate != value))
				{
					if (this._Affiliate1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaffiliateChanging(value);
					this.SendPropertyChanging();
					this._affiliate = value;
					this.SendPropertyChanged("affiliate");
					this.OnaffiliateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_local_govt", DbType="Int")]
		public System.Nullable<int> local_govt
		{
			get
			{
				return this._local_govt;
			}
			set
			{
				if ((this._local_govt != value))
				{
					this.Onlocal_govtChanging(value);
					this.SendPropertyChanging();
					this._local_govt = value;
					this.SendPropertyChanged("local_govt");
					this.Onlocal_govtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_limit", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> credit_limit
		{
			get
			{
				return this._credit_limit;
			}
			set
			{
				if ((this._credit_limit != value))
				{
					this.Oncredit_limitChanging(value);
					this.SendPropertyChanging();
					this._credit_limit = value;
					this.SendPropertyChanged("credit_limit");
					this.Oncredit_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_date", DbType="Date")]
		public System.Nullable<System.DateTime> join_date
		{
			get
			{
				return this._join_date;
			}
			set
			{
				if ((this._join_date != value))
				{
					this.Onjoin_dateChanging(value);
					this.SendPropertyChanging();
					this._join_date = value;
					this.SendPropertyChanged("join_date");
					this.Onjoin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit")]
		public System.Nullable<bool> isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commission", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> commission
		{
			get
			{
				return this._commission;
			}
			set
			{
				if ((this._commission != value))
				{
					this.OncommissionChanging(value);
					this.SendPropertyChanging();
					this._commission = value;
					this.SendPropertyChanged("commission");
					this.OncommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_additional_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string additional_text
		{
			get
			{
				return this._additional_text;
			}
			set
			{
				if ((this._additional_text != value))
				{
					this.Onadditional_textChanging(value);
					this.SendPropertyChanging();
					this._additional_text = value;
					this.SendPropertyChanged("additional_text");
					this.Onadditional_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> min_stake
		{
			get
			{
				return this._min_stake;
			}
			set
			{
				if ((this._min_stake != value))
				{
					this.Onmin_stakeChanging(value);
					this.SendPropertyChanging();
					this._min_stake = value;
					this.SendPropertyChanged("min_stake");
					this.Onmin_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_stake
		{
			get
			{
				return this._max_stake;
			}
			set
			{
				if ((this._max_stake != value))
				{
					this.Onmax_stakeChanging(value);
					this.SendPropertyChanging();
					this._max_stake = value;
					this.SendPropertyChanged("max_stake");
					this.Onmax_stakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_payout", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> max_payout
		{
			get
			{
				return this._max_payout;
			}
			set
			{
				if ((this._max_payout != value))
				{
					this.Onmax_payoutChanging(value);
					this.SendPropertyChanging();
					this._max_payout = value;
					this.SendPropertyChanged("max_payout");
					this.Onmax_payoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_name", DbType="VarChar(100)")]
		public string account_name
		{
			get
			{
				return this._account_name;
			}
			set
			{
				if ((this._account_name != value))
				{
					this.Onaccount_nameChanging(value);
					this.SendPropertyChanging();
					this._account_name = value;
					this.SendPropertyChanged("account_name");
					this.Onaccount_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(18)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Int")]
		public System.Nullable<int> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="Int")]
		public System.Nullable<int> branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					if (this._Branch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Customer", Storage="_Customers", ThisKey="id", OtherKey="shop")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Balance_Sheet", Storage="_Shop_Balance_Sheet", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Shop_Balance_Sheet Shop_Balance_Sheet
		{
			get
			{
				return this._Shop_Balance_Sheet.Entity;
			}
			set
			{
				Shop_Balance_Sheet previousValue = this._Shop_Balance_Sheet.Entity;
				if (((previousValue != value) 
							|| (this._Shop_Balance_Sheet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop_Balance_Sheet.Entity = null;
						previousValue.Shop = null;
					}
					this._Shop_Balance_Sheet.Entity = value;
					if ((value != null))
					{
						value.Shop = this;
					}
					this.SendPropertyChanged("Shop_Balance_Sheet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Credit", Storage="_Shop_Credits", ThisKey="id", OtherKey="shop")]
		public EntitySet<Shop_Credit> Shop_Credits
		{
			get
			{
				return this._Shop_Credits;
			}
			set
			{
				this._Shop_Credits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Daily_Game_Sale", Storage="_Shop_Daily_Game_Sales", ThisKey="id", OtherKey="shop")]
		public EntitySet<Shop_Daily_Game_Sale> Shop_Daily_Game_Sales
		{
			get
			{
				return this._Shop_Daily_Game_Sales;
			}
			set
			{
				this._Shop_Daily_Game_Sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Lodgement_Reimbursement", Storage="_Shop_Lodgement_Reimbursements", ThisKey="id", OtherKey="Shop")]
		public EntitySet<Shop_Lodgement_Reimbursement> Shop_Lodgement_Reimbursements
		{
			get
			{
				return this._Shop_Lodgement_Reimbursements;
			}
			set
			{
				this._Shop_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Setting", Storage="_Shop_Setting", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Shop_Setting Shop_Setting
		{
			get
			{
				return this._Shop_Setting.Entity;
			}
			set
			{
				Shop_Setting previousValue = this._Shop_Setting.Entity;
				if (((previousValue != value) 
							|| (this._Shop_Setting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop_Setting.Entity = null;
						previousValue.Shop = null;
					}
					this._Shop_Setting.Entity = value;
					if ((value != null))
					{
						value.Shop = this;
					}
					this.SendPropertyChanged("Shop_Setting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Transaction", Storage="_Shop_Transactions", ThisKey="id", OtherKey="shop")]
		public EntitySet<Shop_Transaction> Shop_Transactions
		{
			get
			{
				return this._Shop_Transactions;
			}
			set
			{
				this._Shop_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Wallet", Storage="_Shop_Wallet", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Shop_Wallet Shop_Wallet
		{
			get
			{
				return this._Shop_Wallet.Entity;
			}
			set
			{
				Shop_Wallet previousValue = this._Shop_Wallet.Entity;
				if (((previousValue != value) 
							|| (this._Shop_Wallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop_Wallet.Entity = null;
						previousValue.Shop = null;
					}
					this._Shop_Wallet.Entity = value;
					if ((value != null))
					{
						value.Shop = this;
					}
					this.SendPropertyChanged("Shop_Wallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Affiliate_Shop", Storage="_Affiliate1", ThisKey="affiliate", OtherKey="id", IsForeignKey=true)]
		public Affiliate Affiliate1
		{
			get
			{
				return this._Affiliate1.Entity;
			}
			set
			{
				Affiliate previousValue = this._Affiliate1.Entity;
				if (((previousValue != value) 
							|| (this._Affiliate1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Affiliate1.Entity = null;
						previousValue.Shops.Remove(this);
					}
					this._Affiliate1.Entity = value;
					if ((value != null))
					{
						value.Shops.Add(this);
						this._affiliate = value.id;
					}
					else
					{
						this._affiliate = default(Nullable<int>);
					}
					this.SendPropertyChanged("Affiliate1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Shop", Storage="_Branch1", ThisKey="branch", OtherKey="id", IsForeignKey=true)]
		public Branch Branch1
		{
			get
			{
				return this._Branch1.Entity;
			}
			set
			{
				Branch previousValue = this._Branch1.Entity;
				if (((previousValue != value) 
							|| (this._Branch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch1.Entity = null;
						previousValue.Shops.Remove(this);
					}
					this._Branch1.Entity = value;
					if ((value != null))
					{
						value.Shops.Add(this);
						this._branch = value.id;
					}
					else
					{
						this._branch = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = null;
		}
		
		private void attach_Shop_Credits(Shop_Credit entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = this;
		}
		
		private void detach_Shop_Credits(Shop_Credit entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = null;
		}
		
		private void attach_Shop_Daily_Game_Sales(Shop_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = this;
		}
		
		private void detach_Shop_Daily_Game_Sales(Shop_Daily_Game_Sale entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = null;
		}
		
		private void attach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = this;
		}
		
		private void detach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = null;
		}
		
		private void attach_Shop_Transactions(Shop_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = this;
		}
		
		private void detach_Shop_Transactions(Shop_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Shop1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Balance_Sheet")]
	public partial class Shop_Balance_Sheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _sales_balance;
		
		private System.Nullable<decimal> _credit_balance;
		
		private System.Nullable<decimal> _online_credit;
		
		private System.Nullable<decimal> _netbalance;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsales_balanceChanging(System.Nullable<decimal> value);
    partial void Onsales_balanceChanged();
    partial void Oncredit_balanceChanging(System.Nullable<decimal> value);
    partial void Oncredit_balanceChanged();
    partial void Ononline_creditChanging(System.Nullable<decimal> value);
    partial void Ononline_creditChanged();
    partial void OnnetbalanceChanging(System.Nullable<decimal> value);
    partial void OnnetbalanceChanged();
    #endregion
		
		public Shop_Balance_Sheet()
		{
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sales_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> sales_balance
		{
			get
			{
				return this._sales_balance;
			}
			set
			{
				if ((this._sales_balance != value))
				{
					this.Onsales_balanceChanging(value);
					this.SendPropertyChanging();
					this._sales_balance = value;
					this.SendPropertyChanged("sales_balance");
					this.Onsales_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> credit_balance
		{
			get
			{
				return this._credit_balance;
			}
			set
			{
				if ((this._credit_balance != value))
				{
					this.Oncredit_balanceChanging(value);
					this.SendPropertyChanging();
					this._credit_balance = value;
					this.SendPropertyChanged("credit_balance");
					this.Oncredit_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_online_credit", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> online_credit
		{
			get
			{
				return this._online_credit;
			}
			set
			{
				if ((this._online_credit != value))
				{
					this.Ononline_creditChanging(value);
					this.SendPropertyChanging();
					this._online_credit = value;
					this.SendPropertyChanged("online_credit");
					this.Ononline_creditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netbalance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> netbalance
		{
			get
			{
				return this._netbalance;
			}
			set
			{
				if ((this._netbalance != value))
				{
					this.OnnetbalanceChanging(value);
					this.SendPropertyChanging();
					this._netbalance = value;
					this.SendPropertyChanged("netbalance");
					this.OnnetbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Balance_Sheet", Storage="_Shop", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Shop_Balance_Sheet = null;
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Shop_Balance_Sheet = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Credit")]
	public partial class Shop_Credit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _shop;
		
		private System.Nullable<int> _transaction;
		
		private System.Nullable<decimal> _balance_before;
		
		private System.Nullable<decimal> _balance_after;
		
		private System.Nullable<int> _credit_type;
		
		private EntityRef<Shop> _Shop1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OntransactionChanging(System.Nullable<int> value);
    partial void OntransactionChanged();
    partial void Onbalance_beforeChanging(System.Nullable<decimal> value);
    partial void Onbalance_beforeChanged();
    partial void Onbalance_afterChanging(System.Nullable<decimal> value);
    partial void Onbalance_afterChanged();
    partial void Oncredit_typeChanging(System.Nullable<int> value);
    partial void Oncredit_typeChanged();
    #endregion
		
		public Shop_Credit()
		{
			this._Shop1 = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					if (this._Shop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[transaction]", Storage="_transaction", DbType="Int")]
		public System.Nullable<int> transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				if ((this._transaction != value))
				{
					this.OntransactionChanging(value);
					this.SendPropertyChanging();
					this._transaction = value;
					this.SendPropertyChanged("transaction");
					this.OntransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_before", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance_before
		{
			get
			{
				return this._balance_before;
			}
			set
			{
				if ((this._balance_before != value))
				{
					this.Onbalance_beforeChanging(value);
					this.SendPropertyChanging();
					this._balance_before = value;
					this.SendPropertyChanged("balance_before");
					this.Onbalance_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_after", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance_after
		{
			get
			{
				return this._balance_after;
			}
			set
			{
				if ((this._balance_after != value))
				{
					this.Onbalance_afterChanging(value);
					this.SendPropertyChanging();
					this._balance_after = value;
					this.SendPropertyChanged("balance_after");
					this.Onbalance_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credit_type", DbType="Int")]
		public System.Nullable<int> credit_type
		{
			get
			{
				return this._credit_type;
			}
			set
			{
				if ((this._credit_type != value))
				{
					this.Oncredit_typeChanging(value);
					this.SendPropertyChanging();
					this._credit_type = value;
					this.SendPropertyChanged("credit_type");
					this.Oncredit_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Credit", Storage="_Shop1", ThisKey="shop", OtherKey="id", IsForeignKey=true)]
		public Shop Shop1
		{
			get
			{
				return this._Shop1.Entity;
			}
			set
			{
				Shop previousValue = this._Shop1.Entity;
				if (((previousValue != value) 
							|| (this._Shop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop1.Entity = null;
						previousValue.Shop_Credits.Remove(this);
					}
					this._Shop1.Entity = value;
					if ((value != null))
					{
						value.Shop_Credits.Add(this);
						this._shop = value.id;
					}
					else
					{
						this._shop = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Daily_Game_Sales")]
	public partial class Shop_Daily_Game_Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _shop;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<decimal> _stake;
		
		private System.Nullable<decimal> _cancelled;
		
		private System.Nullable<decimal> _sales;
		
		private System.Nullable<decimal> _winnings;
		
		private System.Nullable<decimal> _balance;
		
		private System.Nullable<System.DateTime> _date_posted;
		
		private System.Nullable<decimal> _multicomm;
		
		private System.Nullable<decimal> _singlecomm;
		
		private System.Nullable<decimal> _commision;
		
		private System.Nullable<decimal> _net_balance;
		
		private System.Nullable<int> _posted_by;
		
		private System.Nullable<bool> _isverified;
		
		private System.Nullable<bool> _islocked;
		
		private System.Nullable<int> _daily_game;
		
		private EntityRef<Daily_Game> _Daily_Game1;
		
		private EntityRef<Shop> _Shop1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnstakeChanging(System.Nullable<decimal> value);
    partial void OnstakeChanged();
    partial void OncancelledChanging(System.Nullable<decimal> value);
    partial void OncancelledChanged();
    partial void OnsalesChanging(System.Nullable<decimal> value);
    partial void OnsalesChanged();
    partial void OnwinningsChanging(System.Nullable<decimal> value);
    partial void OnwinningsChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    partial void Ondate_postedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_postedChanged();
    partial void OnmulticommChanging(System.Nullable<decimal> value);
    partial void OnmulticommChanged();
    partial void OnsinglecommChanging(System.Nullable<decimal> value);
    partial void OnsinglecommChanged();
    partial void OncommisionChanging(System.Nullable<decimal> value);
    partial void OncommisionChanged();
    partial void Onnet_balanceChanging(System.Nullable<decimal> value);
    partial void Onnet_balanceChanged();
    partial void Onposted_byChanging(System.Nullable<int> value);
    partial void Onposted_byChanged();
    partial void OnisverifiedChanging(System.Nullable<bool> value);
    partial void OnisverifiedChanged();
    partial void OnislockedChanging(System.Nullable<bool> value);
    partial void OnislockedChanged();
    partial void Ondaily_gameChanging(System.Nullable<int> value);
    partial void Ondaily_gameChanged();
    #endregion
		
		public Shop_Daily_Game_Sale()
		{
			this._Daily_Game1 = default(EntityRef<Daily_Game>);
			this._Shop1 = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					if (this._Shop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> stake
		{
			get
			{
				return this._stake;
			}
			set
			{
				if ((this._stake != value))
				{
					this.OnstakeChanging(value);
					this.SendPropertyChanging();
					this._stake = value;
					this.SendPropertyChanged("stake");
					this.OnstakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelled", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> cancelled
		{
			get
			{
				return this._cancelled;
			}
			set
			{
				if ((this._cancelled != value))
				{
					this.OncancelledChanging(value);
					this.SendPropertyChanging();
					this._cancelled = value;
					this.SendPropertyChanged("cancelled");
					this.OncancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sales", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				if ((this._sales != value))
				{
					this.OnsalesChanging(value);
					this.SendPropertyChanging();
					this._sales = value;
					this.SendPropertyChanged("sales");
					this.OnsalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winnings", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> winnings
		{
			get
			{
				return this._winnings;
			}
			set
			{
				if ((this._winnings != value))
				{
					this.OnwinningsChanging(value);
					this.SendPropertyChanging();
					this._winnings = value;
					this.SendPropertyChanged("winnings");
					this.OnwinningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_posted", DbType="Date")]
		public System.Nullable<System.DateTime> date_posted
		{
			get
			{
				return this._date_posted;
			}
			set
			{
				if ((this._date_posted != value))
				{
					this.Ondate_postedChanging(value);
					this.SendPropertyChanging();
					this._date_posted = value;
					this.SendPropertyChanged("date_posted");
					this.Ondate_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_multicomm", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> multicomm
		{
			get
			{
				return this._multicomm;
			}
			set
			{
				if ((this._multicomm != value))
				{
					this.OnmulticommChanging(value);
					this.SendPropertyChanging();
					this._multicomm = value;
					this.SendPropertyChanged("multicomm");
					this.OnmulticommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singlecomm", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> singlecomm
		{
			get
			{
				return this._singlecomm;
			}
			set
			{
				if ((this._singlecomm != value))
				{
					this.OnsinglecommChanging(value);
					this.SendPropertyChanging();
					this._singlecomm = value;
					this.SendPropertyChanged("singlecomm");
					this.OnsinglecommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commision", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> commision
		{
			get
			{
				return this._commision;
			}
			set
			{
				if ((this._commision != value))
				{
					this.OncommisionChanging(value);
					this.SendPropertyChanging();
					this._commision = value;
					this.SendPropertyChanged("commision");
					this.OncommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> net_balance
		{
			get
			{
				return this._net_balance;
			}
			set
			{
				if ((this._net_balance != value))
				{
					this.Onnet_balanceChanging(value);
					this.SendPropertyChanging();
					this._net_balance = value;
					this.SendPropertyChanged("net_balance");
					this.Onnet_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int")]
		public System.Nullable<int> posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isverified", DbType="Bit")]
		public System.Nullable<bool> isverified
		{
			get
			{
				return this._isverified;
			}
			set
			{
				if ((this._isverified != value))
				{
					this.OnisverifiedChanging(value);
					this.SendPropertyChanging();
					this._isverified = value;
					this.SendPropertyChanged("isverified");
					this.OnisverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_islocked", DbType="Bit")]
		public System.Nullable<bool> islocked
		{
			get
			{
				return this._islocked;
			}
			set
			{
				if ((this._islocked != value))
				{
					this.OnislockedChanging(value);
					this.SendPropertyChanging();
					this._islocked = value;
					this.SendPropertyChanged("islocked");
					this.OnislockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_game", DbType="Int")]
		public System.Nullable<int> daily_game
		{
			get
			{
				return this._daily_game;
			}
			set
			{
				if ((this._daily_game != value))
				{
					if (this._Daily_Game1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_gameChanging(value);
					this.SendPropertyChanging();
					this._daily_game = value;
					this.SendPropertyChanged("daily_game");
					this.Ondaily_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Shop_Daily_Game_Sale", Storage="_Daily_Game1", ThisKey="daily_game", OtherKey="id", IsForeignKey=true)]
		public Daily_Game Daily_Game1
		{
			get
			{
				return this._Daily_Game1.Entity;
			}
			set
			{
				Daily_Game previousValue = this._Daily_Game1.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Game1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Game1.Entity = null;
						previousValue.Shop_Daily_Game_Sales.Remove(this);
					}
					this._Daily_Game1.Entity = value;
					if ((value != null))
					{
						value.Shop_Daily_Game_Sales.Add(this);
						this._daily_game = value.id;
					}
					else
					{
						this._daily_game = default(Nullable<int>);
					}
					this.SendPropertyChanged("Daily_Game1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Daily_Game_Sale", Storage="_Shop1", ThisKey="shop", OtherKey="id", IsForeignKey=true)]
		public Shop Shop1
		{
			get
			{
				return this._Shop1.Entity;
			}
			set
			{
				Shop previousValue = this._Shop1.Entity;
				if (((previousValue != value) 
							|| (this._Shop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop1.Entity = null;
						previousValue.Shop_Daily_Game_Sales.Remove(this);
					}
					this._Shop1.Entity = value;
					if ((value != null))
					{
						value.Shop_Daily_Game_Sales.Add(this);
						this._shop = value.id;
					}
					else
					{
						this._shop = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Daily_Sales")]
	public partial class Shop_Daily_Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _shop;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<decimal> _stake;
		
		private System.Nullable<decimal> _cancelled;
		
		private System.Nullable<decimal> _sales;
		
		private System.Nullable<decimal> _winnings;
		
		private System.Nullable<decimal> _balance;
		
		private System.Nullable<System.DateTime> _date_posted;
		
		private System.Nullable<decimal> _multicomm;
		
		private System.Nullable<decimal> _singlecomm;
		
		private System.Nullable<decimal> _commision;
		
		private System.Nullable<decimal> _net_balance;
		
		private System.Nullable<int> _posted_by;
		
		private System.Nullable<bool> _isverified;
		
		private System.Nullable<bool> _islocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnstakeChanging(System.Nullable<decimal> value);
    partial void OnstakeChanged();
    partial void OncancelledChanging(System.Nullable<decimal> value);
    partial void OncancelledChanged();
    partial void OnsalesChanging(System.Nullable<decimal> value);
    partial void OnsalesChanged();
    partial void OnwinningsChanging(System.Nullable<decimal> value);
    partial void OnwinningsChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    partial void Ondate_postedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_postedChanged();
    partial void OnmulticommChanging(System.Nullable<decimal> value);
    partial void OnmulticommChanged();
    partial void OnsinglecommChanging(System.Nullable<decimal> value);
    partial void OnsinglecommChanged();
    partial void OncommisionChanging(System.Nullable<decimal> value);
    partial void OncommisionChanged();
    partial void Onnet_balanceChanging(System.Nullable<decimal> value);
    partial void Onnet_balanceChanged();
    partial void Onposted_byChanging(System.Nullable<int> value);
    partial void Onposted_byChanged();
    partial void OnisverifiedChanging(System.Nullable<bool> value);
    partial void OnisverifiedChanged();
    partial void OnislockedChanging(System.Nullable<bool> value);
    partial void OnislockedChanged();
    #endregion
		
		public Shop_Daily_Sale()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> stake
		{
			get
			{
				return this._stake;
			}
			set
			{
				if ((this._stake != value))
				{
					this.OnstakeChanging(value);
					this.SendPropertyChanging();
					this._stake = value;
					this.SendPropertyChanged("stake");
					this.OnstakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelled", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> cancelled
		{
			get
			{
				return this._cancelled;
			}
			set
			{
				if ((this._cancelled != value))
				{
					this.OncancelledChanging(value);
					this.SendPropertyChanging();
					this._cancelled = value;
					this.SendPropertyChanged("cancelled");
					this.OncancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sales", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				if ((this._sales != value))
				{
					this.OnsalesChanging(value);
					this.SendPropertyChanging();
					this._sales = value;
					this.SendPropertyChanged("sales");
					this.OnsalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winnings", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> winnings
		{
			get
			{
				return this._winnings;
			}
			set
			{
				if ((this._winnings != value))
				{
					this.OnwinningsChanging(value);
					this.SendPropertyChanging();
					this._winnings = value;
					this.SendPropertyChanged("winnings");
					this.OnwinningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_posted", DbType="Date")]
		public System.Nullable<System.DateTime> date_posted
		{
			get
			{
				return this._date_posted;
			}
			set
			{
				if ((this._date_posted != value))
				{
					this.Ondate_postedChanging(value);
					this.SendPropertyChanging();
					this._date_posted = value;
					this.SendPropertyChanged("date_posted");
					this.Ondate_postedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_multicomm", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> multicomm
		{
			get
			{
				return this._multicomm;
			}
			set
			{
				if ((this._multicomm != value))
				{
					this.OnmulticommChanging(value);
					this.SendPropertyChanging();
					this._multicomm = value;
					this.SendPropertyChanged("multicomm");
					this.OnmulticommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_singlecomm", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> singlecomm
		{
			get
			{
				return this._singlecomm;
			}
			set
			{
				if ((this._singlecomm != value))
				{
					this.OnsinglecommChanging(value);
					this.SendPropertyChanging();
					this._singlecomm = value;
					this.SendPropertyChanged("singlecomm");
					this.OnsinglecommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commision", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> commision
		{
			get
			{
				return this._commision;
			}
			set
			{
				if ((this._commision != value))
				{
					this.OncommisionChanging(value);
					this.SendPropertyChanging();
					this._commision = value;
					this.SendPropertyChanged("commision");
					this.OncommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net_balance", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> net_balance
		{
			get
			{
				return this._net_balance;
			}
			set
			{
				if ((this._net_balance != value))
				{
					this.Onnet_balanceChanging(value);
					this.SendPropertyChanging();
					this._net_balance = value;
					this.SendPropertyChanged("net_balance");
					this.Onnet_balanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int")]
		public System.Nullable<int> posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isverified", DbType="Bit")]
		public System.Nullable<bool> isverified
		{
			get
			{
				return this._isverified;
			}
			set
			{
				if ((this._isverified != value))
				{
					this.OnisverifiedChanging(value);
					this.SendPropertyChanging();
					this._isverified = value;
					this.SendPropertyChanged("isverified");
					this.OnisverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_islocked", DbType="Bit")]
		public System.Nullable<bool> islocked
		{
			get
			{
				return this._islocked;
			}
			set
			{
				if ((this._islocked != value))
				{
					this.OnislockedChanging(value);
					this.SendPropertyChanging();
					this._islocked = value;
					this.SendPropertyChanged("islocked");
					this.OnislockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Lodgement_Reimbursement")]
	public partial class Shop_Lodgement_Reimbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _app_id;
		
		private int _Shop;
		
		private System.Nullable<int> _bank;
		
		private string _teller_number;
		
		private System.Nullable<int> _transaction;
		
		private decimal _amount;
		
		private System.DateTime _date;
		
		private System.Nullable<int> _transaction_type;
		
		private System.Nullable<int> _transaction_category;
		
		private System.Nullable<bool> _isverified;
		
		private System.Nullable<bool> _islocked;
		
		private int _payment_type;
		
		private EntityRef<Bank> _Bank1;
		
		private EntityRef<payment_type> _payment_type1;
		
		private EntityRef<Shop> _Shop1;
		
		private EntityRef<Shop_Transaction> _Shop_Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onapp_idChanging(string value);
    partial void Onapp_idChanged();
    partial void OnShopChanging(int value);
    partial void OnShopChanged();
    partial void OnbankChanging(System.Nullable<int> value);
    partial void OnbankChanged();
    partial void Onteller_numberChanging(string value);
    partial void Onteller_numberChanged();
    partial void OntransactionChanging(System.Nullable<int> value);
    partial void OntransactionChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Ontransaction_typeChanging(System.Nullable<int> value);
    partial void Ontransaction_typeChanged();
    partial void Ontransaction_categoryChanging(System.Nullable<int> value);
    partial void Ontransaction_categoryChanged();
    partial void OnisverifiedChanging(System.Nullable<bool> value);
    partial void OnisverifiedChanged();
    partial void OnislockedChanging(System.Nullable<bool> value);
    partial void OnislockedChanged();
    partial void Onpayment_typeChanging(int value);
    partial void Onpayment_typeChanged();
    #endregion
		
		public Shop_Lodgement_Reimbursement()
		{
			this._Bank1 = default(EntityRef<Bank>);
			this._payment_type1 = default(EntityRef<payment_type>);
			this._Shop1 = default(EntityRef<Shop>);
			this._Shop_Transaction = default(EntityRef<Shop_Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_app_id", DbType="VarChar(50)")]
		public string app_id
		{
			get
			{
				return this._app_id;
			}
			set
			{
				if ((this._app_id != value))
				{
					this.Onapp_idChanging(value);
					this.SendPropertyChanging();
					this._app_id = value;
					this.SendPropertyChanged("app_id");
					this.Onapp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shop", DbType="Int NOT NULL")]
		public int Shop
		{
			get
			{
				return this._Shop;
			}
			set
			{
				if ((this._Shop != value))
				{
					if (this._Shop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopChanging(value);
					this.SendPropertyChanging();
					this._Shop = value;
					this.SendPropertyChanged("Shop");
					this.OnShopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bank", DbType="Int")]
		public System.Nullable<int> bank
		{
			get
			{
				return this._bank;
			}
			set
			{
				if ((this._bank != value))
				{
					if (this._Bank1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbankChanging(value);
					this.SendPropertyChanging();
					this._bank = value;
					this.SendPropertyChanged("bank");
					this.OnbankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teller_number", DbType="VarChar(30)")]
		public string teller_number
		{
			get
			{
				return this._teller_number;
			}
			set
			{
				if ((this._teller_number != value))
				{
					this.Onteller_numberChanging(value);
					this.SendPropertyChanging();
					this._teller_number = value;
					this.SendPropertyChanged("teller_number");
					this.Onteller_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[transaction]", Storage="_transaction", DbType="Int")]
		public System.Nullable<int> transaction
		{
			get
			{
				return this._transaction;
			}
			set
			{
				if ((this._transaction != value))
				{
					this.OntransactionChanging(value);
					this.SendPropertyChanging();
					this._transaction = value;
					this.SendPropertyChanged("transaction");
					this.OntransactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(15,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="Int")]
		public System.Nullable<int> transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int")]
		public System.Nullable<int> transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isverified", DbType="Bit")]
		public System.Nullable<bool> isverified
		{
			get
			{
				return this._isverified;
			}
			set
			{
				if ((this._isverified != value))
				{
					this.OnisverifiedChanging(value);
					this.SendPropertyChanging();
					this._isverified = value;
					this.SendPropertyChanged("isverified");
					this.OnisverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_islocked", DbType="Bit")]
		public System.Nullable<bool> islocked
		{
			get
			{
				return this._islocked;
			}
			set
			{
				if ((this._islocked != value))
				{
					this.OnislockedChanging(value);
					this.SendPropertyChanging();
					this._islocked = value;
					this.SendPropertyChanged("islocked");
					this.OnislockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type", DbType="Int NOT NULL")]
		public int payment_type
		{
			get
			{
				return this._payment_type;
			}
			set
			{
				if ((this._payment_type != value))
				{
					if (this._payment_type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_typeChanging(value);
					this.SendPropertyChanging();
					this._payment_type = value;
					this.SendPropertyChanged("payment_type");
					this.Onpayment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Shop_Lodgement_Reimbursement", Storage="_Bank1", ThisKey="bank", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Bank Bank1
		{
			get
			{
				return this._Bank1.Entity;
			}
			set
			{
				Bank previousValue = this._Bank1.Entity;
				if (((previousValue != value) 
							|| (this._Bank1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank1.Entity = null;
						previousValue.Shop_Lodgement_Reimbursements.Remove(this);
					}
					this._Bank1.Entity = value;
					if ((value != null))
					{
						value.Shop_Lodgement_Reimbursements.Add(this);
						this._bank = value.id;
					}
					else
					{
						this._bank = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bank1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_type_Shop_Lodgement_Reimbursement", Storage="_payment_type1", ThisKey="payment_type", OtherKey="id", IsForeignKey=true)]
		public payment_type payment_type1
		{
			get
			{
				return this._payment_type1.Entity;
			}
			set
			{
				payment_type previousValue = this._payment_type1.Entity;
				if (((previousValue != value) 
							|| (this._payment_type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment_type1.Entity = null;
						previousValue.Shop_Lodgement_Reimbursements.Remove(this);
					}
					this._payment_type1.Entity = value;
					if ((value != null))
					{
						value.Shop_Lodgement_Reimbursements.Add(this);
						this._payment_type = value.id;
					}
					else
					{
						this._payment_type = default(int);
					}
					this.SendPropertyChanged("payment_type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Lodgement_Reimbursement", Storage="_Shop1", ThisKey="Shop", OtherKey="id", IsForeignKey=true)]
		public Shop Shop1
		{
			get
			{
				return this._Shop1.Entity;
			}
			set
			{
				Shop previousValue = this._Shop1.Entity;
				if (((previousValue != value) 
							|| (this._Shop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop1.Entity = null;
						previousValue.Shop_Lodgement_Reimbursements.Remove(this);
					}
					this._Shop1.Entity = value;
					if ((value != null))
					{
						value.Shop_Lodgement_Reimbursements.Add(this);
						this._Shop = value.id;
					}
					else
					{
						this._Shop = default(int);
					}
					this.SendPropertyChanged("Shop1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Transaction_Shop_Lodgement_Reimbursement", Storage="_Shop_Transaction", ThisKey="transaction", OtherKey="id", IsForeignKey=true)]
		public Shop_Transaction Shop_Transaction
		{
			get
			{
				return this._Shop_Transaction.Entity;
			}
			set
			{
				Shop_Transaction previousValue = this._Shop_Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Shop_Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop_Transaction.Entity = null;
						previousValue.Shop_Lodgement_Reimbursements.Remove(this);
					}
					this._Shop_Transaction.Entity = value;
					if ((value != null))
					{
						value.Shop_Lodgement_Reimbursements.Add(this);
						this._transaction = value.id;
					}
					else
					{
						this._transaction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop_Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Settings")]
	public partial class Shop_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<bool> _cancreatecashier;
		
		private System.Nullable<int> _payouttype;
		
		private System.Nullable<int> _operationmode;
		
		private System.Nullable<bool> _submitlocal;
		
		private EntityRef<Config_Operation_Mode> _Config_Operation_Mode;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncancreatecashierChanging(System.Nullable<bool> value);
    partial void OncancreatecashierChanged();
    partial void OnpayouttypeChanging(System.Nullable<int> value);
    partial void OnpayouttypeChanged();
    partial void OnoperationmodeChanging(System.Nullable<int> value);
    partial void OnoperationmodeChanged();
    partial void OnsubmitlocalChanging(System.Nullable<bool> value);
    partial void OnsubmitlocalChanged();
    #endregion
		
		public Shop_Setting()
		{
			this._Config_Operation_Mode = default(EntityRef<Config_Operation_Mode>);
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancreatecashier", DbType="Bit")]
		public System.Nullable<bool> cancreatecashier
		{
			get
			{
				return this._cancreatecashier;
			}
			set
			{
				if ((this._cancreatecashier != value))
				{
					this.OncancreatecashierChanging(value);
					this.SendPropertyChanging();
					this._cancreatecashier = value;
					this.SendPropertyChanged("cancreatecashier");
					this.OncancreatecashierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payouttype", DbType="Int")]
		public System.Nullable<int> payouttype
		{
			get
			{
				return this._payouttype;
			}
			set
			{
				if ((this._payouttype != value))
				{
					this.OnpayouttypeChanging(value);
					this.SendPropertyChanging();
					this._payouttype = value;
					this.SendPropertyChanged("payouttype");
					this.OnpayouttypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operationmode", DbType="Int")]
		public System.Nullable<int> operationmode
		{
			get
			{
				return this._operationmode;
			}
			set
			{
				if ((this._operationmode != value))
				{
					if (this._Config_Operation_Mode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoperationmodeChanging(value);
					this.SendPropertyChanging();
					this._operationmode = value;
					this.SendPropertyChanged("operationmode");
					this.OnoperationmodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitlocal", DbType="Bit")]
		public System.Nullable<bool> submitlocal
		{
			get
			{
				return this._submitlocal;
			}
			set
			{
				if ((this._submitlocal != value))
				{
					this.OnsubmitlocalChanging(value);
					this.SendPropertyChanging();
					this._submitlocal = value;
					this.SendPropertyChanged("submitlocal");
					this.OnsubmitlocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Config_Operation_Mode_Shop_Setting", Storage="_Config_Operation_Mode", ThisKey="operationmode", OtherKey="id", IsForeignKey=true)]
		public Config_Operation_Mode Config_Operation_Mode
		{
			get
			{
				return this._Config_Operation_Mode.Entity;
			}
			set
			{
				Config_Operation_Mode previousValue = this._Config_Operation_Mode.Entity;
				if (((previousValue != value) 
							|| (this._Config_Operation_Mode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Config_Operation_Mode.Entity = null;
						previousValue.Shop_Settings.Remove(this);
					}
					this._Config_Operation_Mode.Entity = value;
					if ((value != null))
					{
						value.Shop_Settings.Add(this);
						this._operationmode = value.id;
					}
					else
					{
						this._operationmode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Config_Operation_Mode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Setting", Storage="_Shop", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Shop_Setting = null;
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Shop_Setting = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Transaction")]
	public partial class Shop_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _shop;
		
		private System.DateTime _trans_timestamp;
		
		private decimal _amount;
		
		private System.Nullable<int> _trans_type;
		
		private System.Nullable<decimal> _balance_before;
		
		private System.Nullable<decimal> _balance_after;
		
		private string _details;
		
		private string _description;
		
		private System.Nullable<int> _trans_category;
		
		private System.Nullable<int> _posted_by;
		
		private EntitySet<Shop_Lodgement_Reimbursement> _Shop_Lodgement_Reimbursements;
		
		private EntityRef<Shop> _Shop1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void Ontrans_timestampChanging(System.DateTime value);
    partial void Ontrans_timestampChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Ontrans_typeChanging(System.Nullable<int> value);
    partial void Ontrans_typeChanged();
    partial void Onbalance_beforeChanging(System.Nullable<decimal> value);
    partial void Onbalance_beforeChanged();
    partial void Onbalance_afterChanging(System.Nullable<decimal> value);
    partial void Onbalance_afterChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Ontrans_categoryChanging(System.Nullable<int> value);
    partial void Ontrans_categoryChanged();
    partial void Onposted_byChanging(System.Nullable<int> value);
    partial void Onposted_byChanged();
    #endregion
		
		public Shop_Transaction()
		{
			this._Shop_Lodgement_Reimbursements = new EntitySet<Shop_Lodgement_Reimbursement>(new Action<Shop_Lodgement_Reimbursement>(this.attach_Shop_Lodgement_Reimbursements), new Action<Shop_Lodgement_Reimbursement>(this.detach_Shop_Lodgement_Reimbursements));
			this._Shop1 = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					if (this._Shop1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime trans_timestamp
		{
			get
			{
				return this._trans_timestamp;
			}
			set
			{
				if ((this._trans_timestamp != value))
				{
					this.Ontrans_timestampChanging(value);
					this.SendPropertyChanging();
					this._trans_timestamp = value;
					this.SendPropertyChanged("trans_timestamp");
					this.Ontrans_timestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(15,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_type", DbType="Int")]
		public System.Nullable<int> trans_type
		{
			get
			{
				return this._trans_type;
			}
			set
			{
				if ((this._trans_type != value))
				{
					this.Ontrans_typeChanging(value);
					this.SendPropertyChanging();
					this._trans_type = value;
					this.SendPropertyChanged("trans_type");
					this.Ontrans_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_before", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance_before
		{
			get
			{
				return this._balance_before;
			}
			set
			{
				if ((this._balance_before != value))
				{
					this.Onbalance_beforeChanging(value);
					this.SendPropertyChanging();
					this._balance_before = value;
					this.SendPropertyChanged("balance_before");
					this.Onbalance_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_after", DbType="Decimal(15,2)")]
		public System.Nullable<decimal> balance_after
		{
			get
			{
				return this._balance_after;
			}
			set
			{
				if ((this._balance_after != value))
				{
					this.Onbalance_afterChanging(value);
					this.SendPropertyChanging();
					this._balance_after = value;
					this.SendPropertyChanged("balance_after");
					this.Onbalance_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(1000)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trans_category", DbType="Int")]
		public System.Nullable<int> trans_category
		{
			get
			{
				return this._trans_category;
			}
			set
			{
				if ((this._trans_category != value))
				{
					this.Ontrans_categoryChanging(value);
					this.SendPropertyChanging();
					this._trans_category = value;
					this.SendPropertyChanged("trans_category");
					this.Ontrans_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int")]
		public System.Nullable<int> posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Transaction_Shop_Lodgement_Reimbursement", Storage="_Shop_Lodgement_Reimbursements", ThisKey="id", OtherKey="transaction")]
		public EntitySet<Shop_Lodgement_Reimbursement> Shop_Lodgement_Reimbursements
		{
			get
			{
				return this._Shop_Lodgement_Reimbursements;
			}
			set
			{
				this._Shop_Lodgement_Reimbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Transaction", Storage="_Shop1", ThisKey="shop", OtherKey="id", IsForeignKey=true)]
		public Shop Shop1
		{
			get
			{
				return this._Shop1.Entity;
			}
			set
			{
				Shop previousValue = this._Shop1.Entity;
				if (((previousValue != value) 
							|| (this._Shop1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop1.Entity = null;
						previousValue.Shop_Transactions.Remove(this);
					}
					this._Shop1.Entity = value;
					if ((value != null))
					{
						value.Shop_Transactions.Add(this);
						this._shop = value.id;
					}
					else
					{
						this._shop = default(Nullable<int>);
					}
					this.SendPropertyChanged("Shop1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Shop_Transaction = this;
		}
		
		private void detach_Shop_Lodgement_Reimbursements(Shop_Lodgement_Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.Shop_Transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Type")]
	public partial class Shop_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Shop_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Wallet")]
	public partial class Shop_Wallet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _balance;
		
		private EntitySet<Shop_Wallet_Transaction> _Shop_Wallet_Transactions;
		
		private EntityRef<Shop> _Shop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    #endregion
		
		public Shop_Wallet()
		{
			this._Shop_Wallet_Transactions = new EntitySet<Shop_Wallet_Transaction>(new Action<Shop_Wallet_Transaction>(this.attach_Shop_Wallet_Transactions), new Action<Shop_Wallet_Transaction>(this.detach_Shop_Wallet_Transactions));
			this._Shop = default(EntityRef<Shop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Shop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Wallet_Shop_Wallet_Transaction", Storage="_Shop_Wallet_Transactions", ThisKey="id", OtherKey="shop_wallet")]
		public EntitySet<Shop_Wallet_Transaction> Shop_Wallet_Transactions
		{
			get
			{
				return this._Shop_Wallet_Transactions;
			}
			set
			{
				this._Shop_Wallet_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Shop_Wallet", Storage="_Shop", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Shop Shop
		{
			get
			{
				return this._Shop.Entity;
			}
			set
			{
				Shop previousValue = this._Shop.Entity;
				if (((previousValue != value) 
							|| (this._Shop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop.Entity = null;
						previousValue.Shop_Wallet = null;
					}
					this._Shop.Entity = value;
					if ((value != null))
					{
						value.Shop_Wallet = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Shop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shop_Wallet_Transactions(Shop_Wallet_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Shop_Wallet1 = this;
		}
		
		private void detach_Shop_Wallet_Transactions(Shop_Wallet_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Shop_Wallet1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shop_Wallet_Transaction")]
	public partial class Shop_Wallet_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _shop_wallet;
		
		private decimal _amount;
		
		private decimal _balance_before;
		
		private decimal _balance_after;
		
		private int _transaction_category;
		
		private System.Nullable<int> _transaction_type;
		
		private string _Description;
		
		private int _posted_by;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Shop_Wallet> _Shop_Wallet1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onshop_walletChanging(int value);
    partial void Onshop_walletChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onbalance_beforeChanging(decimal value);
    partial void Onbalance_beforeChanged();
    partial void Onbalance_afterChanging(decimal value);
    partial void Onbalance_afterChanged();
    partial void Ontransaction_categoryChanging(int value);
    partial void Ontransaction_categoryChanged();
    partial void Ontransaction_typeChanging(System.Nullable<int> value);
    partial void Ontransaction_typeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void Onposted_byChanging(int value);
    partial void Onposted_byChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public Shop_Wallet_Transaction()
		{
			this._Shop_Wallet1 = default(EntityRef<Shop_Wallet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_wallet", DbType="Int NOT NULL")]
		public int shop_wallet
		{
			get
			{
				return this._shop_wallet;
			}
			set
			{
				if ((this._shop_wallet != value))
				{
					if (this._Shop_Wallet1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onshop_walletChanging(value);
					this.SendPropertyChanging();
					this._shop_wallet = value;
					this.SendPropertyChanged("shop_wallet");
					this.Onshop_walletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(15,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_before", DbType="Decimal(15,2) NOT NULL")]
		public decimal balance_before
		{
			get
			{
				return this._balance_before;
			}
			set
			{
				if ((this._balance_before != value))
				{
					this.Onbalance_beforeChanging(value);
					this.SendPropertyChanging();
					this._balance_before = value;
					this.SendPropertyChanged("balance_before");
					this.Onbalance_beforeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_after", DbType="Decimal(15,2) NOT NULL")]
		public decimal balance_after
		{
			get
			{
				return this._balance_after;
			}
			set
			{
				if ((this._balance_after != value))
				{
					this.Onbalance_afterChanging(value);
					this.SendPropertyChanging();
					this._balance_after = value;
					this.SendPropertyChanged("balance_after");
					this.Onbalance_afterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_category", DbType="Int NOT NULL")]
		public int transaction_category
		{
			get
			{
				return this._transaction_category;
			}
			set
			{
				if ((this._transaction_category != value))
				{
					this.Ontransaction_categoryChanging(value);
					this.SendPropertyChanging();
					this._transaction_category = value;
					this.SendPropertyChanged("transaction_category");
					this.Ontransaction_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="Int")]
		public System.Nullable<int> transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posted_by", DbType="Int NOT NULL")]
		public int posted_by
		{
			get
			{
				return this._posted_by;
			}
			set
			{
				if ((this._posted_by != value))
				{
					this.Onposted_byChanging(value);
					this.SendPropertyChanging();
					this._posted_by = value;
					this.SendPropertyChanged("posted_by");
					this.Onposted_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shop_Wallet_Shop_Wallet_Transaction", Storage="_Shop_Wallet1", ThisKey="shop_wallet", OtherKey="id", IsForeignKey=true)]
		public Shop_Wallet Shop_Wallet1
		{
			get
			{
				return this._Shop_Wallet1.Entity;
			}
			set
			{
				Shop_Wallet previousValue = this._Shop_Wallet1.Entity;
				if (((previousValue != value) 
							|| (this._Shop_Wallet1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shop_Wallet1.Entity = null;
						previousValue.Shop_Wallet_Transactions.Remove(this);
					}
					this._Shop_Wallet1.Entity = value;
					if ((value != null))
					{
						value.Shop_Wallet_Transactions.Add(this);
						this._shop_wallet = value.id;
					}
					else
					{
						this._shop_wallet = default(int);
					}
					this.SendPropertyChanged("Shop_Wallet1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sms")]
	public partial class Sm
	{
		
		private int _id;
		
		private string _code;
		
		private string _subject;
		
		private string _content;
		
		private string _conclusion;
		
		private string _category;
		
		private string _description;
		
		public Sm()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this._code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this._subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this._content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conclusion", DbType="NChar(500) NOT NULL", CanBeNull=false)]
		public string conclusion
		{
			get
			{
				return this._conclusion;
			}
			set
			{
				if ((this._conclusion != value))
				{
					this._conclusion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this._category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sms_Vendors")]
	public partial class Sms_Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _vendor_name;
		
		private string _vendor_url;
		
		private bool _status;
		
		private int _sent_msgs;
		
		private int _fail_msgs;
		
		private int _remaining_credits;
		
		private System.DateTime _expiry_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onvendor_nameChanging(string value);
    partial void Onvendor_nameChanged();
    partial void Onvendor_urlChanging(string value);
    partial void Onvendor_urlChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void Onsent_msgsChanging(int value);
    partial void Onsent_msgsChanged();
    partial void Onfail_msgsChanging(int value);
    partial void Onfail_msgsChanged();
    partial void Onremaining_creditsChanging(int value);
    partial void Onremaining_creditsChanged();
    partial void Onexpiry_dateChanging(System.DateTime value);
    partial void Onexpiry_dateChanged();
    #endregion
		
		public Sms_Vendor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vendor_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string vendor_name
		{
			get
			{
				return this._vendor_name;
			}
			set
			{
				if ((this._vendor_name != value))
				{
					this.Onvendor_nameChanging(value);
					this.SendPropertyChanging();
					this._vendor_name = value;
					this.SendPropertyChanged("vendor_name");
					this.Onvendor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vendor_url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string vendor_url
		{
			get
			{
				return this._vendor_url;
			}
			set
			{
				if ((this._vendor_url != value))
				{
					this.Onvendor_urlChanging(value);
					this.SendPropertyChanging();
					this._vendor_url = value;
					this.SendPropertyChanged("vendor_url");
					this.Onvendor_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sent_msgs", DbType="Int NOT NULL")]
		public int sent_msgs
		{
			get
			{
				return this._sent_msgs;
			}
			set
			{
				if ((this._sent_msgs != value))
				{
					this.Onsent_msgsChanging(value);
					this.SendPropertyChanging();
					this._sent_msgs = value;
					this.SendPropertyChanged("sent_msgs");
					this.Onsent_msgsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fail_msgs", DbType="Int NOT NULL")]
		public int fail_msgs
		{
			get
			{
				return this._fail_msgs;
			}
			set
			{
				if ((this._fail_msgs != value))
				{
					this.Onfail_msgsChanging(value);
					this.SendPropertyChanging();
					this._fail_msgs = value;
					this.SendPropertyChanged("fail_msgs");
					this.Onfail_msgsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remaining_credits", DbType="Int NOT NULL")]
		public int remaining_credits
		{
			get
			{
				return this._remaining_credits;
			}
			set
			{
				if ((this._remaining_credits != value))
				{
					this.Onremaining_creditsChanging(value);
					this.SendPropertyChanging();
					this._remaining_credits = value;
					this.SendPropertyChanged("remaining_credits");
					this.Onremaining_creditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiry_date", DbType="Date NOT NULL")]
		public System.DateTime expiry_date
		{
			get
			{
				return this._expiry_date;
			}
			set
			{
				if ((this._expiry_date != value))
				{
					this.Onexpiry_dateChanging(value);
					this.SendPropertyChanging();
					this._expiry_date = value;
					this.SendPropertyChanged("expiry_date");
					this.Onexpiry_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private System.Nullable<int> _country;
		
		private EntitySet<Branch> _Branches;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OncountryChanging(System.Nullable<int> value);
    partial void OncountryChanged();
    #endregion
		
		public State()
		{
			this._Branches = new EntitySet<Branch>(new Action<Branch>(this.attach_Branches), new Action<Branch>(this.detach_Branches));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(5)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Int")]
		public System.Nullable<int> country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Branch", Storage="_Branches", ThisKey="id", OtherKey="state")]
		public EntitySet<Branch> Branches
		{
			get
			{
				return this._Branches;
			}
			set
			{
				this._Branches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Customer", Storage="_Customers", ThisKey="id", OtherKey="state")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.State1 = this;
		}
		
		private void detach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.State1 = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.State1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.State1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temp_tab")]
	public partial class temp_tab
	{
		
		private string _code;
		
		private string _name;
		
		private string _number;
		
		public temp_tab()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this._code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(50)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this._number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tempsale")]
	public partial class tempsale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _affiliate;
		
		private int _shop;
		
		private System.DateTime _date;
		
		private System.Nullable<decimal> _stake;
		
		private System.Nullable<decimal> _winnings;
		
		private System.Nullable<decimal> _cancelled;
		
		private System.Nullable<decimal> _commision;
		
		private System.Nullable<decimal> _balance;
		
		private System.Nullable<decimal> _netbalance;
		
		private EntityRef<tempsale> _tempsale2;
		
		private EntityRef<tempsale> _tempsale1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnaffiliateChanging(int value);
    partial void OnaffiliateChanged();
    partial void OnshopChanging(int value);
    partial void OnshopChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnstakeChanging(System.Nullable<decimal> value);
    partial void OnstakeChanged();
    partial void OnwinningsChanging(System.Nullable<decimal> value);
    partial void OnwinningsChanged();
    partial void OncancelledChanging(System.Nullable<decimal> value);
    partial void OncancelledChanged();
    partial void OncommisionChanging(System.Nullable<decimal> value);
    partial void OncommisionChanged();
    partial void OnbalanceChanging(System.Nullable<decimal> value);
    partial void OnbalanceChanged();
    partial void OnnetbalanceChanging(System.Nullable<decimal> value);
    partial void OnnetbalanceChanged();
    #endregion
		
		public tempsale()
		{
			this._tempsale2 = default(EntityRef<tempsale>);
			this._tempsale1 = default(EntityRef<tempsale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._tempsale1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affiliate", DbType="Int NOT NULL")]
		public int affiliate
		{
			get
			{
				return this._affiliate;
			}
			set
			{
				if ((this._affiliate != value))
				{
					this.OnaffiliateChanging(value);
					this.SendPropertyChanging();
					this._affiliate = value;
					this.SendPropertyChanged("affiliate");
					this.OnaffiliateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int NOT NULL")]
		public int shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stake
		{
			get
			{
				return this._stake;
			}
			set
			{
				if ((this._stake != value))
				{
					this.OnstakeChanging(value);
					this.SendPropertyChanging();
					this._stake = value;
					this.SendPropertyChanged("stake");
					this.OnstakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_winnings", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> winnings
		{
			get
			{
				return this._winnings;
			}
			set
			{
				if ((this._winnings != value))
				{
					this.OnwinningsChanging(value);
					this.SendPropertyChanging();
					this._winnings = value;
					this.SendPropertyChanged("winnings");
					this.OnwinningsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelled", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> cancelled
		{
			get
			{
				return this._cancelled;
			}
			set
			{
				if ((this._cancelled != value))
				{
					this.OncancelledChanging(value);
					this.SendPropertyChanging();
					this._cancelled = value;
					this.SendPropertyChanged("cancelled");
					this.OncancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commision", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> commision
		{
			get
			{
				return this._commision;
			}
			set
			{
				if ((this._commision != value))
				{
					this.OncommisionChanging(value);
					this.SendPropertyChanging();
					this._commision = value;
					this.SendPropertyChanged("commision");
					this.OncommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netbalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> netbalance
		{
			get
			{
				return this._netbalance;
			}
			set
			{
				if ((this._netbalance != value))
				{
					this.OnnetbalanceChanging(value);
					this.SendPropertyChanging();
					this._netbalance = value;
					this.SendPropertyChanged("netbalance");
					this.OnnetbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tempsale_tempsale", Storage="_tempsale2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public tempsale tempsale2
		{
			get
			{
				return this._tempsale2.Entity;
			}
			set
			{
				tempsale previousValue = this._tempsale2.Entity;
				if (((previousValue != value) 
							|| (this._tempsale2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tempsale2.Entity = null;
						previousValue.tempsale1 = null;
					}
					this._tempsale2.Entity = value;
					if ((value != null))
					{
						value.tempsale1 = this;
					}
					this.SendPropertyChanged("tempsale2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tempsale_tempsale", Storage="_tempsale1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public tempsale tempsale1
		{
			get
			{
				return this._tempsale1.Entity;
			}
			set
			{
				tempsale previousValue = this._tempsale1.Entity;
				if (((previousValue != value) 
							|| (this._tempsale1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tempsale1.Entity = null;
						previousValue.tempsale2 = null;
					}
					this._tempsale1.Entity = value;
					if ((value != null))
					{
						value.tempsale2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("tempsale1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terminal")]
	public partial class Terminal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _terminal_id;
		
		private System.DateTime _creation_date;
		
		private System.Nullable<int> _created_by;
		
		private EntitySet<customer_terminal_allocation> _customer_terminal_allocations;
		
		private EntityRef<Admin_User> _Admin_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onterminal_idChanging(string value);
    partial void Onterminal_idChanged();
    partial void Oncreation_dateChanging(System.DateTime value);
    partial void Oncreation_dateChanged();
    partial void Oncreated_byChanging(System.Nullable<int> value);
    partial void Oncreated_byChanged();
    #endregion
		
		public Terminal()
		{
			this._customer_terminal_allocations = new EntitySet<customer_terminal_allocation>(new Action<customer_terminal_allocation>(this.attach_customer_terminal_allocations), new Action<customer_terminal_allocation>(this.detach_customer_terminal_allocations));
			this._Admin_User = default(EntityRef<Admin_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terminal_id", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string terminal_id
		{
			get
			{
				return this._terminal_id;
			}
			set
			{
				if ((this._terminal_id != value))
				{
					this.Onterminal_idChanging(value);
					this.SendPropertyChanging();
					this._terminal_id = value;
					this.SendPropertyChanged("terminal_id");
					this.Onterminal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creation_date", DbType="DateTime NOT NULL")]
		public System.DateTime creation_date
		{
			get
			{
				return this._creation_date;
			}
			set
			{
				if ((this._creation_date != value))
				{
					this.Oncreation_dateChanging(value);
					this.SendPropertyChanging();
					this._creation_date = value;
					this.SendPropertyChanged("creation_date");
					this.Oncreation_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_by", DbType="Int")]
		public System.Nullable<int> created_by
		{
			get
			{
				return this._created_by;
			}
			set
			{
				if ((this._created_by != value))
				{
					if (this._Admin_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncreated_byChanging(value);
					this.SendPropertyChanging();
					this._created_by = value;
					this.SendPropertyChanged("created_by");
					this.Oncreated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Terminal_customer_terminal_allocation", Storage="_customer_terminal_allocations", ThisKey="id", OtherKey="terminal")]
		public EntitySet<customer_terminal_allocation> customer_terminal_allocations
		{
			get
			{
				return this._customer_terminal_allocations;
			}
			set
			{
				this._customer_terminal_allocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_User_Terminal", Storage="_Admin_User", ThisKey="created_by", OtherKey="id", IsForeignKey=true)]
		public Admin_User Admin_User
		{
			get
			{
				return this._Admin_User.Entity;
			}
			set
			{
				Admin_User previousValue = this._Admin_User.Entity;
				if (((previousValue != value) 
							|| (this._Admin_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_User.Entity = null;
						previousValue.Terminals.Remove(this);
					}
					this._Admin_User.Entity = value;
					if ((value != null))
					{
						value.Terminals.Add(this);
						this._created_by = value.id;
					}
					else
					{
						this._created_by = default(Nullable<int>);
					}
					this.SendPropertyChanged("Admin_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customer_terminal_allocations(customer_terminal_allocation entity)
		{
			this.SendPropertyChanging();
			entity.Terminal1 = this;
		}
		
		private void detach_customer_terminal_allocations(customer_terminal_allocation entity)
		{
			this.SendPropertyChanging();
			entity.Terminal1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ticket_reference_id;
		
		private string _master_ticket_id;
		
		private System.Nullable<int> _bet_type;
		
		private int _owner;
		
		private int _daily_game;
		
		private decimal _amount;
		
		private System.Nullable<int> _no_of_lines;
		
		private System.Nullable<decimal> _stake_per_line;
		
		private string _stakebet1;
		
		private string _stakebet2;
		
		private int _ticket_status;
		
		private System.DateTime _date_registered;
		
		private string _ipAdress;
		
		private System.Nullable<decimal> _won_amount;
		
		private System.Nullable<int> _owner_type;
		
		private int _reg_method;
		
		private System.Nullable<int> _currency;
		
		private System.Nullable<decimal> _possible_win;
		
		private System.Nullable<decimal> _bonus;
		
		private System.Nullable<decimal> _confirmed_return;
		
		private System.Nullable<int> _ticket_type;
		
		private System.Nullable<decimal> _possible_bonus;
		
		private System.Nullable<int> _shop;
		
		private System.Nullable<bool> _ispaid;
		
		private System.Nullable<bool> _isexpired;
		
		private System.Nullable<int> _payoutshop;
		
		private System.Nullable<int> _payoutBy;
		
		private System.Nullable<System.DateTime> _payoutDate;
		
		private EntitySet<Bet> _Bets;
		
		private EntitySet<Ticket_History> _Ticket_Histories;
		
		private EntityRef<Bet_Type> _Bet_Type1;
		
		private EntityRef<Daily_Game> _Daily_Game1;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Ticket_Registration_Method> _Ticket_Registration_Method;
		
		private EntityRef<Ticket_Status> _Ticket_Status1;
		
		private EntityRef<Ticket_Type> _Ticket_Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onticket_reference_idChanging(string value);
    partial void Onticket_reference_idChanged();
    partial void Onmaster_ticket_idChanging(string value);
    partial void Onmaster_ticket_idChanged();
    partial void Onbet_typeChanging(System.Nullable<int> value);
    partial void Onbet_typeChanged();
    partial void OnownerChanging(int value);
    partial void OnownerChanged();
    partial void Ondaily_gameChanging(int value);
    partial void Ondaily_gameChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onno_of_linesChanging(System.Nullable<int> value);
    partial void Onno_of_linesChanged();
    partial void Onstake_per_lineChanging(System.Nullable<decimal> value);
    partial void Onstake_per_lineChanged();
    partial void Onstakebet1Changing(string value);
    partial void Onstakebet1Changed();
    partial void Onstakebet2Changing(string value);
    partial void Onstakebet2Changed();
    partial void Onticket_statusChanging(int value);
    partial void Onticket_statusChanged();
    partial void Ondate_registeredChanging(System.DateTime value);
    partial void Ondate_registeredChanged();
    partial void OnipAdressChanging(string value);
    partial void OnipAdressChanged();
    partial void Onwon_amountChanging(System.Nullable<decimal> value);
    partial void Onwon_amountChanged();
    partial void Onowner_typeChanging(System.Nullable<int> value);
    partial void Onowner_typeChanged();
    partial void Onreg_methodChanging(int value);
    partial void Onreg_methodChanged();
    partial void OncurrencyChanging(System.Nullable<int> value);
    partial void OncurrencyChanged();
    partial void Onpossible_winChanging(System.Nullable<decimal> value);
    partial void Onpossible_winChanged();
    partial void OnbonusChanging(System.Nullable<decimal> value);
    partial void OnbonusChanged();
    partial void Onconfirmed_returnChanging(System.Nullable<decimal> value);
    partial void Onconfirmed_returnChanged();
    partial void Onticket_typeChanging(System.Nullable<int> value);
    partial void Onticket_typeChanged();
    partial void Onpossible_bonusChanging(System.Nullable<decimal> value);
    partial void Onpossible_bonusChanged();
    partial void OnshopChanging(System.Nullable<int> value);
    partial void OnshopChanged();
    partial void OnispaidChanging(System.Nullable<bool> value);
    partial void OnispaidChanged();
    partial void OnisexpiredChanging(System.Nullable<bool> value);
    partial void OnisexpiredChanged();
    partial void OnpayoutshopChanging(System.Nullable<int> value);
    partial void OnpayoutshopChanged();
    partial void OnpayoutByChanging(System.Nullable<int> value);
    partial void OnpayoutByChanged();
    partial void OnpayoutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpayoutDateChanged();
    #endregion
		
		public Ticket()
		{
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Ticket_Histories = new EntitySet<Ticket_History>(new Action<Ticket_History>(this.attach_Ticket_Histories), new Action<Ticket_History>(this.detach_Ticket_Histories));
			this._Bet_Type1 = default(EntityRef<Bet_Type>);
			this._Daily_Game1 = default(EntityRef<Daily_Game>);
			this._Customer = default(EntityRef<Customer>);
			this._Ticket_Registration_Method = default(EntityRef<Ticket_Registration_Method>);
			this._Ticket_Status1 = default(EntityRef<Ticket_Status>);
			this._Ticket_Type1 = default(EntityRef<Ticket_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_reference_id", DbType="VarChar(50)")]
		public string ticket_reference_id
		{
			get
			{
				return this._ticket_reference_id;
			}
			set
			{
				if ((this._ticket_reference_id != value))
				{
					this.Onticket_reference_idChanging(value);
					this.SendPropertyChanging();
					this._ticket_reference_id = value;
					this.SendPropertyChanged("ticket_reference_id");
					this.Onticket_reference_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_master_ticket_id", DbType="VarChar(50)")]
		public string master_ticket_id
		{
			get
			{
				return this._master_ticket_id;
			}
			set
			{
				if ((this._master_ticket_id != value))
				{
					this.Onmaster_ticket_idChanging(value);
					this.SendPropertyChanging();
					this._master_ticket_id = value;
					this.SendPropertyChanged("master_ticket_id");
					this.Onmaster_ticket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bet_type", DbType="Int")]
		public System.Nullable<int> bet_type
		{
			get
			{
				return this._bet_type;
			}
			set
			{
				if ((this._bet_type != value))
				{
					if (this._Bet_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbet_typeChanging(value);
					this.SendPropertyChanging();
					this._bet_type = value;
					this.SendPropertyChanged("bet_type");
					this.Onbet_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="Int NOT NULL")]
		public int owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_game", DbType="Int NOT NULL")]
		public int daily_game
		{
			get
			{
				return this._daily_game;
			}
			set
			{
				if ((this._daily_game != value))
				{
					if (this._Daily_Game1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_gameChanging(value);
					this.SendPropertyChanging();
					this._daily_game = value;
					this.SendPropertyChanged("daily_game");
					this.Ondaily_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_no_of_lines", DbType="Int")]
		public System.Nullable<int> no_of_lines
		{
			get
			{
				return this._no_of_lines;
			}
			set
			{
				if ((this._no_of_lines != value))
				{
					this.Onno_of_linesChanging(value);
					this.SendPropertyChanging();
					this._no_of_lines = value;
					this.SendPropertyChanged("no_of_lines");
					this.Onno_of_linesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake_per_line", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stake_per_line
		{
			get
			{
				return this._stake_per_line;
			}
			set
			{
				if ((this._stake_per_line != value))
				{
					this.Onstake_per_lineChanging(value);
					this.SendPropertyChanging();
					this._stake_per_line = value;
					this.SendPropertyChanged("stake_per_line");
					this.Onstake_per_lineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakebet1", DbType="VarChar(50)")]
		public string stakebet1
		{
			get
			{
				return this._stakebet1;
			}
			set
			{
				if ((this._stakebet1 != value))
				{
					this.Onstakebet1Changing(value);
					this.SendPropertyChanging();
					this._stakebet1 = value;
					this.SendPropertyChanged("stakebet1");
					this.Onstakebet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakebet2", DbType="VarChar(50)")]
		public string stakebet2
		{
			get
			{
				return this._stakebet2;
			}
			set
			{
				if ((this._stakebet2 != value))
				{
					this.Onstakebet2Changing(value);
					this.SendPropertyChanging();
					this._stakebet2 = value;
					this.SendPropertyChanged("stakebet2");
					this.Onstakebet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_status", DbType="Int NOT NULL")]
		public int ticket_status
		{
			get
			{
				return this._ticket_status;
			}
			set
			{
				if ((this._ticket_status != value))
				{
					if (this._Ticket_Status1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onticket_statusChanging(value);
					this.SendPropertyChanging();
					this._ticket_status = value;
					this.SendPropertyChanged("ticket_status");
					this.Onticket_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_registered", DbType="DateTime NOT NULL")]
		public System.DateTime date_registered
		{
			get
			{
				return this._date_registered;
			}
			set
			{
				if ((this._date_registered != value))
				{
					this.Ondate_registeredChanging(value);
					this.SendPropertyChanging();
					this._date_registered = value;
					this.SendPropertyChanged("date_registered");
					this.Ondate_registeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAdress", DbType="VarChar(50)")]
		public string ipAdress
		{
			get
			{
				return this._ipAdress;
			}
			set
			{
				if ((this._ipAdress != value))
				{
					this.OnipAdressChanging(value);
					this.SendPropertyChanging();
					this._ipAdress = value;
					this.SendPropertyChanged("ipAdress");
					this.OnipAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_won_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> won_amount
		{
			get
			{
				return this._won_amount;
			}
			set
			{
				if ((this._won_amount != value))
				{
					this.Onwon_amountChanging(value);
					this.SendPropertyChanging();
					this._won_amount = value;
					this.SendPropertyChanged("won_amount");
					this.Onwon_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner_type", DbType="Int")]
		public System.Nullable<int> owner_type
		{
			get
			{
				return this._owner_type;
			}
			set
			{
				if ((this._owner_type != value))
				{
					this.Onowner_typeChanging(value);
					this.SendPropertyChanging();
					this._owner_type = value;
					this.SendPropertyChanged("owner_type");
					this.Onowner_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_method", DbType="Int NOT NULL")]
		public int reg_method
		{
			get
			{
				return this._reg_method;
			}
			set
			{
				if ((this._reg_method != value))
				{
					if (this._Ticket_Registration_Method.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreg_methodChanging(value);
					this.SendPropertyChanging();
					this._reg_method = value;
					this.SendPropertyChanged("reg_method");
					this.Onreg_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int")]
		public System.Nullable<int> currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_possible_win", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> possible_win
		{
			get
			{
				return this._possible_win;
			}
			set
			{
				if ((this._possible_win != value))
				{
					this.Onpossible_winChanging(value);
					this.SendPropertyChanging();
					this._possible_win = value;
					this.SendPropertyChanged("possible_win");
					this.Onpossible_winChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> bonus
		{
			get
			{
				return this._bonus;
			}
			set
			{
				if ((this._bonus != value))
				{
					this.OnbonusChanging(value);
					this.SendPropertyChanging();
					this._bonus = value;
					this.SendPropertyChanged("bonus");
					this.OnbonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmed_return", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> confirmed_return
		{
			get
			{
				return this._confirmed_return;
			}
			set
			{
				if ((this._confirmed_return != value))
				{
					this.Onconfirmed_returnChanging(value);
					this.SendPropertyChanging();
					this._confirmed_return = value;
					this.SendPropertyChanged("confirmed_return");
					this.Onconfirmed_returnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_type", DbType="Int")]
		public System.Nullable<int> ticket_type
		{
			get
			{
				return this._ticket_type;
			}
			set
			{
				if ((this._ticket_type != value))
				{
					if (this._Ticket_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onticket_typeChanging(value);
					this.SendPropertyChanging();
					this._ticket_type = value;
					this.SendPropertyChanged("ticket_type");
					this.Onticket_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_possible_bonus", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> possible_bonus
		{
			get
			{
				return this._possible_bonus;
			}
			set
			{
				if ((this._possible_bonus != value))
				{
					this.Onpossible_bonusChanging(value);
					this.SendPropertyChanging();
					this._possible_bonus = value;
					this.SendPropertyChanged("possible_bonus");
					this.Onpossible_bonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop", DbType="Int")]
		public System.Nullable<int> shop
		{
			get
			{
				return this._shop;
			}
			set
			{
				if ((this._shop != value))
				{
					this.OnshopChanging(value);
					this.SendPropertyChanging();
					this._shop = value;
					this.SendPropertyChanged("shop");
					this.OnshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ispaid", DbType="Bit")]
		public System.Nullable<bool> ispaid
		{
			get
			{
				return this._ispaid;
			}
			set
			{
				if ((this._ispaid != value))
				{
					this.OnispaidChanging(value);
					this.SendPropertyChanging();
					this._ispaid = value;
					this.SendPropertyChanged("ispaid");
					this.OnispaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isexpired", DbType="Bit")]
		public System.Nullable<bool> isexpired
		{
			get
			{
				return this._isexpired;
			}
			set
			{
				if ((this._isexpired != value))
				{
					this.OnisexpiredChanging(value);
					this.SendPropertyChanging();
					this._isexpired = value;
					this.SendPropertyChanged("isexpired");
					this.OnisexpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payoutshop", DbType="Int")]
		public System.Nullable<int> payoutshop
		{
			get
			{
				return this._payoutshop;
			}
			set
			{
				if ((this._payoutshop != value))
				{
					this.OnpayoutshopChanging(value);
					this.SendPropertyChanging();
					this._payoutshop = value;
					this.SendPropertyChanged("payoutshop");
					this.OnpayoutshopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payoutBy", DbType="Int")]
		public System.Nullable<int> payoutBy
		{
			get
			{
				return this._payoutBy;
			}
			set
			{
				if ((this._payoutBy != value))
				{
					this.OnpayoutByChanging(value);
					this.SendPropertyChanging();
					this._payoutBy = value;
					this.SendPropertyChanged("payoutBy");
					this.OnpayoutByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payoutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> payoutDate
		{
			get
			{
				return this._payoutDate;
			}
			set
			{
				if ((this._payoutDate != value))
				{
					this.OnpayoutDateChanging(value);
					this.SendPropertyChanging();
					this._payoutDate = value;
					this.SendPropertyChanged("payoutDate");
					this.OnpayoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Bet", Storage="_Bets", ThisKey="id", OtherKey="Ticket")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Ticket_History", Storage="_Ticket_Histories", ThisKey="id", OtherKey="ticket")]
		public EntitySet<Ticket_History> Ticket_Histories
		{
			get
			{
				return this._Ticket_Histories;
			}
			set
			{
				this._Ticket_Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bet_Type_Ticket", Storage="_Bet_Type1", ThisKey="bet_type", OtherKey="id", IsForeignKey=true)]
		public Bet_Type Bet_Type1
		{
			get
			{
				return this._Bet_Type1.Entity;
			}
			set
			{
				Bet_Type previousValue = this._Bet_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Bet_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bet_Type1.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Bet_Type1.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._bet_type = value.id;
					}
					else
					{
						this._bet_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bet_Type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Daily_Game_Ticket", Storage="_Daily_Game1", ThisKey="daily_game", OtherKey="id", IsForeignKey=true)]
		public Daily_Game Daily_Game1
		{
			get
			{
				return this._Daily_Game1.Entity;
			}
			set
			{
				Daily_Game previousValue = this._Daily_Game1.Entity;
				if (((previousValue != value) 
							|| (this._Daily_Game1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Daily_Game1.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Daily_Game1.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._daily_game = value.id;
					}
					else
					{
						this._daily_game = default(int);
					}
					this.SendPropertyChanged("Daily_Game1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Ticket", Storage="_Customer", ThisKey="owner", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Registration_Method_Ticket", Storage="_Ticket_Registration_Method", ThisKey="reg_method", OtherKey="id", IsForeignKey=true)]
		public Ticket_Registration_Method Ticket_Registration_Method
		{
			get
			{
				return this._Ticket_Registration_Method.Entity;
			}
			set
			{
				Ticket_Registration_Method previousValue = this._Ticket_Registration_Method.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Registration_Method.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Registration_Method.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Registration_Method.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._reg_method = value.id;
					}
					else
					{
						this._reg_method = default(int);
					}
					this.SendPropertyChanged("Ticket_Registration_Method");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Status_Ticket", Storage="_Ticket_Status1", ThisKey="ticket_status", OtherKey="id", IsForeignKey=true)]
		public Ticket_Status Ticket_Status1
		{
			get
			{
				return this._Ticket_Status1.Entity;
			}
			set
			{
				Ticket_Status previousValue = this._Ticket_Status1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Status1.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Status1.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ticket_status = value.id;
					}
					else
					{
						this._ticket_status = default(int);
					}
					this.SendPropertyChanged("Ticket_Status1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Type_Ticket", Storage="_Ticket_Type1", ThisKey="ticket_type", OtherKey="id", IsForeignKey=true)]
		public Ticket_Type Ticket_Type1
		{
			get
			{
				return this._Ticket_Type1.Entity;
			}
			set
			{
				Ticket_Type previousValue = this._Ticket_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Type1.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Ticket_Type1.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ticket_type = value.id;
					}
					else
					{
						this._ticket_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ticket_Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket1 = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket1 = null;
		}
		
		private void attach_Ticket_Histories(Ticket_History entity)
		{
			this.SendPropertyChanging();
			entity.Ticket1 = this;
		}
		
		private void detach_Ticket_Histories(Ticket_History entity)
		{
			this.SendPropertyChanging();
			entity.Ticket1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Action")]
	public partial class Ticket_Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Ticket_History> _Ticket_Histories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Ticket_Action()
		{
			this._Ticket_Histories = new EntitySet<Ticket_History>(new Action<Ticket_History>(this.attach_Ticket_Histories), new Action<Ticket_History>(this.detach_Ticket_Histories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Action_Ticket_History", Storage="_Ticket_Histories", ThisKey="id", OtherKey="action")]
		public EntitySet<Ticket_History> Ticket_Histories
		{
			get
			{
				return this._Ticket_Histories;
			}
			set
			{
				this._Ticket_Histories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Histories(Ticket_History entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Action = this;
		}
		
		private void detach_Ticket_Histories(Ticket_History entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Action = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_History")]
	public partial class Ticket_History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ticket;
		
		private System.DateTime _date;
		
		private int _action;
		
		private int _updated_by;
		
		private string _details;
		
		private string _ipAdress;
		
		private int _update_UserType;
		
		private EntityRef<Ticket> _Ticket1;
		
		private EntityRef<Ticket_Action> _Ticket_Action;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnticketChanging(int value);
    partial void OnticketChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnactionChanging(int value);
    partial void OnactionChanged();
    partial void Onupdated_byChanging(int value);
    partial void Onupdated_byChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnipAdressChanging(string value);
    partial void OnipAdressChanged();
    partial void Onupdate_UserTypeChanging(int value);
    partial void Onupdate_UserTypeChanged();
    #endregion
		
		public Ticket_History()
		{
			this._Ticket1 = default(EntityRef<Ticket>);
			this._Ticket_Action = default(EntityRef<Ticket_Action>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket", DbType="Int NOT NULL")]
		public int ticket
		{
			get
			{
				return this._ticket;
			}
			set
			{
				if ((this._ticket != value))
				{
					if (this._Ticket1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnticketChanging(value);
					this.SendPropertyChanging();
					this._ticket = value;
					this.SendPropertyChanged("ticket");
					this.OnticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="Int NOT NULL")]
		public int action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					if (this._Ticket_Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated_by", DbType="Int NOT NULL")]
		public int updated_by
		{
			get
			{
				return this._updated_by;
			}
			set
			{
				if ((this._updated_by != value))
				{
					this.Onupdated_byChanging(value);
					this.SendPropertyChanging();
					this._updated_by = value;
					this.SendPropertyChanged("updated_by");
					this.Onupdated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(100)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAdress", DbType="VarChar(100)")]
		public string ipAdress
		{
			get
			{
				return this._ipAdress;
			}
			set
			{
				if ((this._ipAdress != value))
				{
					this.OnipAdressChanging(value);
					this.SendPropertyChanging();
					this._ipAdress = value;
					this.SendPropertyChanged("ipAdress");
					this.OnipAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_UserType", DbType="Int NOT NULL")]
		public int update_UserType
		{
			get
			{
				return this._update_UserType;
			}
			set
			{
				if ((this._update_UserType != value))
				{
					this.Onupdate_UserTypeChanging(value);
					this.SendPropertyChanging();
					this._update_UserType = value;
					this.SendPropertyChanged("update_UserType");
					this.Onupdate_UserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Ticket_History", Storage="_Ticket1", ThisKey="ticket", OtherKey="id", IsForeignKey=true)]
		public Ticket Ticket1
		{
			get
			{
				return this._Ticket1.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket1.Entity = null;
						previousValue.Ticket_Histories.Remove(this);
					}
					this._Ticket1.Entity = value;
					if ((value != null))
					{
						value.Ticket_Histories.Add(this);
						this._ticket = value.id;
					}
					else
					{
						this._ticket = default(int);
					}
					this.SendPropertyChanged("Ticket1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Action_Ticket_History", Storage="_Ticket_Action", ThisKey="action", OtherKey="id", IsForeignKey=true)]
		public Ticket_Action Ticket_Action
		{
			get
			{
				return this._Ticket_Action.Entity;
			}
			set
			{
				Ticket_Action previousValue = this._Ticket_Action.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Action.Entity = null;
						previousValue.Ticket_Histories.Remove(this);
					}
					this._Ticket_Action.Entity = value;
					if ((value != null))
					{
						value.Ticket_Histories.Add(this);
						this._action = value.id;
					}
					else
					{
						this._action = default(int);
					}
					this.SendPropertyChanged("Ticket_Action");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Registration_Method")]
	public partial class Ticket_Registration_Method : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Bet> _Bets;
		
		private EntitySet<Promo_Ticket> _Promo_Tickets;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Ticket_Registration_Method()
		{
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Promo_Tickets = new EntitySet<Promo_Ticket>(new Action<Promo_Ticket>(this.attach_Promo_Tickets), new Action<Promo_Ticket>(this.detach_Promo_Tickets));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Registration_Method_Bet", Storage="_Bets", ThisKey="id", OtherKey="reg_method")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Registration_Method_Promo_Ticket", Storage="_Promo_Tickets", ThisKey="id", OtherKey="channel")]
		public EntitySet<Promo_Ticket> Promo_Tickets
		{
			get
			{
				return this._Promo_Tickets;
			}
			set
			{
				this._Promo_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Registration_Method_Ticket", Storage="_Tickets", ThisKey="id", OtherKey="reg_method")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Registration_Method = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Registration_Method = null;
		}
		
		private void attach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Registration_Method = this;
		}
		
		private void detach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Registration_Method = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Registration_Method = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Registration_Method = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Service_Response")]
	public partial class Ticket_Service_Response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _requests_response;
		
		private string _returncode;
		
		private string _returnmessage;
		
		private string _channel;
		
		private string _machineid;
		
		private string _guid;
		
		private string _agentid;
		
		private string _ticketid;
		
		private string _ticketwiningid;
		
		private string _ticketuniqueid;
		
		private string _ticketsalesday;
		
		private string _ticketvalidity;
		
		private string _ticketdrawtime;
		
		private string _ticketgameid;
		
		private string _stakebets1;
		
		private string _stakebets2;
		
		private string _stakenap;
		
		private int _stakeperline;
		
		private int _numberlines;
		
		private decimal _totalamount;
		
		private bool _deletionstatus;
		
		private string _deletiondate;
		
		private string _deletionvalidity;
		
		private string _validitystatus;
		
		private System.Nullable<int> _ticket_service_response_type;
		
		private System.DateTime _responseDate;
		
		private EntityRef<Requests_Response> _Requests_Response1;
		
		private EntityRef<Service_Error> _Service_Error;
		
		private EntityRef<ticket_service_response_type> _ticket_service_response_type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrequests_responseChanging(int value);
    partial void Onrequests_responseChanged();
    partial void OnreturncodeChanging(string value);
    partial void OnreturncodeChanged();
    partial void OnreturnmessageChanging(string value);
    partial void OnreturnmessageChanged();
    partial void OnchannelChanging(string value);
    partial void OnchannelChanged();
    partial void OnmachineidChanging(string value);
    partial void OnmachineidChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OnagentidChanging(string value);
    partial void OnagentidChanged();
    partial void OnticketidChanging(string value);
    partial void OnticketidChanged();
    partial void OnticketwiningidChanging(string value);
    partial void OnticketwiningidChanged();
    partial void OnticketuniqueidChanging(string value);
    partial void OnticketuniqueidChanged();
    partial void OnticketsalesdayChanging(string value);
    partial void OnticketsalesdayChanged();
    partial void OnticketvalidityChanging(string value);
    partial void OnticketvalidityChanged();
    partial void OnticketdrawtimeChanging(string value);
    partial void OnticketdrawtimeChanged();
    partial void OnticketgameidChanging(string value);
    partial void OnticketgameidChanged();
    partial void Onstakebets1Changing(string value);
    partial void Onstakebets1Changed();
    partial void Onstakebets2Changing(string value);
    partial void Onstakebets2Changed();
    partial void OnstakenapChanging(string value);
    partial void OnstakenapChanged();
    partial void OnstakeperlineChanging(int value);
    partial void OnstakeperlineChanged();
    partial void OnnumberlinesChanging(int value);
    partial void OnnumberlinesChanged();
    partial void OntotalamountChanging(decimal value);
    partial void OntotalamountChanged();
    partial void OndeletionstatusChanging(bool value);
    partial void OndeletionstatusChanged();
    partial void OndeletiondateChanging(string value);
    partial void OndeletiondateChanged();
    partial void OndeletionvalidityChanging(string value);
    partial void OndeletionvalidityChanged();
    partial void OnvaliditystatusChanging(string value);
    partial void OnvaliditystatusChanged();
    partial void Onticket_service_response_typeChanging(System.Nullable<int> value);
    partial void Onticket_service_response_typeChanged();
    partial void OnresponseDateChanging(System.DateTime value);
    partial void OnresponseDateChanged();
    #endregion
		
		public Ticket_Service_Response()
		{
			this._Requests_Response1 = default(EntityRef<Requests_Response>);
			this._Service_Error = default(EntityRef<Service_Error>);
			this._ticket_service_response_type1 = default(EntityRef<ticket_service_response_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requests_response", DbType="Int NOT NULL")]
		public int requests_response
		{
			get
			{
				return this._requests_response;
			}
			set
			{
				if ((this._requests_response != value))
				{
					if (this._Requests_Response1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrequests_responseChanging(value);
					this.SendPropertyChanging();
					this._requests_response = value;
					this.SendPropertyChanged("requests_response");
					this.Onrequests_responseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returncode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string returncode
		{
			get
			{
				return this._returncode;
			}
			set
			{
				if ((this._returncode != value))
				{
					if (this._Service_Error.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreturncodeChanging(value);
					this.SendPropertyChanging();
					this._returncode = value;
					this.SendPropertyChanged("returncode");
					this.OnreturncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnmessage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string returnmessage
		{
			get
			{
				return this._returnmessage;
			}
			set
			{
				if ((this._returnmessage != value))
				{
					this.OnreturnmessageChanging(value);
					this.SendPropertyChanging();
					this._returnmessage = value;
					this.SendPropertyChanged("returnmessage");
					this.OnreturnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_channel", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string channel
		{
			get
			{
				return this._channel;
			}
			set
			{
				if ((this._channel != value))
				{
					this.OnchannelChanging(value);
					this.SendPropertyChanging();
					this._channel = value;
					this.SendPropertyChanged("channel");
					this.OnchannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machineid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string machineid
		{
			get
			{
				return this._machineid;
			}
			set
			{
				if ((this._machineid != value))
				{
					this.OnmachineidChanging(value);
					this.SendPropertyChanging();
					this._machineid = value;
					this.SendPropertyChanged("machineid");
					this.OnmachineidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agentid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string agentid
		{
			get
			{
				return this._agentid;
			}
			set
			{
				if ((this._agentid != value))
				{
					this.OnagentidChanging(value);
					this.SendPropertyChanging();
					this._agentid = value;
					this.SendPropertyChanged("agentid");
					this.OnagentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticketid
		{
			get
			{
				return this._ticketid;
			}
			set
			{
				if ((this._ticketid != value))
				{
					this.OnticketidChanging(value);
					this.SendPropertyChanging();
					this._ticketid = value;
					this.SendPropertyChanged("ticketid");
					this.OnticketidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketwiningid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticketwiningid
		{
			get
			{
				return this._ticketwiningid;
			}
			set
			{
				if ((this._ticketwiningid != value))
				{
					this.OnticketwiningidChanging(value);
					this.SendPropertyChanging();
					this._ticketwiningid = value;
					this.SendPropertyChanged("ticketwiningid");
					this.OnticketwiningidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketuniqueid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticketuniqueid
		{
			get
			{
				return this._ticketuniqueid;
			}
			set
			{
				if ((this._ticketuniqueid != value))
				{
					this.OnticketuniqueidChanging(value);
					this.SendPropertyChanging();
					this._ticketuniqueid = value;
					this.SendPropertyChanged("ticketuniqueid");
					this.OnticketuniqueidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketsalesday", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticketsalesday
		{
			get
			{
				return this._ticketsalesday;
			}
			set
			{
				if ((this._ticketsalesday != value))
				{
					this.OnticketsalesdayChanging(value);
					this.SendPropertyChanging();
					this._ticketsalesday = value;
					this.SendPropertyChanged("ticketsalesday");
					this.OnticketsalesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketvalidity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticketvalidity
		{
			get
			{
				return this._ticketvalidity;
			}
			set
			{
				if ((this._ticketvalidity != value))
				{
					this.OnticketvalidityChanging(value);
					this.SendPropertyChanging();
					this._ticketvalidity = value;
					this.SendPropertyChanged("ticketvalidity");
					this.OnticketvalidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketdrawtime", DbType="VarChar(50)")]
		public string ticketdrawtime
		{
			get
			{
				return this._ticketdrawtime;
			}
			set
			{
				if ((this._ticketdrawtime != value))
				{
					this.OnticketdrawtimeChanging(value);
					this.SendPropertyChanging();
					this._ticketdrawtime = value;
					this.SendPropertyChanged("ticketdrawtime");
					this.OnticketdrawtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticketgameid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ticketgameid
		{
			get
			{
				return this._ticketgameid;
			}
			set
			{
				if ((this._ticketgameid != value))
				{
					this.OnticketgameidChanging(value);
					this.SendPropertyChanging();
					this._ticketgameid = value;
					this.SendPropertyChanged("ticketgameid");
					this.OnticketgameidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakebets1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string stakebets1
		{
			get
			{
				return this._stakebets1;
			}
			set
			{
				if ((this._stakebets1 != value))
				{
					this.Onstakebets1Changing(value);
					this.SendPropertyChanging();
					this._stakebets1 = value;
					this.SendPropertyChanged("stakebets1");
					this.Onstakebets1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakebets2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string stakebets2
		{
			get
			{
				return this._stakebets2;
			}
			set
			{
				if ((this._stakebets2 != value))
				{
					this.Onstakebets2Changing(value);
					this.SendPropertyChanging();
					this._stakebets2 = value;
					this.SendPropertyChanged("stakebets2");
					this.Onstakebets2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakenap", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string stakenap
		{
			get
			{
				return this._stakenap;
			}
			set
			{
				if ((this._stakenap != value))
				{
					this.OnstakenapChanging(value);
					this.SendPropertyChanging();
					this._stakenap = value;
					this.SendPropertyChanged("stakenap");
					this.OnstakenapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stakeperline", DbType="Int NOT NULL")]
		public int stakeperline
		{
			get
			{
				return this._stakeperline;
			}
			set
			{
				if ((this._stakeperline != value))
				{
					this.OnstakeperlineChanging(value);
					this.SendPropertyChanging();
					this._stakeperline = value;
					this.SendPropertyChanged("stakeperline");
					this.OnstakeperlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberlines", DbType="Int NOT NULL")]
		public int numberlines
		{
			get
			{
				return this._numberlines;
			}
			set
			{
				if ((this._numberlines != value))
				{
					this.OnnumberlinesChanging(value);
					this.SendPropertyChanging();
					this._numberlines = value;
					this.SendPropertyChanged("numberlines");
					this.OnnumberlinesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalamount", DbType="Decimal(15,2) NOT NULL")]
		public decimal totalamount
		{
			get
			{
				return this._totalamount;
			}
			set
			{
				if ((this._totalamount != value))
				{
					this.OntotalamountChanging(value);
					this.SendPropertyChanging();
					this._totalamount = value;
					this.SendPropertyChanged("totalamount");
					this.OntotalamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deletionstatus", DbType="Bit NOT NULL")]
		public bool deletionstatus
		{
			get
			{
				return this._deletionstatus;
			}
			set
			{
				if ((this._deletionstatus != value))
				{
					this.OndeletionstatusChanging(value);
					this.SendPropertyChanging();
					this._deletionstatus = value;
					this.SendPropertyChanged("deletionstatus");
					this.OndeletionstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deletiondate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string deletiondate
		{
			get
			{
				return this._deletiondate;
			}
			set
			{
				if ((this._deletiondate != value))
				{
					this.OndeletiondateChanging(value);
					this.SendPropertyChanging();
					this._deletiondate = value;
					this.SendPropertyChanged("deletiondate");
					this.OndeletiondateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deletionvalidity", DbType="VarChar(50)")]
		public string deletionvalidity
		{
			get
			{
				return this._deletionvalidity;
			}
			set
			{
				if ((this._deletionvalidity != value))
				{
					this.OndeletionvalidityChanging(value);
					this.SendPropertyChanging();
					this._deletionvalidity = value;
					this.SendPropertyChanged("deletionvalidity");
					this.OndeletionvalidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validitystatus", DbType="VarChar(50)")]
		public string validitystatus
		{
			get
			{
				return this._validitystatus;
			}
			set
			{
				if ((this._validitystatus != value))
				{
					this.OnvaliditystatusChanging(value);
					this.SendPropertyChanging();
					this._validitystatus = value;
					this.SendPropertyChanged("validitystatus");
					this.OnvaliditystatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket_service_response_type", DbType="Int")]
		public System.Nullable<int> ticket_service_response_type
		{
			get
			{
				return this._ticket_service_response_type;
			}
			set
			{
				if ((this._ticket_service_response_type != value))
				{
					if (this._ticket_service_response_type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onticket_service_response_typeChanging(value);
					this.SendPropertyChanging();
					this._ticket_service_response_type = value;
					this.SendPropertyChanged("ticket_service_response_type");
					this.Onticket_service_response_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responseDate", DbType="DateTime NOT NULL")]
		public System.DateTime responseDate
		{
			get
			{
				return this._responseDate;
			}
			set
			{
				if ((this._responseDate != value))
				{
					this.OnresponseDateChanging(value);
					this.SendPropertyChanging();
					this._responseDate = value;
					this.SendPropertyChanged("responseDate");
					this.OnresponseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Requests_Response_Ticket_Service_Response", Storage="_Requests_Response1", ThisKey="requests_response", OtherKey="id", IsForeignKey=true)]
		public Requests_Response Requests_Response1
		{
			get
			{
				return this._Requests_Response1.Entity;
			}
			set
			{
				Requests_Response previousValue = this._Requests_Response1.Entity;
				if (((previousValue != value) 
							|| (this._Requests_Response1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Requests_Response1.Entity = null;
						previousValue.Ticket_Service_Responses.Remove(this);
					}
					this._Requests_Response1.Entity = value;
					if ((value != null))
					{
						value.Ticket_Service_Responses.Add(this);
						this._requests_response = value.id;
					}
					else
					{
						this._requests_response = default(int);
					}
					this.SendPropertyChanged("Requests_Response1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Error_Ticket_Service_Response", Storage="_Service_Error", ThisKey="returncode", OtherKey="code", IsForeignKey=true)]
		public Service_Error Service_Error
		{
			get
			{
				return this._Service_Error.Entity;
			}
			set
			{
				Service_Error previousValue = this._Service_Error.Entity;
				if (((previousValue != value) 
							|| (this._Service_Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_Error.Entity = null;
						previousValue.Ticket_Service_Responses.Remove(this);
					}
					this._Service_Error.Entity = value;
					if ((value != null))
					{
						value.Ticket_Service_Responses.Add(this);
						this._returncode = value.code;
					}
					else
					{
						this._returncode = default(string);
					}
					this.SendPropertyChanged("Service_Error");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_service_response_type_Ticket_Service_Response", Storage="_ticket_service_response_type1", ThisKey="ticket_service_response_type", OtherKey="id", IsForeignKey=true)]
		public ticket_service_response_type ticket_service_response_type1
		{
			get
			{
				return this._ticket_service_response_type1.Entity;
			}
			set
			{
				ticket_service_response_type previousValue = this._ticket_service_response_type1.Entity;
				if (((previousValue != value) 
							|| (this._ticket_service_response_type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ticket_service_response_type1.Entity = null;
						previousValue.Ticket_Service_Responses.Remove(this);
					}
					this._ticket_service_response_type1.Entity = value;
					if ((value != null))
					{
						value.Ticket_Service_Responses.Add(this);
						this._ticket_service_response_type = value.id;
					}
					else
					{
						this._ticket_service_response_type = default(Nullable<int>);
					}
					this.SendPropertyChanged("ticket_service_response_type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ticket_service_response_type")]
	public partial class ticket_service_response_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Ticket_Service_Response> _Ticket_Service_Responses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public ticket_service_response_type()
		{
			this._Ticket_Service_Responses = new EntitySet<Ticket_Service_Response>(new Action<Ticket_Service_Response>(this.attach_Ticket_Service_Responses), new Action<Ticket_Service_Response>(this.detach_Ticket_Service_Responses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ticket_service_response_type_Ticket_Service_Response", Storage="_Ticket_Service_Responses", ThisKey="id", OtherKey="ticket_service_response_type")]
		public EntitySet<Ticket_Service_Response> Ticket_Service_Responses
		{
			get
			{
				return this._Ticket_Service_Responses;
			}
			set
			{
				this._Ticket_Service_Responses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ticket_Service_Responses(Ticket_Service_Response entity)
		{
			this.SendPropertyChanging();
			entity.ticket_service_response_type1 = this;
		}
		
		private void detach_Ticket_Service_Responses(Ticket_Service_Response entity)
		{
			this.SendPropertyChanging();
			entity.ticket_service_response_type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Status")]
	public partial class Ticket_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private EntitySet<Bet> _Bets;
		
		private EntitySet<Promo_Ticket> _Promo_Tickets;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public Ticket_Status()
		{
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Promo_Tickets = new EntitySet<Promo_Ticket>(new Action<Promo_Ticket>(this.attach_Promo_Tickets), new Action<Promo_Ticket>(this.detach_Promo_Tickets));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Status_Bet", Storage="_Bets", ThisKey="id", OtherKey="ticket_status")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Status_Promo_Ticket", Storage="_Promo_Tickets", ThisKey="id", OtherKey="status")]
		public EntitySet<Promo_Ticket> Promo_Tickets
		{
			get
			{
				return this._Promo_Tickets;
			}
			set
			{
				this._Promo_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Status_Ticket", Storage="_Tickets", ThisKey="id", OtherKey="ticket_status")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Status1 = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Status1 = null;
		}
		
		private void attach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Status = this;
		}
		
		private void detach_Promo_Tickets(Promo_Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Status = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Status1 = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Type")]
	public partial class Ticket_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private string _description;
		
		private EntitySet<Bet> _Bets;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Ticket_Type> _Ticket_Type2;
		
		private EntityRef<Ticket_Type> _Ticket_Type1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Ticket_Type()
		{
			this._Bets = new EntitySet<Bet>(new Action<Bet>(this.attach_Bets), new Action<Bet>(this.detach_Bets));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Ticket_Type2 = default(EntityRef<Ticket_Type>);
			this._Ticket_Type1 = default(EntityRef<Ticket_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Ticket_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Type_Bet", Storage="_Bets", ThisKey="id", OtherKey="ticket_type")]
		public EntitySet<Bet> Bets
		{
			get
			{
				return this._Bets;
			}
			set
			{
				this._Bets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Type_Ticket", Storage="_Tickets", ThisKey="id", OtherKey="ticket_type")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Type_Ticket_Type", Storage="_Ticket_Type2", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Ticket_Type Ticket_Type2
		{
			get
			{
				return this._Ticket_Type2.Entity;
			}
			set
			{
				Ticket_Type previousValue = this._Ticket_Type2.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Type2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Type2.Entity = null;
						previousValue.Ticket_Type1 = null;
					}
					this._Ticket_Type2.Entity = value;
					if ((value != null))
					{
						value.Ticket_Type1 = this;
					}
					this.SendPropertyChanged("Ticket_Type2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Type_Ticket_Type", Storage="_Ticket_Type1", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Ticket_Type Ticket_Type1
		{
			get
			{
				return this._Ticket_Type1.Entity;
			}
			set
			{
				Ticket_Type previousValue = this._Ticket_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Ticket_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket_Type1.Entity = null;
						previousValue.Ticket_Type2 = null;
					}
					this._Ticket_Type1.Entity = value;
					if ((value != null))
					{
						value.Ticket_Type2 = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("Ticket_Type1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Type1 = this;
		}
		
		private void detach_Bets(Bet entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Type1 = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Type1 = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Ticket_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaction_Category")]
	public partial class Transaction_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _code;
		
		private System.Nullable<int> _transaction_type;
		
		private string _details;
		
		private System.Nullable<bool> _isDeposit;
		
		private System.Nullable<bool> _isPayout;
		
		private System.Nullable<bool> _isGameType;
		
		private bool _isReversal;
		
		private System.Nullable<bool> _isBonus;
		
		private EntitySet<Customer_Deposit_Request> _Customer_Deposit_Requests;
		
		private EntitySet<Customer_Payout_Request> _Customer_Payout_Requests;
		
		private EntitySet<Customer_Transaction> _Customer_Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void Ontransaction_typeChanging(System.Nullable<int> value);
    partial void Ontransaction_typeChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnisDepositChanging(System.Nullable<bool> value);
    partial void OnisDepositChanged();
    partial void OnisPayoutChanging(System.Nullable<bool> value);
    partial void OnisPayoutChanged();
    partial void OnisGameTypeChanging(System.Nullable<bool> value);
    partial void OnisGameTypeChanged();
    partial void OnisReversalChanging(bool value);
    partial void OnisReversalChanged();
    partial void OnisBonusChanging(System.Nullable<bool> value);
    partial void OnisBonusChanged();
    #endregion
		
		public Transaction_Category()
		{
			this._Customer_Deposit_Requests = new EntitySet<Customer_Deposit_Request>(new Action<Customer_Deposit_Request>(this.attach_Customer_Deposit_Requests), new Action<Customer_Deposit_Request>(this.detach_Customer_Deposit_Requests));
			this._Customer_Payout_Requests = new EntitySet<Customer_Payout_Request>(new Action<Customer_Payout_Request>(this.attach_Customer_Payout_Requests), new Action<Customer_Payout_Request>(this.detach_Customer_Payout_Requests));
			this._Customer_Transactions = new EntitySet<Customer_Transaction>(new Action<Customer_Transaction>(this.attach_Customer_Transactions), new Action<Customer_Transaction>(this.detach_Customer_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(7)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_type", DbType="Int")]
		public System.Nullable<int> transaction_type
		{
			get
			{
				return this._transaction_type;
			}
			set
			{
				if ((this._transaction_type != value))
				{
					this.Ontransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._transaction_type = value;
					this.SendPropertyChanged("transaction_type");
					this.Ontransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(50)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeposit", DbType="Bit")]
		public System.Nullable<bool> isDeposit
		{
			get
			{
				return this._isDeposit;
			}
			set
			{
				if ((this._isDeposit != value))
				{
					this.OnisDepositChanging(value);
					this.SendPropertyChanging();
					this._isDeposit = value;
					this.SendPropertyChanged("isDeposit");
					this.OnisDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPayout", DbType="Bit")]
		public System.Nullable<bool> isPayout
		{
			get
			{
				return this._isPayout;
			}
			set
			{
				if ((this._isPayout != value))
				{
					this.OnisPayoutChanging(value);
					this.SendPropertyChanging();
					this._isPayout = value;
					this.SendPropertyChanged("isPayout");
					this.OnisPayoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isGameType", DbType="Bit")]
		public System.Nullable<bool> isGameType
		{
			get
			{
				return this._isGameType;
			}
			set
			{
				if ((this._isGameType != value))
				{
					this.OnisGameTypeChanging(value);
					this.SendPropertyChanging();
					this._isGameType = value;
					this.SendPropertyChanged("isGameType");
					this.OnisGameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isReversal", DbType="Bit NOT NULL")]
		public bool isReversal
		{
			get
			{
				return this._isReversal;
			}
			set
			{
				if ((this._isReversal != value))
				{
					this.OnisReversalChanging(value);
					this.SendPropertyChanging();
					this._isReversal = value;
					this.SendPropertyChanged("isReversal");
					this.OnisReversalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBonus", DbType="Bit")]
		public System.Nullable<bool> isBonus
		{
			get
			{
				return this._isBonus;
			}
			set
			{
				if ((this._isBonus != value))
				{
					this.OnisBonusChanging(value);
					this.SendPropertyChanging();
					this._isBonus = value;
					this.SendPropertyChanged("isBonus");
					this.OnisBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Category_Customer_Deposit_Request", Storage="_Customer_Deposit_Requests", ThisKey="id", OtherKey="transaction_category")]
		public EntitySet<Customer_Deposit_Request> Customer_Deposit_Requests
		{
			get
			{
				return this._Customer_Deposit_Requests;
			}
			set
			{
				this._Customer_Deposit_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Category_Customer_Payout_Request", Storage="_Customer_Payout_Requests", ThisKey="id", OtherKey="transaction_category")]
		public EntitySet<Customer_Payout_Request> Customer_Payout_Requests
		{
			get
			{
				return this._Customer_Payout_Requests;
			}
			set
			{
				this._Customer_Payout_Requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaction_Category_Customer_Transaction", Storage="_Customer_Transactions", ThisKey="id", OtherKey="transaction_category")]
		public EntitySet<Customer_Transaction> Customer_Transactions
		{
			get
			{
				return this._Customer_Transactions;
			}
			set
			{
				this._Customer_Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Transaction_Category1 = this;
		}
		
		private void detach_Customer_Deposit_Requests(Customer_Deposit_Request entity)
		{
			this.SendPropertyChanging();
			entity.Transaction_Category1 = null;
		}
		
		private void attach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Transaction_Category1 = this;
		}
		
		private void detach_Customer_Payout_Requests(Customer_Payout_Request entity)
		{
			this.SendPropertyChanging();
			entity.Transaction_Category1 = null;
		}
		
		private void attach_Customer_Transactions(Customer_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Transaction_Category1 = this;
		}
		
		private void detach_Customer_Transactions(Customer_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Transaction_Category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voucher")]
	public partial class Voucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _serial_number;
		
		private string _pin_number;
		
		private decimal _amount;
		
		private System.DateTime _generated_date;
		
		private System.DateTime _expirydate;
		
		private int _generated_by;
		
		private short _status;
		
		private System.Nullable<System.DateTime> _recharged_date;
		
		private string _details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onserial_numberChanging(string value);
    partial void Onserial_numberChanged();
    partial void Onpin_numberChanging(string value);
    partial void Onpin_numberChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Ongenerated_dateChanging(System.DateTime value);
    partial void Ongenerated_dateChanged();
    partial void OnexpirydateChanging(System.DateTime value);
    partial void OnexpirydateChanged();
    partial void Ongenerated_byChanging(int value);
    partial void Ongenerated_byChanged();
    partial void OnstatusChanging(short value);
    partial void OnstatusChanged();
    partial void Onrecharged_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrecharged_dateChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    #endregion
		
		public Voucher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serial_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string serial_number
		{
			get
			{
				return this._serial_number;
			}
			set
			{
				if ((this._serial_number != value))
				{
					this.Onserial_numberChanging(value);
					this.SendPropertyChanging();
					this._serial_number = value;
					this.SendPropertyChanged("serial_number");
					this.Onserial_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pin_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string pin_number
		{
			get
			{
				return this._pin_number;
			}
			set
			{
				if ((this._pin_number != value))
				{
					this.Onpin_numberChanging(value);
					this.SendPropertyChanging();
					this._pin_number = value;
					this.SendPropertyChanged("pin_number");
					this.Onpin_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_generated_date", DbType="DateTime NOT NULL")]
		public System.DateTime generated_date
		{
			get
			{
				return this._generated_date;
			}
			set
			{
				if ((this._generated_date != value))
				{
					this.Ongenerated_dateChanging(value);
					this.SendPropertyChanging();
					this._generated_date = value;
					this.SendPropertyChanged("generated_date");
					this.Ongenerated_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirydate", DbType="DateTime NOT NULL")]
		public System.DateTime expirydate
		{
			get
			{
				return this._expirydate;
			}
			set
			{
				if ((this._expirydate != value))
				{
					this.OnexpirydateChanging(value);
					this.SendPropertyChanging();
					this._expirydate = value;
					this.SendPropertyChanged("expirydate");
					this.OnexpirydateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_generated_by", DbType="Int NOT NULL")]
		public int generated_by
		{
			get
			{
				return this._generated_by;
			}
			set
			{
				if ((this._generated_by != value))
				{
					this.Ongenerated_byChanging(value);
					this.SendPropertyChanging();
					this._generated_by = value;
					this.SendPropertyChanged("generated_by");
					this.Ongenerated_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="SmallInt NOT NULL")]
		public short status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recharged_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> recharged_date
		{
			get
			{
				return this._recharged_date;
			}
			set
			{
				if ((this._recharged_date != value))
				{
					this.Onrecharged_dateChanging(value);
					this.SendPropertyChanging();
					this._recharged_date = value;
					this.SendPropertyChanged("recharged_date");
					this.Onrecharged_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(100)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.web_pay_request_response")]
	public partial class web_pay_request_response : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _service_response;
		
		private string _responsecode;
		
		private System.Nullable<int> _description;
		
		private string _amount;
		
		private string _date;
		
		private System.Nullable<int> _webpay_request;
		
		private EntityRef<Customer_Deposit_Request> _Customer_Deposit_Request;
		
		private EntityRef<Service_Error> _Service_Error;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onservice_responseChanging(System.Nullable<int> value);
    partial void Onservice_responseChanged();
    partial void OnresponsecodeChanging(string value);
    partial void OnresponsecodeChanged();
    partial void OndescriptionChanging(System.Nullable<int> value);
    partial void OndescriptionChanged();
    partial void OnamountChanging(string value);
    partial void OnamountChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void Onwebpay_requestChanging(System.Nullable<int> value);
    partial void Onwebpay_requestChanged();
    #endregion
		
		public web_pay_request_response()
		{
			this._Customer_Deposit_Request = default(EntityRef<Customer_Deposit_Request>);
			this._Service_Error = default(EntityRef<Service_Error>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_response", DbType="Int")]
		public System.Nullable<int> service_response
		{
			get
			{
				return this._service_response;
			}
			set
			{
				if ((this._service_response != value))
				{
					if (this._Service_Error.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_responseChanging(value);
					this.SendPropertyChanging();
					this._service_response = value;
					this.SendPropertyChanged("service_response");
					this.Onservice_responseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responsecode", DbType="VarChar(50)")]
		public string responsecode
		{
			get
			{
				return this._responsecode;
			}
			set
			{
				if ((this._responsecode != value))
				{
					this.OnresponsecodeChanging(value);
					this.SendPropertyChanging();
					this._responsecode = value;
					this.SendPropertyChanged("responsecode");
					this.OnresponsecodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Int")]
		public System.Nullable<int> description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="VarChar(50)")]
		public string amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_webpay_request", DbType="Int")]
		public System.Nullable<int> webpay_request
		{
			get
			{
				return this._webpay_request;
			}
			set
			{
				if ((this._webpay_request != value))
				{
					if (this._Customer_Deposit_Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwebpay_requestChanging(value);
					this.SendPropertyChanging();
					this._webpay_request = value;
					this.SendPropertyChanged("webpay_request");
					this.Onwebpay_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Deposit_Request_web_pay_request_response", Storage="_Customer_Deposit_Request", ThisKey="webpay_request", OtherKey="id", IsForeignKey=true)]
		public Customer_Deposit_Request Customer_Deposit_Request
		{
			get
			{
				return this._Customer_Deposit_Request.Entity;
			}
			set
			{
				Customer_Deposit_Request previousValue = this._Customer_Deposit_Request.Entity;
				if (((previousValue != value) 
							|| (this._Customer_Deposit_Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer_Deposit_Request.Entity = null;
						previousValue.web_pay_request_responses.Remove(this);
					}
					this._Customer_Deposit_Request.Entity = value;
					if ((value != null))
					{
						value.web_pay_request_responses.Add(this);
						this._webpay_request = value.id;
					}
					else
					{
						this._webpay_request = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer_Deposit_Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Error_web_pay_request_response", Storage="_Service_Error", ThisKey="service_response", OtherKey="id", IsForeignKey=true)]
		public Service_Error Service_Error
		{
			get
			{
				return this._Service_Error.Entity;
			}
			set
			{
				Service_Error previousValue = this._Service_Error.Entity;
				if (((previousValue != value) 
							|| (this._Service_Error.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service_Error.Entity = null;
						previousValue.web_pay_request_responses.Remove(this);
					}
					this._Service_Error.Entity = value;
					if ((value != null))
					{
						value.web_pay_request_responses.Add(this);
						this._service_response = value.id;
					}
					else
					{
						this._service_response = default(Nullable<int>);
					}
					this.SendPropertyChanged("Service_Error");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deleted_Customers")]
	public partial class Deleted_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _email;
		
		private string _fullname;
		
		private string _reasonfordeletion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnreasonfordeletionChanging(string value);
    partial void OnreasonfordeletionChanged();
    #endregion
		
		public Deleted_Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="VarChar(300)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reasonfordeletion", DbType="VarChar(1000)")]
		public string reasonfordeletion
		{
			get
			{
				return this._reasonfordeletion;
			}
			set
			{
				if ((this._reasonfordeletion != value))
				{
					this.OnreasonfordeletionChanging(value);
					this.SendPropertyChanging();
					this._reasonfordeletion = value;
					this.SendPropertyChanged("reasonfordeletion");
					this.OnreasonfordeletionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
